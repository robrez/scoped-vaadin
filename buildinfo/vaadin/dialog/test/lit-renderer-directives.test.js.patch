Index: test/lit-renderer-directives.test.js
===================================================================
--- test/lit-renderer-directives.test.js
+++ test/lit-renderer-directives.test.js
@@ -7,16 +7,16 @@
 
 async function renderOpenedDialog(container, { header, content, footer }) {
   render(
-    html`<vaadin-dialog
+    html`<vaadin23-dialog
       opened
       ${content ? dialogRenderer(() => html`${content}`, content) : null}
       ${header ? dialogHeaderRenderer(() => html`${header}`, header) : null}
       ${footer ? dialogFooterRenderer(() => html`${footer}`, footer) : null}
-    ></vaadin-dialog>`,
+    ></vaadin23-dialog>`,
     container,
   );
   await nextFrame();
-  return container.querySelector('vaadin-dialog');
+  return container.querySelector('vaadin23-dialog');
 }
 
 describe('lit renderer directives', () => {
@@ -57,9 +57,9 @@
 
       beforeEach(async () => {
         rendererSpy = sinon.spy();
-        render(html`<vaadin-dialog opened ${dialogRenderer(rendererSpy)}></vaadin-dialog>`, container);
+        render(html`<vaadin23-dialog opened ${dialogRenderer(rendererSpy)}></vaadin23-dialog>`, container);
         await nextFrame();
-        dialog = container.querySelector('vaadin-dialog');
+        dialog = container.querySelector('vaadin23-dialog');
       });
 
       it('should pass the dialog instance to the renderer', () => {
@@ -103,9 +103,9 @@
 
       beforeEach(async () => {
         rendererSpy = sinon.spy();
-        render(html`<vaadin-dialog opened ${dialogHeaderRenderer(rendererSpy)}></vaadin-dialog>`, container);
+        render(html`<vaadin23-dialog opened ${dialogHeaderRenderer(rendererSpy)}></vaadin23-dialog>`, container);
         await nextFrame();
-        dialog = container.querySelector('vaadin-dialog');
+        dialog = container.querySelector('vaadin23-dialog');
       });
 
       it('should pass the dialog instance to the renderer', () => {
@@ -149,9 +149,9 @@
 
       beforeEach(async () => {
         rendererSpy = sinon.spy();
-        render(html`<vaadin-dialog opened ${dialogFooterRenderer(rendererSpy)}></vaadin-dialog>`, container);
+        render(html`<vaadin23-dialog opened ${dialogFooterRenderer(rendererSpy)}></vaadin23-dialog>`, container);
         await nextFrame();
-        dialog = container.querySelector('vaadin-dialog');
+        dialog = container.querySelector('vaadin23-dialog');
       });
 
       it('should pass the dialog instance to the renderer', () => {
