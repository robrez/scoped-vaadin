Index: src/vaadin-menu-bar.js
===================================================================
--- src/vaadin-menu-bar.js
+++ src/vaadin-menu-bar.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2019 - 2022 Vaadin Ltd.
@@ -6,29 +7,29 @@
 import './vaadin-menu-bar-submenu.js';
 import './vaadin-menu-bar-button.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { DisabledMixin } from '@vaadin/component-base/src/disabled-mixin.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { DisabledMixin } from '@scoped-vaadin/component-base/src/disabled-mixin.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { ButtonsMixin } from './vaadin-menu-bar-buttons-mixin.js';
 import { InteractionsMixin } from './vaadin-menu-bar-interactions-mixin.js';
 
 /**
- * `<vaadin-menu-bar>` is a Web Component providing a set of horizontally stacked buttons offering
+ * `<vaadin23-menu-bar>` is a Web Component providing a set of horizontally stacked buttons offering
  * the user quick access to a consistent set of commands. Each button can toggle a submenu with
  * support for additional levels of nested menus.
  *
  * To create the menu bar, first add the component to the page:
  *
  * ```
- * <vaadin-menu-bar></vaadin-menu-bar>
+ * <vaadin23-menu-bar></vaadin23-menu-bar>
  * ```
  *
  * And then use [`items`](#/elements/vaadin-menu-bar#property-items) property to initialize the structure:
  *
  * ```
- * document.querySelector('vaadin-menu-bar').items = [{text: 'File'}, {text: 'Edit'}];
+ * document.querySelector('vaadin23-menu-bar').items = [{text: 'File'}, {text: 'Edit'}];
  * ```
  *
  * ### Styling
@@ -52,13 +53,13 @@
  *
  * ### Internal components
  *
- * In addition to `<vaadin-menu-bar>` itself, the following internal
+ * In addition to `<vaadin23-menu-bar>` itself, the following internal
  * components are themable:
  *
- * - `<vaadin-menu-bar-button>` - has the same API as [`<vaadin-button>`](#/elements/vaadin-button).
- * - `<vaadin-context-menu-item>` - has the same API as [`<vaadin-item>`](#/elements/vaadin-item).
- * - `<vaadin-context-menu-list-box>` - has the same API as [`<vaadin-list-box>`](#/elements/vaadin-list-box).
- * - `<vaadin-context-menu-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).
+ * - `<vaadin23-menu-bar-button>` - has the same API as [`<vaadin23-button>`](#/elements/vaadin-button).
+ * - `<vaadin23-context-menu-item>` - has the same API as [`<vaadin23-item>`](#/elements/vaadin-item).
+ * - `<vaadin23-context-menu-list-box>` - has the same API as [`<vaadin23-list-box>`](#/elements/vaadin-list-box).
+ * - `<vaadin23-context-menu-overlay>` - has the same API as [`<vaadin23-overlay>`](#/elements/vaadin-overlay).
  *
  * @fires {CustomEvent<boolean>} item-selected - Fired when a submenu item or menu bar button without children is clicked.
  *
@@ -109,18 +110,18 @@
       </style>
 
       <div part="container">
-        <vaadin-menu-bar-button part="overflow-button" hidden$="[[!_hasOverflow]]" aria-label$="[[i18n.moreOptions]]">
+        <vaadin23-menu-bar-button part="overflow-button" hidden$="[[!_hasOverflow]]" aria-label$="[[i18n.moreOptions]]">
           <div class="dots"></div>
-        </vaadin-menu-bar-button>
+        </vaadin23-menu-bar-button>
       </div>
-      <vaadin-menu-bar-submenu is-root=""></vaadin-menu-bar-submenu>
+      <vaadin23-menu-bar-submenu is-root=""></vaadin23-menu-bar-submenu>
 
       <slot name="tooltip"></slot>
     `;
   }
 
   static get is() {
-    return 'vaadin-menu-bar';
+    return 'vaadin23-menu-bar';
   }
 
   static get properties() {
@@ -130,9 +131,9 @@
        * @type {object}
        * @property {string} text - Text to be set as the menu button component's textContent.
        * @property {string} tooltip - Text to be set as the menu button's tooltip.
-       * Requires a `<vaadin-tooltip slot="tooltip">` element to be added inside the `<vaadin-menu-bar>`.
+       * Requires a `<vaadin23-tooltip slot="tooltip">` element to be added inside the `<vaadin23-menu-bar>`.
        * @property {union: string | object} component - The component to represent the button content.
-       * Either a tagName or an element instance. Defaults to "vaadin-context-menu-item".
+       * Either a tagName or an element instance. Defaults to "vaadin23-context-menu-item".
        * @property {boolean} disabled - If true, the button is disabled and cannot be activated.
        * @property {union: string | string[]} theme - Theme(s) to be set as the theme attribute of the button, overriding any theme set on the menu bar.
        * @property {SubMenuItem[]} children - Array of submenu items.
@@ -143,7 +144,7 @@
        * @type {object}
        * @property {string} text - Text to be set as the menu item component's textContent.
        * @property {union: string | object} component - The component to represent the item.
-       * Either a tagName or an element instance. Defaults to "vaadin-context-menu-item".
+       * Either a tagName or an element instance. Defaults to "vaadin23-context-menu-item".
        * @property {boolean} disabled - If true, the item is disabled and cannot be selected.
        * @property {boolean} checked - If true, the item shows a checkmark next to it.
        * @property {SubMenuItem[]} children - Array of child submenu items.
@@ -285,6 +286,6 @@
    */
 }
 
-customElements.define(MenuBar.is, MenuBar);
+internalCustomElements.define(MenuBar.is, MenuBar);
 
 export { MenuBar };
