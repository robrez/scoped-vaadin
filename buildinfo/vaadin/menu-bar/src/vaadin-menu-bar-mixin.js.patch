Index: src/vaadin-menu-bar-mixin.js
===================================================================
--- src/vaadin-menu-bar-mixin.js
+++ src/vaadin-menu-bar-mixin.js
@@ -6,16 +6,16 @@
 import { html, noChange, nothing, render } from 'lit';
 import { Directive, directive } from 'lit/directive.js';
 import { ifDefined } from 'lit/directives/if-defined.js';
-import { DisabledMixin } from '@vaadin/a11y-base/src/disabled-mixin.js';
-import { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';
-import { isElementFocused, isKeyboardActive } from '@vaadin/a11y-base/src/focus-utils.js';
-import { KeyboardDirectionMixin } from '@vaadin/a11y-base/src/keyboard-direction-mixin.js';
-import { microTask } from '@vaadin/component-base/src/async.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { Debouncer } from '@vaadin/component-base/src/debounce.js';
-import { I18nMixin } from '@vaadin/component-base/src/i18n-mixin.js';
-import { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';
-import { SlotController } from '@vaadin/component-base/src/slot-controller.js';
+import { DisabledMixin } from '@scoped-vaadin/a11y-base/src/disabled-mixin.js';
+import { FocusMixin } from '@scoped-vaadin/a11y-base/src/focus-mixin.js';
+import { isElementFocused, isKeyboardActive } from '@scoped-vaadin/a11y-base/src/focus-utils.js';
+import { KeyboardDirectionMixin } from '@scoped-vaadin/a11y-base/src/keyboard-direction-mixin.js';
+import { microTask } from '@scoped-vaadin/component-base/src/async.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { Debouncer } from '@scoped-vaadin/component-base/src/debounce.js';
+import { I18nMixin } from '@scoped-vaadin/component-base/src/i18n-mixin.js';
+import { ResizeMixin } from '@scoped-vaadin/component-base/src/resize-mixin.js';
+import { SlotController } from '@scoped-vaadin/component-base/src/slot-controller.js';
 
 /**
  * Custom Lit directive for rendering item components
@@ -77,9 +77,9 @@
          * @type {object}
          * @property {string} text - Text to be set as the menu button component's textContent.
          * @property {string} tooltip - Text to be set as the menu button's tooltip.
-         * Requires a `<vaadin-tooltip slot="tooltip">` element to be added inside the `<vaadin-menu-bar>`.
+         * Requires a `<vaadin24-tooltip slot="tooltip">` element to be added inside the `<vaadin24-menu-bar>`.
          * @property {union: string | object} component - The component to represent the button content.
-         * Either a tagName or an element instance. Defaults to "vaadin-menu-bar-item".
+         * Either a tagName or an element instance. Defaults to "vaadin24-menu-bar-item".
          * @property {boolean} disabled - If true, the button is disabled and cannot be activated.
          * @property {union: string | string[]} theme - Theme(s) to be set as the theme attribute of the button, overriding any theme set on the menu bar.
          * @property {SubMenuItem[]} children - Array of submenu items.
@@ -90,7 +90,7 @@
          * @type {object}
          * @property {string} text - Text to be set as the menu item component's textContent.
          * @property {union: string | object} component - The component to represent the item.
-         * Either a tagName or an element instance. Defaults to "vaadin-menu-bar-item".
+         * Either a tagName or an element instance. Defaults to "vaadin24-menu-bar-item".
          * @property {boolean} disabled - If true, the item is disabled and cannot be selected.
          * @property {boolean} checked - If true, the item shows a checkmark next to it.
          * @property {SubMenuItem[]} children - Array of child submenu items.
@@ -305,12 +305,12 @@
      * @protected
      */
     get _buttons() {
-      return Array.from(this.querySelectorAll('vaadin-menu-bar-button'));
+      return Array.from(this.querySelectorAll('vaadin24-menu-bar-button'));
     }
 
     /** @private */
     get _subMenu() {
-      return this.shadowRoot.querySelector('vaadin-menu-bar-submenu');
+      return this.shadowRoot.querySelector('vaadin24-menu-bar-submenu');
     }
 
     /** @protected */
@@ -319,7 +319,7 @@
 
       this.setAttribute('role', 'menubar');
 
-      this._overflowController = new SlotController(this, 'overflow', 'vaadin-menu-bar-button', {
+      this._overflowController = new SlotController(this, 'overflow', 'vaadin24-menu-bar-button', {
         initializer: (btn) => {
           btn.setAttribute('hidden', '');
 
@@ -614,10 +614,10 @@
 
       const isElement = itemComponent instanceof HTMLElement;
       // Use existing item component, if any
-      if (isElement && itemComponent.localName === 'vaadin-menu-bar-item') {
+      if (isElement && itemComponent.localName === 'vaadin24-menu-bar-item') {
         component = itemComponent;
       } else {
-        component = document.createElement('vaadin-menu-bar-item');
+        component = document.createElement('vaadin24-menu-bar-item');
         component.appendChild(isElement ? itemComponent : document.createElement(itemComponent));
       }
       if (item.text) {
@@ -642,7 +642,7 @@
             }
 
             return html`
-              <vaadin-menu-bar-button
+              <vaadin24-menu-bar-button
                 .item="${itemCopy}"
                 .disabled="${this.disabled || item.disabled}"
                 role="${this.tabNavigation ? 'button' : 'menuitem'}"
@@ -651,7 +651,7 @@
                 class="${ifDefined(item.className || nothing)}"
                 theme="${ifDefined(this.__getButtonTheme(item, this._theme) || nothing)}"
                 @click="${this.__onRootButtonClick}"
-                >${componentDirective(itemCopy)}</vaadin-menu-bar-button
+                >${componentDirective(itemCopy)}</vaadin24-menu-bar-button
               >
             `;
           })}
@@ -768,7 +768,7 @@
 
     /** @private */
     _getButtonFromEvent(e) {
-      return Array.from(e.composedPath()).find((el) => el.localName === 'vaadin-menu-bar-button');
+      return Array.from(e.composedPath()).find((el) => el.localName === 'vaadin24-menu-bar-button');
     }
 
     /**
