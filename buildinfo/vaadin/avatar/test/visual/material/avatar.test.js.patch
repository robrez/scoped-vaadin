Index: test/visual/material/avatar.test.js
===================================================================
--- test/visual/material/avatar.test.js
+++ test/visual/material/avatar.test.js
@@ -1,7 +1,7 @@
 import { fixtureSync } from '@vaadin/testing-helpers/dist/fixture.js';
 import { visualDiff } from '@web/test-runner-visual-regression';
 import '../../../theme/material/vaadin-avatar.js';
-import { Tooltip } from '@vaadin/tooltip/src/vaadin-tooltip.js';
+import { Tooltip } from '@scoped-vaadin/tooltip/src/vaadin-tooltip.js';
 
 describe('avatar', () => {
   let div, element;
@@ -10,7 +10,7 @@
     div = document.createElement('div');
     div.style.display = 'inline-block';
     div.style.padding = '10px';
-    element = fixtureSync('<vaadin-avatar></vaadin-avatar>', div);
+    element = fixtureSync('<vaadin24-avatar></vaadin24-avatar>', div);
   });
 
   before(() => {
@@ -65,7 +65,7 @@
   });
 
   /**
-   * Tests that images rendered in <vaadin-avatar> preserve their aspect ratio using object-fit: cover, instead of being
+   * Tests that images rendered in <vaadin24-avatar> preserve their aspect ratio using object-fit: cover, instead of being
    * stretched. Uses the Vaadin `}` as test image, which is higher than it is wide.
    */
   it('aspect-ratio', async () => {
