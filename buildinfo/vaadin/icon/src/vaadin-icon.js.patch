Index: icon/src/vaadin-icon.js
===================================================================
--- icon/src/vaadin-icon.js
+++ icon/src/vaadin-icon.js
@@ -4,12 +4,12 @@
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { defineCustomElement } from '@vaadin/component-base/src/define.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { SlotStylesMixin } from '@vaadin/component-base/src/slot-styles-mixin.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { defineCustomElement } from '@scoped-vaadin/component-base/src/define.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { SlotStylesMixin } from '@scoped-vaadin/component-base/src/slot-styles-mixin.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { IconFontSizeMixin } from './vaadin-icon-font-size-mixin.js';
 import { ensureSvgLiteral, renderSvg, unsafeSvgLiteral } from './vaadin-icon-svg.js';
 import { Iconset } from './vaadin-iconset.js';
@@ -17,21 +17,21 @@
 const srcCache = new Map();
 
 /**
- * `<vaadin-icon>` is a Web Component for displaying SVG icons.
+ * `<vaadin24-icon>` is a Web Component for displaying SVG icons.
  *
  * ### Icon property
  *
- * The `<vaadin-icon>` component is designed to be used as a drop-in replacement for `<iron-icon>`.
+ * The `<vaadin24-icon>` component is designed to be used as a drop-in replacement for `<iron-icon>`.
  * For example, you can use it with `vaadin-icons` like this:
  *
  * ```html
- * <vaadin-icon icon="vaadin:angle-down"></vaadin-icon>
+ * <vaadin24-icon icon="vaadin:angle-down"></vaadin24-icon>
  * ```
  *
  * Alternatively, you can also pick one of the Lumo icons:
  *
  * ```html
- * <vaadin-icon icon="lumo:user"></vaadin-icon>
+ * <vaadin24-icon icon="lumo:user"></vaadin24-icon>
  * ```
  *
  * ### Custom SVG icon
@@ -47,10 +47,10 @@
  * render() {
  *   const svgIcon = svg`<path d="M13 4v2l-5 5-5-5v-2l5 5z"></path>`;
  *   return html`
- *     <vaadin-icon
+ *     <vaadin24-icon
  *       .svg="${svgIcon}"
  *       size="16"
- *     ></vaadin-icon>
+ *     ></vaadin24-icon>
  *   `;
  * }
  * ```
@@ -130,7 +130,7 @@
   }
 
   static get is() {
-    return 'vaadin-icon';
+    return 'vaadin24-icon';
   }
 
   static get properties() {
@@ -141,9 +141,9 @@
        * to omit the first part and only use `icon_name` as a value.
        *
        * Setting the `icon` property updates the `svg` and `size` based on the
-       * values provided by the corresponding `vaadin-iconset` element.
+       * values provided by the corresponding `vaadin24-iconset` element.
        *
-       * See also [`name`](#/elements/vaadin-iconset#property-name) property of `vaadin-iconset`.
+       * See also [`name`](#/elements/vaadin-iconset#property-name) property of `vaadin24-iconset`.
        *
        * @attr {string} icon
        * @type {string}
