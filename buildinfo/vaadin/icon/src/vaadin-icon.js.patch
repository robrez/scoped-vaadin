Index: src/vaadin-icon.js
===================================================================
--- src/vaadin-icon.js
+++ src/vaadin-icon.js
@@ -1,34 +1,35 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2021 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { ensureSvgLiteral, renderSvg } from './vaadin-icon-svg.js';
 import { Iconset } from './vaadin-iconset.js';
 
 const DEFAULT_ICONSET = 'vaadin';
 
 /**
- * `<vaadin-icon>` is a Web Component for displaying SVG icons.
+ * `<vaadin23-icon>` is a Web Component for displaying SVG icons.
  *
  * ### Icon property
  *
- * The `<vaadin-icon>` component is designed to be used as a drop-in replacement for `<iron-icon>`.
+ * The `<vaadin23-icon>` component is designed to be used as a drop-in replacement for `<iron-icon>`.
  * For example, you can use it with `vaadin-icons` like this:
  *
  * ```html
- * <vaadin-icon icon="vaadin:angle-down"></vaadin-icon>
+ * <vaadin23-icon icon="vaadin:angle-down"></vaadin23-icon>
  * ```
  *
  * Alternatively, you can also pick one of the Lumo icons:
  *
  * ```html
- * <vaadin-icon icon="lumo:user"></vaadin-icon>
+ * <vaadin23-icon icon="lumo:user"></vaadin23-icon>
  * ```
  *
  * ### Custom SVG icon
@@ -44,10 +45,10 @@
  * render() {
  *   const svgIcon = svg`<path d="M13 4v2l-5 5-5-5v-2l5 5z"></path>`;
  *   return html`
- *     <vaadin-icon
+ *     <vaadin23-icon
  *       .svg="${svgIcon}"
  *       size="16"
- *     ></vaadin-icon>
+ *     ></vaadin23-icon>
  *   `;
  * }
  * ```
@@ -96,7 +97,7 @@
   }
 
   static get is() {
-    return 'vaadin-icon';
+    return 'vaadin23-icon';
   }
 
   static get properties() {
@@ -107,9 +108,9 @@
        * to omit the first part and only use `icon_name` as a value.
        *
        * Setting the `icon` property updates the `svg` and `size` based on the
-       * values provided by the corresponding `vaadin-iconset` element.
+       * values provided by the corresponding `vaadin23-iconset` element.
        *
-       * See also [`name`](#/elements/vaadin-iconset#property-name) property of `vaadin-iconset`.
+       * See also [`name`](#/elements/vaadin-iconset#property-name) property of `vaadin23-iconset`.
        *
        * @attr {string} icon
        * @type {string}
@@ -238,6 +239,6 @@
   }
 }
 
-customElements.define(Icon.is, Icon);
+internalCustomElements.define(Icon.is, Icon);
 
 export { Icon };
