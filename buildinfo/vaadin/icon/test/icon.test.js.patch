Index: test/icon.test.js
===================================================================
--- test/icon.test.js
+++ test/icon.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, nextFrame, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -11,7 +12,7 @@
 const PLUS = '<path d="M3.5,7V0M0,3.5h7"></path>';
 const MINUS = '<path d="M2 7h12v2h-12v-2z"></path>';
 
-describe('vaadin-icon', () => {
+describe('vaadin24-icon', () => {
   let icon, svgElement;
 
   function expectIcon(content) {
@@ -27,22 +28,22 @@
     let tagName;
 
     beforeEach(() => {
-      icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+      icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       tagName = icon.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
   describe('svg element', () => {
     beforeEach(() => {
-      icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+      icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       svgElement = icon.shadowRoot.querySelector('svg');
     });
 
@@ -54,7 +55,7 @@
 
   describe('svg property', () => {
     beforeEach(() => {
-      icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+      icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       svgElement = icon.shadowRoot.querySelector('svg');
     });
 
@@ -105,7 +106,7 @@
 
   describe('src property', () => {
     beforeEach(() => {
-      icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+      icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       svgElement = icon.shadowRoot.querySelector('svg');
     });
 
@@ -293,7 +294,7 @@
     it('should fetch the same src only once', async () => {
       icon.src = `data:image/svg+xml,${encodeURIComponent('<svg></svg')}`;
 
-      const icon2 = fixtureSync('<vaadin-icon></vaadin-icon>');
+      const icon2 = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       sinon.stub(icon2, '__fetch').resolves({ ok: true, text: () => Promise.resolve('<svg></svg>') });
       icon2.src = icon.src;
 
@@ -305,7 +306,7 @@
 
   describe('size property', () => {
     beforeEach(() => {
-      icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+      icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
       svgElement = icon.shadowRoot.querySelector('svg');
     });
 
@@ -328,7 +329,7 @@
 
     beforeEach(async () => {
       iconset = fixtureSync(`
-        <vaadin-iconset name="vaadin">
+        <vaadin24-iconset name="vaadin">
           <svg xmlns="http://www.w3.org/2000/svg">
             <defs>
               <g id="vaadin:angle-down">${ANGLE_DOWN}</g>
@@ -338,7 +339,7 @@
               <svg id="vaadin:minus" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="red">${MINUS}</svg>
             </defs>
           </svg>
-        </vaadin-iconset>
+        </vaadin24-iconset>
       `);
       icons = Array.from(iconset.querySelectorAll('[id]'));
       await nextRender();
@@ -346,7 +347,7 @@
 
     describe('default', () => {
       beforeEach(async () => {
-        icon = fixtureSync('<vaadin-icon></vaadin-icon>');
+        icon = fixtureSync('<vaadin24-icon></vaadin24-icon>');
         await nextRender();
         svgElement = icon.shadowRoot.querySelector('svg');
       });
@@ -410,13 +411,13 @@
         icon.icon = 'foo:angle-up';
 
         fixtureSync(`
-          <vaadin-iconset name="foo">
+          <vaadin24-iconset name="foo">
             <svg xmlns="http://www.w3.org/2000/svg">
               <defs>
                 <g id="foo:angle-up">${ANGLE_UP}</g>
               </defs>
             </svg>
-          </vaadin-iconset>
+          </vaadin24-iconset>
         `);
 
         expectIcon(`<g>${ANGLE_UP}</g>`);
@@ -442,7 +443,7 @@
 
     describe('set before attach', () => {
       beforeEach(() => {
-        icon = document.createElement('vaadin-icon');
+        icon = document.createElement('vaadin24-icon');
       });
 
       afterEach(() => {
