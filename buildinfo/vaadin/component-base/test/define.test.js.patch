Index: test/define.test.js
===================================================================
--- test/define.test.js
+++ test/define.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { defineCustomElement } from '../src/define.js';
 
@@ -14,11 +15,11 @@
     });
 
     it('should define a custom element', () => {
-      expect(customElements.get('x-element')).to.be.ok;
+      expect(internalCustomElements.get('x-element')).to.be.ok;
     });
 
     it('should have a valid version number', () => {
-      expect(customElements.get('x-element').version).to.match(/^(\d+\.)?(\d+\.)?(\d+)(-(alpha|beta|rc)\d+)?$/u);
+      expect(internalCustomElements.get('x-element').version).to.match(/^(\d+\.)?(\d+\.)?(\d+)(-(alpha|beta|rc)\d+)?$/u);
     });
   });
 
@@ -38,12 +39,12 @@
     });
 
     it('should not define an experimental custom element by default', () => {
-      expect(customElements.get('x-foo')).to.be.not.ok;
+      expect(internalCustomElements.get('x-foo')).to.be.not.ok;
     });
 
     it('should define an experimental custom element when flag is set after define', () => {
       window.Vaadin.featureFlags.fooComponent = true;
-      expect(customElements.get('x-foo')).to.be.ok;
+      expect(internalCustomElements.get('x-foo')).to.be.ok;
     });
 
     it('should define an experimental custom element when flag is set before define', () => {
@@ -59,7 +60,7 @@
           }
         },
       );
-      expect(customElements.get('x-foo-bar')).to.be.ok;
+      expect(internalCustomElements.get('x-foo-bar')).to.be.ok;
     });
 
     it('should support defining feature flag name using experimental getter', () => {
@@ -85,12 +86,12 @@
           }
         },
       );
-      expect(customElements.get('x-baz')).to.be.not.ok;
-      expect(customElements.get('x-baz-item')).to.be.not.ok;
+      expect(internalCustomElements.get('x-baz')).to.be.not.ok;
+      expect(internalCustomElements.get('x-baz-item')).to.be.not.ok;
 
       window.Vaadin.featureFlags.bazComponent = true;
-      expect(customElements.get('x-baz')).to.be.ok;
-      expect(customElements.get('x-baz-item')).to.be.ok;
+      expect(internalCustomElements.get('x-baz')).to.be.ok;
+      expect(internalCustomElements.get('x-baz-item')).to.be.ok;
     });
   });
 });
