Index: src/vaadin-grid-filter.js
===================================================================
--- src/vaadin-grid-filter.js
+++ src/vaadin-grid-filter.js
@@ -1,27 +1,28 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import '@vaadin/text-field/src/vaadin-text-field.js';
+import '@scoped-vaadin/text-field/src/vaadin-text-field.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { timeOut } from '@vaadin/component-base/src/async.js';
-import { Debouncer } from '@vaadin/component-base/src/debounce.js';
+import { timeOut } from '@scoped-vaadin/component-base/src/async.js';
+import { Debouncer } from '@scoped-vaadin/component-base/src/debounce.js';
 
 /**
- * `<vaadin-grid-filter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,
+ * `<vaadin23-grid-filter>` is a helper element for the `<vaadin23-grid>` that provides out-of-the-box UI controls,
  * and handlers for filtering the grid data.
  *
  * #### Example:
  * ```html
- * <vaadin-grid-column id="column"></vaadin-grid-column>
+ * <vaadin23-grid-column id="column"></vaadin23-grid-column>
  * ```
  * ```js
  * const column = document.querySelector('#column');
  * column.headerRenderer = (root, column) => {
  *   let filter = root.firstElementChild;
  *   if (!filter) {
- *     filter = document.createElement('vaadin-grid-filter');
+ *     filter = document.createElement('vaadin23-grid-filter');
  *     root.appendChild(filter);
  *   }
  *   filter.path = 'name.first';
@@ -50,13 +51,13 @@
         }
       </style>
       <slot name="filter">
-        <vaadin-text-field id="filter" value="{{value}}"></vaadin-text-field>
+        <vaadin23-text-field id="filter" value="{{value}}"></vaadin23-text-field>
       </slot>
     `;
   }
 
   static get is() {
-    return 'vaadin-grid-filter';
+    return 'vaadin23-grid-filter';
   }
 
   static get properties() {
@@ -95,7 +96,7 @@
 
     const child = this.firstElementChild;
     if (child && child.getAttribute('slot') !== 'filter') {
-      console.warn('Make sure you have assigned slot="filter" to the child elements of <vaadin-grid-filter>');
+      console.warn('Make sure you have assigned slot="filter" to the child elements of <vaadin23-grid-filter>');
       child.setAttribute('slot', 'filter');
     }
   }
@@ -120,6 +121,6 @@
   }
 }
 
-customElements.define(GridFilter.is, GridFilter);
+internalCustomElements.define(GridFilter.is, GridFilter);
 
 export { GridFilter };
