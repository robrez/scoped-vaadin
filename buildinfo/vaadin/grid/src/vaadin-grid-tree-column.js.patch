Index: src/vaadin-grid-tree-column.js
===================================================================
--- src/vaadin-grid-tree-column.js
+++ src/vaadin-grid-tree-column.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
@@ -7,21 +8,21 @@
 import { GridColumn } from './vaadin-grid-column.js';
 
 /**
- * `<vaadin-grid-tree-column>` is a helper element for the `<vaadin-grid>`
+ * `<vaadin23-grid-tree-column>` is a helper element for the `<vaadin23-grid>`
  * that provides default renderer and functionality for toggling tree/hierarchical items.
  *
  * #### Example:
  * ```html
- * <vaadin-grid items="[[items]]">
- *  <vaadin-grid-tree-column path="name.first"></vaadin-grid-tree-column>
+ * <vaadin23-grid items="[[items]]">
+ *  <vaadin23-grid-tree-column path="name.first"></vaadin23-grid-tree-column>
  *
- *  <vaadin-grid-column>
+ *  <vaadin23-grid-column>
  *    ...
  * ```
  */
 class GridTreeColumn extends GridColumn {
   static get is() {
-    return 'vaadin-grid-tree-column';
+    return 'vaadin23-grid-tree-column';
   }
 
   static get properties() {
@@ -61,7 +62,7 @@
   __defaultRenderer(root, _column, { item, expanded, level }) {
     let toggle = root.firstElementChild;
     if (!toggle) {
-      toggle = document.createElement('vaadin-grid-tree-toggle');
+      toggle = document.createElement('vaadin23-grid-tree-toggle');
       toggle.addEventListener('expanded-changed', this.__boundOnExpandedChanged);
       root.appendChild(toggle);
     }
@@ -89,7 +90,7 @@
   _itemHasChildrenPathChanged(itemHasChildrenPath) {
     if (itemHasChildrenPath) {
       console.warn(
-        `WARNING: Since Vaadin 23, itemHasChildrenPath on <vaadin-grid-tree-column> is deprecated. Please set this property on the <vaadin-grid> instead.`,
+        `WARNING: Since Vaadin 23, itemHasChildrenPath on <vaadin23-grid-tree-column> is deprecated. Please set this property on the <vaadin23-grid> instead.`,
       );
 
       if (this._grid) {
@@ -128,6 +129,6 @@
   }
 }
 
-customElements.define(GridTreeColumn.is, GridTreeColumn);
+internalCustomElements.define(GridTreeColumn.is, GridTreeColumn);
 
 export { GridTreeColumn };
