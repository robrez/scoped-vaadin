Index: src/vaadin-grid-filter-column.js
===================================================================
--- src/vaadin-grid-filter-column.js
+++ src/vaadin-grid-filter-column.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
@@ -7,21 +8,21 @@
 import { GridColumn } from './vaadin-grid-column.js';
 
 /**
- * `<vaadin-grid-filter-column>` is a helper element for the `<vaadin-grid>`
+ * `<vaadin23-grid-filter-column>` is a helper element for the `<vaadin23-grid>`
  * that provides default header renderer and functionality for filtering.
  *
  * #### Example:
  * ```html
- * <vaadin-grid items="[[items]]">
- *  <vaadin-grid-filter-column path="name.first"></vaadin-grid-filter-column>
+ * <vaadin23-grid items="[[items]]">
+ *  <vaadin23-grid-filter-column path="name.first"></vaadin23-grid-filter-column>
  *
- *  <vaadin-grid-column>
+ *  <vaadin23-grid-column>
  *    ...
  * ```
  */
 class GridFilterColumn extends GridColumn {
   static get is() {
-    return 'vaadin-grid-filter-column';
+    return 'vaadin23-grid-filter-column';
   }
 
   static get properties() {
@@ -58,8 +59,8 @@
     let textField = filter ? filter.firstElementChild : undefined;
 
     if (!filter) {
-      filter = document.createElement('vaadin-grid-filter');
-      textField = document.createElement('vaadin-text-field');
+      filter = document.createElement('vaadin23-grid-filter');
+      textField = document.createElement('vaadin23-text-field');
       textField.setAttribute('slot', 'filter');
       textField.setAttribute('theme', 'small');
       textField.setAttribute('style', 'max-width: 100%;');
@@ -115,6 +116,6 @@
   }
 }
 
-customElements.define(GridFilterColumn.is, GridFilterColumn);
+internalCustomElements.define(GridFilterColumn.is, GridFilterColumn);
 
 export { GridFilterColumn };
