Index: src/vaadin-grid-selection-column.d.ts
===================================================================
--- src/vaadin-grid-selection-column.d.ts
+++ src/vaadin-grid-selection-column.d.ts
@@ -18,19 +18,19 @@
 export interface GridSelectionColumnEventMap extends HTMLElementEventMap, GridSelectionColumnCustomEventMap {}
 
 /**
- * `<vaadin-grid-selection-column>` is a helper element for the `<vaadin-grid>`
+ * `<vaadin23-grid-selection-column>` is a helper element for the `<vaadin23-grid>`
  * that provides default renderers and functionality for item selection.
  *
  * #### Example:
  * ```html
- * <vaadin-grid items="[[items]]">
- *  <vaadin-grid-selection-column frozen auto-select></vaadin-grid-selection-column>
+ * <vaadin23-grid items="[[items]]">
+ *  <vaadin23-grid-selection-column frozen auto-select></vaadin23-grid-selection-column>
  *
- *  <vaadin-grid-column>
+ *  <vaadin23-grid-column>
  *    ...
  * ```
  *
- * By default the selection column displays `<vaadin-checkbox>` elements in the
+ * By default the selection column displays `<vaadin23-checkbox>` elements in the
  * column cells. The checkboxes in the body rows toggle selection of the corresponding row items.
  *
  * When the grid data is provided as an array of [`items`](#/elements/vaadin-grid#property-items),
@@ -69,7 +69,7 @@
 
 declare global {
   interface HTMLElementTagNameMap {
-    'vaadin-grid-selection-column': GridSelectionColumn<GridDefaultItem>;
+    'vaadin23-grid-selection-column': GridSelectionColumn<GridDefaultItem>;
   }
 }
 
