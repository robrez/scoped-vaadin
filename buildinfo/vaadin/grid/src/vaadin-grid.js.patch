Index: src/vaadin-grid.js
===================================================================
--- src/vaadin-grid.js
+++ src/vaadin-grid.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
@@ -7,17 +8,17 @@
 import './vaadin-grid-styles.js';
 import { beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { microTask } from '@vaadin/component-base/src/async.js';
-import { isAndroid, isChrome, isFirefox, isIOS, isSafari, isTouch } from '@vaadin/component-base/src/browser-utils.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { Debouncer } from '@vaadin/component-base/src/debounce.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { isElementHidden } from '@vaadin/component-base/src/focus-utils.js';
-import { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';
-import { processTemplates } from '@vaadin/component-base/src/templates.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { microTask } from '@scoped-vaadin/component-base/src/async.js';
+import { isAndroid, isChrome, isFirefox, isIOS, isSafari, isTouch } from '@scoped-vaadin/component-base/src/browser-utils.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { Debouncer } from '@scoped-vaadin/component-base/src/debounce.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { isElementHidden } from '@scoped-vaadin/component-base/src/focus-utils.js';
+import { TabindexMixin } from '@scoped-vaadin/component-base/src/tabindex-mixin.js';
+import { processTemplates } from '@scoped-vaadin/component-base/src/templates.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { Virtualizer } from '@scoped-vaadin/component-base/src/virtualizer.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { A11yMixin } from './vaadin-grid-a11y-mixin.js';
 import { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';
 import { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';
@@ -36,26 +37,26 @@
 import { StylingMixin } from './vaadin-grid-styling-mixin.js';
 
 /**
- * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the
+ * `<vaadin23-grid>` is a free, high quality data grid / data table Web Component. The content of the
  * the grid can be populated by using renderer callback function.
  *
  * ### Quick Start
  *
  * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.
  *
- * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`
+ * Use the [`<vaadin23-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`
  * shorthand properties for the columns to define what gets rendered in the cells of the column.
  *
  * #### Example:
  * ```html
- * <vaadin-grid>
- *   <vaadin-grid-column path="name.first" header="First name"></vaadin-grid-column>
- *   <vaadin-grid-column path="name.last" header="Last name"></vaadin-grid-column>
- *   <vaadin-grid-column path="email"></vaadin-grid-column>
- * </vaadin-grid>
+ * <vaadin23-grid>
+ *   <vaadin23-grid-column path="name.first" header="First name"></vaadin23-grid-column>
+ *   <vaadin23-grid-column path="name.last" header="Last name"></vaadin23-grid-column>
+ *   <vaadin23-grid-column path="email"></vaadin23-grid-column>
+ * </vaadin23-grid>
  * ```
  *
- * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,
+ * For custom content `vaadin23-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,
  * `renderer` and `footerRenderer`.
  *
  * Each of those renderer functions provides `root`, `column`, `model` arguments when applicable.
@@ -70,18 +71,18 @@
  *
  * #### Example:
  * ```html
- * <vaadin-grid>
- *   <vaadin-grid-column></vaadin-grid-column>
- *   <vaadin-grid-column></vaadin-grid-column>
- *   <vaadin-grid-column></vaadin-grid-column>
- * </vaadin-grid>
+ * <vaadin23-grid>
+ *   <vaadin23-grid-column></vaadin23-grid-column>
+ *   <vaadin23-grid-column></vaadin23-grid-column>
+ *   <vaadin23-grid-column></vaadin23-grid-column>
+ * </vaadin23-grid>
  * ```
  * ```js
- * const grid = document.querySelector('vaadin-grid');
+ * const grid = document.querySelector('vaadin23-grid');
  * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},
  *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];
  *
- * const columns = grid.querySelectorAll('vaadin-grid-column');
+ * const columns = grid.querySelectorAll('vaadin23-grid-column');
  *
  * columns[0].headerRenderer = function(root) {
  *   root.textContent = 'Name';
@@ -117,11 +118,11 @@
  * `detailsOpened` | Boolean | True if the item's row details are open.
  *
  * The following helper elements can be used for further customization:
- * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)
- * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)
- * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)
- * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)
- * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)
+ * - [`<vaadin23-grid-column-group>`](#/elements/vaadin-grid-column-group)
+ * - [`<vaadin23-grid-filter>`](#/elements/vaadin-grid-filter)
+ * - [`<vaadin23-grid-sorter>`](#/elements/vaadin-grid-sorter)
+ * - [`<vaadin23-grid-selection-column>`](#/elements/vaadin-grid-selection-column)
+ * - [`<vaadin23-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)
  *
  * __Note that the helper elements must be explicitly imported.__
  * If you want to import everything at once you can use the `all-imports.html` bundle.
@@ -129,9 +130,9 @@
  * ### Lazy Loading with Function Data Provider
  *
  * In addition to assigning an array to the items property, you can alternatively
- * provide the `<vaadin-grid>` data through the
+ * provide the `<vaadin23-grid>` data through the
  * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.
- * The `<vaadin-grid>` calls this function lazily, only when it needs more data
+ * The `<vaadin23-grid>` calls this function lazily, only when it needs more data
  * to be displayed.
  *
  * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in
@@ -312,7 +313,7 @@
   }
 
   static get is() {
-    return 'vaadin-grid';
+    return 'vaadin23-grid';
   }
 
   static get observers() {
@@ -855,7 +856,7 @@
         } else {
           // Header & footer
           const tagName = section === 'header' ? 'th' : 'td';
-          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {
+          if (isColumnRow || column.localName === 'vaadin23-grid-column-group') {
             cell = column[`_${section}Cell`] || this._createCell(tagName);
             cell._column = column;
             row.appendChild(cell);
@@ -1180,6 +1181,6 @@
   }
 }
 
-customElements.define(Grid.is, Grid);
+internalCustomElements.define(Grid.is, Grid);
 
 export { Grid };
