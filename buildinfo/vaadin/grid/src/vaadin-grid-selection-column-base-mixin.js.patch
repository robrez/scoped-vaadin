Index: grid/src/vaadin-grid-selection-column-base-mixin.js
===================================================================
--- grid/src/vaadin-grid-selection-column-base-mixin.js	null
+++ grid/src/vaadin-grid-selection-column-base-mixin.js	null
@@ -3,17 +3,17 @@
  * Copyright (c) 2016 - 2023 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import { addListener } from '@vaadin/component-base/src/gestures.js';
+import { addListener } from '@scoped-vaadin/component-base/src/gestures.js';
 
 /**
  * A mixin that provides basic functionality for the
- * `<vaadin-grid-selection-column>`. This includes properties, cell rendering,
+ * `<vaadin24-grid-selection-column>`. This includes properties, cell rendering,
  * and overridable methods for handling changes to the selection state.
  *
  * **NOTE**: This mixin is re-used by the Flow component, and as such must not
  * implement any selection state updates for the column element or the grid.
  * Web component-specific selection state updates must be implemented in the
- * `<vaadin-grid-selection-column>` itself, by overriding the protected methods
+ * `<vaadin24-grid-selection-column>` itself, by overriding the protected methods
  * provided by this mixin.
  *
  * @polymerMixin
@@ -101,7 +101,7 @@
     _defaultHeaderRenderer(root, _column) {
       let checkbox = root.firstElementChild;
       if (!checkbox) {
-        checkbox = document.createElement('vaadin-checkbox');
+        checkbox = document.createElement('vaadin24-checkbox');
         checkbox.setAttribute('aria-label', 'Select All');
         checkbox.classList.add('vaadin-grid-select-all-checkbox');
         root.appendChild(checkbox);
@@ -124,7 +124,7 @@
     _defaultRenderer(root, _column, { item, selected }) {
       let checkbox = root.firstElementChild;
       if (!checkbox) {
-        checkbox = document.createElement('vaadin-checkbox');
+        checkbox = document.createElement('vaadin24-checkbox');
         checkbox.setAttribute('aria-label', 'Select Row');
         root.appendChild(checkbox);
         // Add listener after appending, so we can skip the initial change event
