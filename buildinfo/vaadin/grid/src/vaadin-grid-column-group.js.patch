Index: src/vaadin-grid-column-group.js
===================================================================
--- src/vaadin-grid-column-group.js
+++ src/vaadin-grid-column-group.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
@@ -5,23 +6,23 @@
  */
 import { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';
 import { PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { animationFrame, microTask } from '@vaadin/component-base/src/async.js';
-import { Debouncer } from '@vaadin/component-base/src/debounce.js';
+import { animationFrame, microTask } from '@scoped-vaadin/component-base/src/async.js';
+import { Debouncer } from '@scoped-vaadin/component-base/src/debounce.js';
 import { ColumnBaseMixin } from './vaadin-grid-column.js';
 import { updateColumnOrders } from './vaadin-grid-helpers.js';
 
 /**
- * A `<vaadin-grid-column-group>` is used to make groups of columns in `<vaadin-grid>` and
+ * A `<vaadin23-grid-column-group>` is used to make groups of columns in `<vaadin23-grid>` and
  * to configure additional headers and footers.
  *
  * Groups can be nested to create complex header and footer configurations.
  *
  * #### Example:
  * ```html
- * <vaadin-grid-column-group resizable id="columnGroup">
- *   <vaadin-grid-column id="column1"></vaadin-grid-column>
- *   <vaadin-grid-column id="column2"></vaadin-grid-column>
- * </vaadin-grid-column-group>
+ * <vaadin23-grid-column-group resizable id="columnGroup">
+ *   <vaadin23-grid-column id="column1"></vaadin23-grid-column>
+ *   <vaadin23-grid-column id="column2"></vaadin23-grid-column>
+ * </vaadin23-grid-column-group>
  * ```
  *
  * ```js
@@ -44,7 +45,7 @@
  */
 class GridColumnGroup extends ColumnBaseMixin(PolymerElement) {
   static get is() {
-    return 'vaadin-grid-column-group';
+    return 'vaadin23-grid-column-group';
   }
 
   static get properties() {
@@ -398,6 +399,6 @@
   }
 }
 
-customElements.define(GridColumnGroup.is, GridColumnGroup);
+internalCustomElements.define(GridColumnGroup.is, GridColumnGroup);
 
 export { GridColumnGroup };
