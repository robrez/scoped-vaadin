Index: src/vaadin-grid-sort-column.js
===================================================================
--- src/vaadin-grid-sort-column.js
+++ src/vaadin-grid-sort-column.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2016 - 2022 Vaadin Ltd.
@@ -7,15 +8,15 @@
 import { GridColumn } from './vaadin-grid-column.js';
 
 /**
- * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`
+ * `<vaadin23-grid-sort-column>` is a helper element for the `<vaadin23-grid>`
  * that provides default header renderer and functionality for sorting.
  *
  * #### Example:
  * ```html
- * <vaadin-grid items="[[items]]">
- *  <vaadin-grid-sort-column path="name.first" direction="asc"></vaadin-grid-sort-column>
+ * <vaadin23-grid items="[[items]]">
+ *  <vaadin23-grid-sort-column path="name.first" direction="asc"></vaadin23-grid-sort-column>
  *
- *  <vaadin-grid-column>
+ *  <vaadin23-grid-column>
  *    ...
  * ```
  *
@@ -23,7 +24,7 @@
  */
 class GridSortColumn extends GridColumn {
   static get is() {
-    return 'vaadin-grid-sort-column';
+    return 'vaadin23-grid-sort-column';
   }
 
   static get properties() {
@@ -64,7 +65,7 @@
   _defaultHeaderRenderer(root, _column) {
     let sorter = root.firstElementChild;
     if (!sorter) {
-      sorter = document.createElement('vaadin-grid-sorter');
+      sorter = document.createElement('vaadin23-grid-sorter');
       sorter.addEventListener('direction-changed', this.__boundOnDirectionChanged);
       root.appendChild(sorter);
     }
@@ -113,6 +114,6 @@
   }
 }
 
-customElements.define(GridSortColumn.is, GridSortColumn);
+internalCustomElements.define(GridSortColumn.is, GridSortColumn);
 
 export { GridSortColumn };
