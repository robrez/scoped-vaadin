Index: test/column-resizing.test.js
===================================================================
--- test/column-resizing.test.js
+++ test/column-resizing.test.js
@@ -1,7 +1,7 @@
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, listenOnce, nextFrame, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/polymer-legacy-adapter/template-renderer.js';
+import '@scoped-vaadin/polymer-legacy-adapter/template-renderer.js';
 import '../vaadin-grid.js';
 import '../vaadin-grid-column-group.js';
 import {
@@ -23,16 +23,16 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px" column-reordering-allowed>
-        <vaadin-grid-column resizable>
+      <vaadin23-grid size="1" style="width: 300px; height: 400px" column-reordering-allowed>
+        <vaadin23-grid-column resizable>
           <template class="header">0</template>
           <template>0</template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">1</template>
           <template>1</template>
-        </vaadin-grid-column>
-      </vaadin-grid>
+        </vaadin23-grid-column>
+      </vaadin23-grid>
     `);
     grid.dataProvider = infiniteDataProvider;
     flushGrid(grid);
@@ -235,19 +235,19 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px">
-        <vaadin-grid-column-group resizable>
+      <vaadin23-grid size="1" style="width: 300px; height: 400px">
+        <vaadin23-grid-column-group resizable>
           <template class="header">0</template>
-          <vaadin-grid-column flex-grow="0">
+          <vaadin23-grid-column flex-grow="0">
             <template class="header">0</template>
             <template>0</template>
-          </vaadin-grid-column>
-          <vaadin-grid-column flex-grow="0">
+          </vaadin23-grid-column>
+          <vaadin23-grid-column flex-grow="0">
             <template class="header">1</template>
             <template>1</template>
-          </vaadin-grid-column>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+          </vaadin23-grid-column>
+        </vaadin23-grid-column-group>
+      </vaadin23-grid>
     `);
     grid.dataProvider = infiniteDataProvider;
     flushGrid(grid);
@@ -261,7 +261,7 @@
   });
 
   it('should inherit resizable value from parent group', async () => {
-    const newColumn = document.createElement('vaadin-grid-column');
+    const newColumn = document.createElement('vaadin23-grid-column');
     grid._columnTree[0][0].appendChild(newColumn);
     grid._columnTree[0][0]._observer.flush();
 
@@ -270,13 +270,13 @@
   });
 
   it('should have resizable false by default on column', () => {
-    const newColumn = document.createElement('vaadin-grid-column');
+    const newColumn = document.createElement('vaadin23-grid-column');
 
     expect(newColumn.resizable).to.be.false;
   });
 
   it('should not have resizable by default on column group', () => {
-    const newColumn = document.createElement('vaadin-grid-column-group');
+    const newColumn = document.createElement('vaadin23-grid-column-group');
 
     expect(newColumn.resizable).to.be.undefined;
   });
@@ -322,28 +322,28 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px">
-        <vaadin-grid-column-group resizable>
+      <vaadin23-grid size="1" style="width: 300px; height: 400px">
+        <vaadin23-grid-column-group resizable>
           <template class="header">0</template>
-          <vaadin-grid-column-group resizable>
+          <vaadin23-grid-column-group resizable>
             <template class="header">1</template>
-            <vaadin-grid-column resizable>
+            <vaadin23-grid-column resizable>
               <template class="header">2</template>
               <template>2</template>
-            </vaadin-grid-column>
-          </vaadin-grid-column-group>
-        </vaadin-grid-column-group>
-        <vaadin-grid-column-group>
+            </vaadin23-grid-column>
+          </vaadin23-grid-column-group>
+        </vaadin23-grid-column-group>
+        <vaadin23-grid-column-group>
           <template class="header">3</template>
-          <vaadin-grid-column-group>
+          <vaadin23-grid-column-group>
             <template class="header">4</template>
-            <vaadin-grid-column>
+            <vaadin23-grid-column>
               <template class="header">5</template>
               <template>5</template>
-            </vaadin-grid-column>
-          </vaadin-grid-column-group>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+            </vaadin23-grid-column>
+          </vaadin23-grid-column-group>
+        </vaadin23-grid-column-group>
+      </vaadin23-grid>
     `);
     grid.dataProvider = infiniteDataProvider;
     flushGrid(grid);
