Index: test/row-details.test.js
===================================================================
--- test/row-details.test.js
+++ test/row-details.test.js
@@ -38,12 +38,12 @@
 
   it('should not increase row update count', () => {
     grid = fixtureSync(`
-      <vaadin-grid style="width: 50px; height: 400px" size="100">
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid style="width: 50px; height: 400px" size="100">
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     grid.rowDetailsRenderer = simpleDetailsRenderer;
-    grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+    grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
     const spy = sinon.spy(grid, '_updateRow');
     grid.size = 1;
@@ -55,12 +55,12 @@
   describe('simple', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 50px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 50px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = simpleDetailsRenderer;
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
       grid.dataProvider = infiniteDataProvider;
       flushGrid(grid);
@@ -209,9 +209,9 @@
 
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
 
       grid.rowDetailsRenderer = (root, _grid, { item }) => {
@@ -222,7 +222,7 @@
         `;
       };
 
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
     });
 
     it('should have correct height', () => {
@@ -247,12 +247,12 @@
     beforeEach(async () => {
       dataset = buildDataSet(10);
       grid = fixtureSync(`
-        <vaadin-grid style="width: 50px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 50px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = simpleDetailsRenderer;
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
       grid.dataProvider = dataProvider;
       flushGrid(grid);
@@ -324,9 +324,9 @@
   describe('lazily set details renderer', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.items = [{ name: 'foo' }];
       await nextFrame();
@@ -364,9 +364,9 @@
 
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = (root) => {
         // Render the details cell with a height of 100px
