Index: test/light-dom-observing.test.js
===================================================================
--- test/light-dom-observing.test.js
+++ test/light-dom-observing.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { fixtureSync, nextFrame, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -20,24 +21,24 @@
     this.attachShadow({ mode: 'open' });
 
     this.shadowRoot.innerHTML = `
-      <vaadin-grid id="grid" size="10">
+      <vaadin24-grid id="grid" size="10">
         <slot name="grid"></slot>
-        <vaadin-grid-column-group header="wrapper group header">
+        <vaadin24-grid-column-group header="wrapper group header">
           <slot name="group"></slot>
 
-          <vaadin-grid-column
+          <vaadin24-grid-column
             header="wrapper column header"
-          ></vaadin-grid-column>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+          ></vaadin24-grid-column>
+        </vaadin24-grid-column-group>
+      </vaadin24-grid>
     `;
 
-    const group = this.shadowRoot.querySelector('vaadin-grid-column-group');
+    const group = this.shadowRoot.querySelector('vaadin24-grid-column-group');
     group.footerRenderer = (root) => {
       root.textContent = 'wrapper group footer';
     };
 
-    const column = group.querySelector('vaadin-grid-column');
+    const column = group.querySelector('vaadin24-grid-column');
     column.footerRenderer = (root) => {
       root.textContent = 'wrapper column footer';
     };
@@ -48,10 +49,10 @@
   }
 }
 
-customElements.define('grid-wrapper', GridWrapper);
+internalCustomElements.define('grid-wrapper', GridWrapper);
 
 function createColumn() {
-  const column = document.createElement('vaadin-grid-column');
+  const column = document.createElement('vaadin24-grid-column');
   column.header = 'some header';
   column.footerRenderer = (root) => {
     root.textContent = 'some footer';
@@ -63,17 +64,17 @@
 }
 
 function createGroup() {
-  const group = document.createElement('vaadin-grid-column-group');
+  const group = document.createElement('vaadin24-grid-column-group');
   group.innerHTML = `
-    <vaadin-grid-column header="some foo header" footer="some foo footer" prefix="some foo body"></vaadin-grid-column>
-    <vaadin-grid-column header="some bar header" footer="some bar footer" prefix="some bar body"></vaadin-grid-column>
+    <vaadin24-grid-column header="some foo header" footer="some foo footer" prefix="some foo body"></vaadin24-grid-column>
+    <vaadin24-grid-column header="some bar header" footer="some bar footer" prefix="some bar body"></vaadin24-grid-column>
   `;
   group.header = 'some group header';
   group.footerRenderer = (root) => {
     root.textContent = 'some group footer';
   };
 
-  group.querySelectorAll('vaadin-grid-column').forEach((column) => {
+  group.querySelectorAll('vaadin24-grid-column').forEach((column) => {
     column.renderer = attributeRenderer('prefix');
     column.footerRenderer = attributeRenderer('footer');
   });
@@ -98,10 +99,10 @@
     describe('columns inside grid', () => {
       beforeEach(async () => {
         grid = fixtureSync(`
-          <vaadin-grid size="10">
-            <vaadin-grid-column header="first header"></vaadin-grid-column>
-            <vaadin-grid-column header="second header"></vaadin-grid-column>
-          </vaadin-grid>
+          <vaadin24-grid size="10">
+            <vaadin24-grid-column header="first header"></vaadin24-grid-column>
+            <vaadin24-grid-column header="second header"></vaadin24-grid-column>
+          </vaadin24-grid>
         `);
         grid.dataProvider = infiniteDataProvider;
 
@@ -121,7 +122,7 @@
       });
 
       it('should support adding selection column late', async () => {
-        const column = document.createElement('vaadin-grid-selection-column');
+        const column = document.createElement('vaadin24-grid-selection-column');
         column.header = 'some header';
         column.renderer = attributeRenderer('some body');
         column.footerRenderer = attributeRenderer('some footer');
@@ -135,7 +136,7 @@
       });
 
       it('should support removing late', async () => {
-        const column = grid.querySelector('vaadin-grid-column');
+        const column = grid.querySelector('vaadin24-grid-column');
         grid.removeChild(column);
         await nextRender();
         flushGrid(grid);
@@ -153,7 +154,7 @@
       });
 
       it('should invoke column observer once when removing columns', () => {
-        const column = grid.querySelector('vaadin-grid-column');
+        const column = grid.querySelector('vaadin24-grid-column');
         const spy = sinon.spy(grid._observer, '__callback');
         grid.removeChild(column);
         flushGrid(grid);
@@ -194,26 +195,26 @@
 
       beforeEach(async () => {
         grid = fixtureSync(`
-          <vaadin-grid size="10">
-            <vaadin-grid-column-group header="first group header" footer="first group footer">
-              <vaadin-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin-grid-column>
-              <vaadin-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin-grid-column>
-            </vaadin-grid-column-group>
+          <vaadin24-grid size="10">
+            <vaadin24-grid-column-group header="first group header" footer="first group footer">
+              <vaadin24-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin24-grid-column>
+              <vaadin24-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin24-grid-column>
+            </vaadin24-grid-column-group>
 
-            <vaadin-grid-column-group header="second group header" footer="second group footer">
-              <vaadin-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin-grid-column>
-              <vaadin-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin-grid-column>
-            </vaadin-grid-column-group>
-          </vaadin-grid>
+            <vaadin24-grid-column-group header="second group header" footer="second group footer">
+              <vaadin24-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin24-grid-column>
+              <vaadin24-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin24-grid-column>
+            </vaadin24-grid-column-group>
+          </vaadin24-grid>
         `);
-        firstGroup = grid.querySelector('vaadin-grid-column-group');
+        firstGroup = grid.querySelector('vaadin24-grid-column-group');
 
-        grid.querySelectorAll('vaadin-grid-column').forEach((column) => {
+        grid.querySelectorAll('vaadin24-grid-column').forEach((column) => {
           column.renderer = attributeRenderer('prefix');
           column.footerRenderer = attributeRenderer('footer');
         });
 
-        grid.querySelectorAll('vaadin-grid-column-group').forEach((group) => {
+        grid.querySelectorAll('vaadin24-grid-column-group').forEach((group) => {
           group.footerRenderer = attributeRenderer('footer');
         });
 
@@ -231,7 +232,7 @@
       });
 
       it('should support removing late', async () => {
-        const column = firstGroup.querySelector('vaadin-grid-column');
+        const column = firstGroup.querySelector('vaadin24-grid-column');
         firstGroup.removeChild(column);
         await nextFrame();
         expect(getHeaderCellContent(grid, 1, 0).textContent).to.equal('first bar header');
@@ -252,7 +253,7 @@
       });
 
       it('should support removing group late', async () => {
-        const group = grid.querySelector('vaadin-grid-column-group');
+        const group = grid.querySelector('vaadin24-grid-column-group');
         grid.removeChild(group);
 
         await nextRender();
@@ -269,29 +270,29 @@
 
       beforeEach(async () => {
         grid = fixtureSync(`
-          <vaadin-grid size="10">
-            <vaadin-grid-column-group header="group header" footer="group footer">
-              <vaadin-grid-column-group header="first nested group header" footer="first nested group footer">
-                <vaadin-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin-grid-column>
-                <vaadin-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin-grid-column>
-              </vaadin-grid-column-group>
+          <vaadin24-grid size="10">
+            <vaadin24-grid-column-group header="group header" footer="group footer">
+              <vaadin24-grid-column-group header="first nested group header" footer="first nested group footer">
+                <vaadin24-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin24-grid-column>
+                <vaadin24-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
 
-              <vaadin-grid-column-group header="second nested group header" footer="second nested group footer">
-                <vaadin-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin-grid-column>
-                <vaadin-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin-grid-column>
-              </vaadin-grid-column-group>
-            </vaadin-grid-column-group>
-          </vaadin-grid>
+              <vaadin24-grid-column-group header="second nested group header" footer="second nested group footer">
+                <vaadin24-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin24-grid-column>
+                <vaadin24-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
+            </vaadin24-grid-column-group>
+          </vaadin24-grid>
         `);
 
-        firstGroup = grid.querySelector('vaadin-grid-column-group');
+        firstGroup = grid.querySelector('vaadin24-grid-column-group');
 
-        grid.querySelectorAll('vaadin-grid-column').forEach((column) => {
+        grid.querySelectorAll('vaadin24-grid-column').forEach((column) => {
           column.renderer = attributeRenderer('prefix');
           column.footerRenderer = attributeRenderer('footer');
         });
 
-        grid.querySelectorAll('vaadin-grid-column-group').forEach((group) => {
+        grid.querySelectorAll('vaadin24-grid-column-group').forEach((group) => {
           group.footerRenderer = attributeRenderer('footer');
         });
 
@@ -312,7 +313,7 @@
       });
 
       it('should support removing late', async () => {
-        const group = firstGroup.querySelector('vaadin-grid-column-group');
+        const group = firstGroup.querySelector('vaadin24-grid-column-group');
         firstGroup.removeChild(group);
 
         await nextRender();
@@ -332,17 +333,17 @@
             const slot = inGroup ? 'group' : 'grid';
             wrapper = fixtureSync(`
               <grid-wrapper>
-                <vaadin-grid-column slot="${slot}" header="foo header" footer="foo footer" prefix="foo body"></vaadin-grid-column>
-                <vaadin-grid-column slot="${slot}" header="bar header" footer="bar footer" prefix="bar body"></vaadin-grid-column>
+                <vaadin24-grid-column slot="${slot}" header="foo header" footer="foo footer" prefix="foo body"></vaadin24-grid-column>
+                <vaadin24-grid-column slot="${slot}" header="bar header" footer="bar footer" prefix="bar body"></vaadin24-grid-column>
               </grid-wrapper>
             `);
 
-            wrapper.querySelectorAll('vaadin-grid-column').forEach((column) => {
+            wrapper.querySelectorAll('vaadin24-grid-column').forEach((column) => {
               column.renderer = attributeRenderer('prefix');
               column.footerRenderer = attributeRenderer('footer');
             });
 
-            grid = wrapper.shadowRoot.querySelector('vaadin-grid');
+            grid = wrapper.shadowRoot.querySelector('vaadin24-grid');
 
             grid.dataProvider = infiniteDataProvider;
           });
@@ -368,7 +369,7 @@
           });
 
           it('should support removing late', async () => {
-            const column = wrapper.querySelector('vaadin-grid-column');
+            const column = wrapper.querySelector('vaadin24-grid-column');
             wrapper.removeChild(column);
             await nextFrame();
             flushGrid(grid);
@@ -384,28 +385,28 @@
             const slot = inGroup ? 'group' : 'grid';
             wrapper = fixtureSync(`
               <grid-wrapper>
-                <vaadin-grid-column-group header="first group header" footer="first group footer" slot="${slot}">
-                  <vaadin-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin-grid-column>
-                  <vaadin-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin-grid-column>
-                </vaadin-grid-column-group>
+                <vaadin24-grid-column-group header="first group header" footer="first group footer" slot="${slot}">
+                  <vaadin24-grid-column header="first foo header" footer="first foo footer" prefix="first foo body"></vaadin24-grid-column>
+                  <vaadin24-grid-column header="first bar header" footer="first bar footer" prefix="first bar body"></vaadin24-grid-column>
+                </vaadin24-grid-column-group>
 
-                <vaadin-grid-column-group header="second group header" footer="second group footer" slot="${slot}">
-                  <vaadin-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin-grid-column>
-                  <vaadin-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin-grid-column>
-                </vaadin-grid-column-group>
+                <vaadin24-grid-column-group header="second group header" footer="second group footer" slot="${slot}">
+                  <vaadin24-grid-column header="second foo header" footer="second foo footer" prefix="second foo body"></vaadin24-grid-column>
+                  <vaadin24-grid-column header="second bar header" footer="second bar footer" prefix="second bar body"></vaadin24-grid-column>
+                </vaadin24-grid-column-group>
               </grid-wrapper>
             `);
 
-            wrapper.querySelectorAll('vaadin-grid-column').forEach((column) => {
+            wrapper.querySelectorAll('vaadin24-grid-column').forEach((column) => {
               column.renderer = attributeRenderer('prefix');
               column.footerRenderer = attributeRenderer('footer');
             });
 
-            wrapper.querySelectorAll('vaadin-grid-column-group').forEach((group) => {
+            wrapper.querySelectorAll('vaadin24-grid-column-group').forEach((group) => {
               group.footerRenderer = attributeRenderer('footer');
             });
 
-            grid = wrapper.shadowRoot.querySelector('vaadin-grid');
+            grid = wrapper.shadowRoot.querySelector('vaadin24-grid');
 
             grid.dataProvider = infiniteDataProvider;
 
@@ -433,7 +434,7 @@
           });
 
           it('should support removing late', async () => {
-            const firstGroup = wrapper.querySelector('vaadin-grid-column-group');
+            const firstGroup = wrapper.querySelector('vaadin24-grid-column-group');
             wrapper.removeChild(firstGroup);
             await nextFrame();
             flushGrid(grid);
@@ -447,7 +448,7 @@
             let firstGroup;
 
             beforeEach(() => {
-              firstGroup = wrapper.querySelector('vaadin-grid-column-group');
+              firstGroup = wrapper.querySelector('vaadin24-grid-column-group');
             });
 
             describe('with columns', () => {
@@ -462,7 +463,7 @@
               });
 
               it('should support removing late', async () => {
-                const column = firstGroup.querySelector('vaadin-grid-column');
+                const column = firstGroup.querySelector('vaadin24-grid-column');
                 firstGroup.removeChild(column);
                 await nextFrame();
                 expect(getHeaderCellContent(grid, inGroup ? 2 : 1, 0).textContent).to.equal('first bar header');
