Index: test/row-details.common.js
===================================================================
--- test/row-details.common.js
+++ test/row-details.common.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { aTimeout, click, fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -25,9 +26,9 @@
 class GridDetailsWrapper extends PolymerElement {
   static get template() {
     return html`
-      <vaadin-grid id="grid" style="width: 50px; height: 400px" row-details-renderer="[[rowDetailsRenderer]]">
-        <vaadin-grid-column renderer="[[renderer]]"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid id="grid" style="width: 50px; height: 400px" row-details-renderer="[[rowDetailsRenderer]]">
+        <vaadin24-grid-column renderer="[[renderer]]"></vaadin24-grid-column>
+      </vaadin24-grid>
     `;
   }
 
@@ -40,7 +41,7 @@
   }
 }
 
-customElements.define('grid-details-wrapper', GridDetailsWrapper);
+internalCustomElements.define('grid-details-wrapper', GridDetailsWrapper);
 
 describe('row details', () => {
   let grid;
@@ -58,12 +59,12 @@
 
   it('should not increase row update count', () => {
     grid = fixtureSync(`
-      <vaadin-grid style="width: 50px; height: 400px" size="100">
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid style="width: 50px; height: 400px" size="100">
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     grid.rowDetailsRenderer = simpleDetailsRenderer;
-    grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+    grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
     const spy = sinon.spy(grid, '_updateRow');
     grid.size = 1;
@@ -75,12 +76,12 @@
   describe('simple', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 50px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 50px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = simpleDetailsRenderer;
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
       grid.dataProvider = infiniteDataProvider;
       flushGrid(grid);
@@ -254,9 +255,9 @@
 
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
 
       grid.rowDetailsRenderer = (root, _grid, { item }) => {
@@ -267,7 +268,7 @@
         `;
       };
 
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
     });
 
     it('should have correct height', () => {
@@ -292,12 +293,12 @@
     beforeEach(async () => {
       dataset = buildDataSet(10);
       grid = fixtureSync(`
-        <vaadin-grid style="width: 50px; height: 400px" size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 50px; height: 400px" size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = simpleDetailsRenderer;
-      grid.querySelector('vaadin-grid-column').renderer = indexRenderer;
+      grid.querySelector('vaadin24-grid-column').renderer = indexRenderer;
 
       grid.dataProvider = dataProvider;
       flushGrid(grid);
@@ -369,9 +370,9 @@
   describe('lazily set details renderer', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.items = [{ name: 'foo' }];
       await nextFrame();
@@ -409,9 +410,9 @@
 
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.rowDetailsRenderer = (root) => {
         // Render the details cell with a height of 100px
