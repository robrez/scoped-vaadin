Index: test/visual/grid.common.js
===================================================================
--- test/visual/grid.common.js
+++ test/visual/grid.common.js
@@ -20,14 +20,14 @@
       describe('header and footer', () => {
         beforeEach(async () => {
           element = fixtureSync(`
-            <vaadin-grid size="200" style="width: 200px; height: 100px">
-              <vaadin-grid-column header="header"></vaadin-grid-column>
-            </vaadin-grid>
+            <vaadin24-grid size="200" style="width: 200px; height: 100px">
+              <vaadin24-grid-column header="header"></vaadin24-grid-column>
+            </vaadin24-grid>
           `);
           element.rowDetailsRenderer = (root, _grid, model) => {
             root.textContent = model.index;
           };
-          const column = element.querySelector('vaadin-grid-column');
+          const column = element.querySelector('vaadin24-grid-column');
           column.footerRenderer = (root) => {
             root.textContent = 'footer';
           };
@@ -48,20 +48,20 @@
       describe('column groups', () => {
         beforeEach(async () => {
           element = fixtureSync(`
-            <vaadin-grid style="height: 250px" column-reordering-allowed>
-              <vaadin-grid-column width="30px" flex-grow="0" resizable header="#"></vaadin-grid-column>
+            <vaadin24-grid style="height: 250px" column-reordering-allowed>
+              <vaadin24-grid-column width="30px" flex-grow="0" resizable header="#"></vaadin24-grid-column>
 
-              <vaadin-grid-column-group resizable header="Name">
-                <vaadin-grid-column width="calc(20% - 50px)" path="name.first"></vaadin-grid-column>
-                <vaadin-grid-column width="calc(20% - 50px)" path="name.last"></vaadin-grid-column>
-              </vaadin-grid-column-group>
+              <vaadin24-grid-column-group resizable header="Name">
+                <vaadin24-grid-column width="calc(20% - 50px)" path="name.first"></vaadin24-grid-column>
+                <vaadin24-grid-column width="calc(20% - 50px)" path="name.last"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
 
-              <vaadin-grid-column-group resizable header="Location">
-                <vaadin-grid-column width="calc(20% - 50px)" path="location.city"></vaadin-grid-column>
-                <vaadin-grid-column width="calc(20% - 50px)" path="location.state"></vaadin-grid-column>
-                <vaadin-grid-column width="200px" resizable path="location.street"></vaadin-grid-column>
-              </vaadin-grid-column-group>
-            </vaadin-grid>
+              <vaadin24-grid-column-group resizable header="Location">
+                <vaadin24-grid-column width="calc(20% - 50px)" path="location.city"></vaadin24-grid-column>
+                <vaadin24-grid-column width="calc(20% - 50px)" path="location.state"></vaadin24-grid-column>
+                <vaadin24-grid-column width="200px" resizable path="location.street"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
+            </vaadin24-grid>
           `);
           element.items = users;
           const indexColumn = element.querySelector('vaadin-grid-column[header="#"]');
@@ -81,14 +81,14 @@
       describe('row details', () => {
         beforeEach(async () => {
           element = fixtureSync(`
-            <vaadin-grid>
-              <vaadin-grid-column-group>
-                <vaadin-grid-column width="55px" flex-grow="0"></vaadin-grid-column>
-                <vaadin-grid-column resizable path="email"></vaadin-grid-column>
-                <vaadin-grid-column path="location.city"></vaadin-grid-column>
-                <vaadin-grid-column path="location.state"></vaadin-grid-column>
-              </vaadin-grid-column-group>
-            </vaadin-grid>
+            <vaadin24-grid>
+              <vaadin24-grid-column-group>
+                <vaadin24-grid-column width="55px" flex-grow="0"></vaadin24-grid-column>
+                <vaadin24-grid-column resizable path="email"></vaadin24-grid-column>
+                <vaadin24-grid-column path="location.city"></vaadin24-grid-column>
+                <vaadin24-grid-column path="location.state"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
+            </vaadin24-grid>
           `);
           element.items = users;
           element.rowDetailsRenderer = (root, _grid, model) => {
@@ -99,7 +99,7 @@
             `;
           };
 
-          const columnGroup = element.querySelector('vaadin-grid-column-group');
+          const columnGroup = element.querySelector('vaadin24-grid-column-group');
           columnGroup.headerRenderer = (root) => {
             root.innerHTML = `
               <div class="header-content">
@@ -109,7 +109,7 @@
             `;
           };
 
-          const firstColumn = element.querySelector('vaadin-grid-column');
+          const firstColumn = element.querySelector('vaadin24-grid-column');
           firstColumn.renderer = (root, _column, model) => {
             if (!root.firstElementChild) {
               root.innerHTML = `<input type="checkbox">`;
@@ -141,11 +141,11 @@
 
         beforeEach(async () => {
           element = fixtureSync(`
-            <vaadin-grid style="height: 250px" multi-sort>
-              <vaadin-grid-column width="50px" header="#"></vaadin-grid-column>
-              <vaadin-grid-sort-column path="name.first" header="First name"></vaadin-grid-sort-column>
-              <vaadin-grid-sort-column path="name.last" header="Last name"></vaadin-grid-sort-column>
-            </vaadin-grid>
+            <vaadin24-grid style="height: 250px" multi-sort>
+              <vaadin24-grid-column width="50px" header="#"></vaadin24-grid-column>
+              <vaadin24-grid-sort-column path="name.first" header="First name"></vaadin24-grid-sort-column>
+              <vaadin24-grid-sort-column path="name.last" header="Last name"></vaadin24-grid-sort-column>
+            </vaadin24-grid>
           `);
           element.items = users;
           const indexColumn = element.querySelector('vaadin-grid-column[header="#"]');
@@ -155,7 +155,7 @@
 
           flushGrid(element);
           await nextRender(element);
-          const sorters = [...document.querySelectorAll('vaadin-grid-sorter')];
+          const sorters = [...document.querySelectorAll('vaadin24-grid-sorter')];
           firstSorter = sorters.find((sorter) => sorter.textContent === 'First name');
           secondSorter = sorters.find((sorter) => sorter.textContent === 'Last name');
         });
@@ -192,13 +192,13 @@
       describe('row focus', () => {
         beforeEach(async () => {
           element = fixtureSync(`
-            <vaadin-grid style="width: 550px">
-              <vaadin-grid-column-group header="Name" frozen>
-                <vaadin-grid-column path="name.first" width="200px" flex-shrink="0"></vaadin-grid-column>
-                <vaadin-grid-column path="name.last" width="200px" flex-shrink="0"></vaadin-grid-column>
-              </vaadin-grid-column-group>
-              <vaadin-grid-column path="location.city" width="200px" flex-shrink="0"></vaadin-grid-column>
-            </vaadin-grid>
+            <vaadin24-grid style="width: 550px">
+              <vaadin24-grid-column-group header="Name" frozen>
+                <vaadin24-grid-column path="name.first" width="200px" flex-shrink="0"></vaadin24-grid-column>
+                <vaadin24-grid-column path="name.last" width="200px" flex-shrink="0"></vaadin24-grid-column>
+              </vaadin24-grid-column-group>
+              <vaadin24-grid-column path="location.city" width="200px" flex-shrink="0"></vaadin24-grid-column>
+            </vaadin24-grid>
           `);
           element.items = users;
           flushGrid(element);
@@ -233,12 +233,12 @@
       describe('frozen', () => {
         beforeEach(() => {
           element = fixtureSync(`
-            <vaadin-grid style="max-width: 600px">
-              <vaadin-grid-column path="name.first" width="200px" flex-shrink="0" frozen></vaadin-grid-column>
-              <vaadin-grid-column path="name.last" width="200px" flex-shrink="0" ></vaadin-grid-column>
-              <vaadin-grid-column path="location.city" width="200px" flex-shrink="0"></vaadin-grid-column>
-              <vaadin-grid-column path="location.state" width="200px" flex-shrink="0" frozen-to-end></vaadin-grid-column>
-            </vaadin-grid>
+            <vaadin24-grid style="max-width: 600px">
+              <vaadin24-grid-column path="name.first" width="200px" flex-shrink="0" frozen></vaadin24-grid-column>
+              <vaadin24-grid-column path="name.last" width="200px" flex-shrink="0" ></vaadin24-grid-column>
+              <vaadin24-grid-column path="location.city" width="200px" flex-shrink="0"></vaadin24-grid-column>
+              <vaadin24-grid-column path="location.state" width="200px" flex-shrink="0" frozen-to-end></vaadin24-grid-column>
+            </vaadin24-grid>
           `);
           element.items = users;
           flushGrid(element);
@@ -264,11 +264,11 @@
   describe('drag and drop', () => {
     beforeEach(async () => {
       element = fixtureSync(`
-        <vaadin-grid drop-mode="on-top-or-between" rows-draggable>
-          <vaadin-grid-column path="name.first" header="First name"></vaadin-grid-column>
-          <vaadin-grid-column path="name.last" header="Last name"></vaadin-grid-column>
-          <vaadin-grid-column path="email"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid drop-mode="on-top-or-between" rows-draggable>
+          <vaadin24-grid-column path="name.first" header="First name"></vaadin24-grid-column>
+          <vaadin24-grid-column path="name.last" header="Last name"></vaadin24-grid-column>
+          <vaadin24-grid-column path="email"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       element.rowDetailsRenderer = (root) => {
         root.innerHTML = '<p>Details</p>';
@@ -326,11 +326,11 @@
   describe('disabled', () => {
     beforeEach(async () => {
       element = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="name.first" header="First name"></vaadin-grid-column>
-          <vaadin-grid-column path="name.last" header="Last name"></vaadin-grid-column>
-          <vaadin-grid-column path="email"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="name.first" header="First name"></vaadin24-grid-column>
+          <vaadin24-grid-column path="name.last" header="Last name"></vaadin24-grid-column>
+          <vaadin24-grid-column path="email"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       element.items = users;
       flushGrid(element);
@@ -346,10 +346,10 @@
   describe('tree', () => {
     beforeEach(async () => {
       element = fixtureSync(`
-        <vaadin-grid item-id-path="name">
-          <vaadin-grid-tree-column path="name" width="200px" flex-shrink="0"></vaadin-grid-tree-column>
-          <vaadin-grid-column path="name" width="200px" flex-shrink="0"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid item-id-path="name">
+          <vaadin24-grid-tree-column path="name" width="200px" flex-shrink="0"></vaadin24-grid-tree-column>
+          <vaadin24-grid-column path="name" width="200px" flex-shrink="0"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       element.dataProvider = ({ parentItem, page, pageSize }, cb) => {
         // Let's have 10 root-level items and 3 items on every child level
