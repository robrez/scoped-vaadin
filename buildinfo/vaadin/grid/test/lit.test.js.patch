Index: test/lit.test.js
===================================================================
--- test/lit.test.js
+++ test/lit.test.js
@@ -1,8 +1,9 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { aTimeout, fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import '../all-imports.js';
 import { html, render } from 'lit';
-import { flush } from '@vaadin/component-base/src/debounce.js';
+import { flush } from '@scoped-vaadin/component-base/src/debounce.js';
 import { getBodyCellContent, getPhysicalItems } from './helpers.js';
 
 describe('lit', () => {
@@ -12,11 +13,11 @@
     function renderGrid(columnPaths, items) {
       render(
         html`
-          <vaadin-grid .items=${items}>
+          <vaadin24-grid .items=${items}>
             ${columnPaths.map((columnPath) => {
-              return html`<vaadin-grid-column path=${columnPath}></vaadin-grid-column>`;
+              return html`<vaadin24-grid-column path=${columnPath}></vaadin24-grid-column>`;
             })}
-          </vaadin-grid>
+          </vaadin24-grid>
         `,
         wrapper,
       );
@@ -40,11 +41,11 @@
     function renderGrid(columnPaths, items) {
       render(
         html`
-          <vaadin-grid .items=${items}>
+          <vaadin24-grid .items=${items}>
             ${columnPaths.map((columnPath) => {
-              return html`<vaadin-grid-sort-column path="${columnPath}"></vaadin-grid-sort-column>`;
+              return html`<vaadin24-grid-sort-column path="${columnPath}"></vaadin24-grid-sort-column>`;
             })}
-          </vaadin-grid>
+          </vaadin24-grid>
         `,
         wrapper,
       );
@@ -55,7 +56,7 @@
 
     await aTimeout(0);
 
-    document.querySelector('vaadin-grid-sorter').click();
+    document.querySelector('vaadin24-grid-sorter').click();
 
     // Then render a grid with one column
     renderGrid(['c1'], [{ c1: '1-1', c2: '1-2' }]);
@@ -78,7 +79,7 @@
         flush();
       }
     }
-    customElements.define(testComponentName, TestComponent);
+    internalCustomElements.define(testComponentName, TestComponent);
 
     // Build items
     const rootItem = { id: 'item', children: [] };
@@ -112,10 +113,10 @@
 
     const grid = render(
       html`
-        <vaadin-grid .dataProvider=${dataProvider} .expandedItems=${expandedItems}>
-          <vaadin-grid-tree-column width="80px" flex-grow="0"></vaadin-grid-tree-column>
-          <vaadin-grid-column .renderer=${renderer}></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid .dataProvider=${dataProvider} .expandedItems=${expandedItems}>
+          <vaadin24-grid-tree-column width="80px" flex-grow="0"></vaadin24-grid-tree-column>
+          <vaadin24-grid-column .renderer=${renderer}></vaadin24-grid-column>
+        </vaadin24-grid>
       `,
       fixtureSync(`<div></div>`),
     ).parentNode.firstElementChild;
