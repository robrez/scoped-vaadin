Index: test/accessibility.test.js
===================================================================
--- test/accessibility.test.js
+++ test/accessibility.test.js
@@ -1,54 +1,54 @@
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
-import '@vaadin/polymer-legacy-adapter/template-renderer.js';
+import '@scoped-vaadin/polymer-legacy-adapter/template-renderer.js';
 import '../all-imports.js';
 import { flushGrid } from './helpers.js';
 
 const fixtures = {
   default: `
-    <vaadin-grid>
-      <vaadin-grid-column>
+    <vaadin23-grid>
+      <vaadin23-grid-column>
         <template class="header">Index</template>
         <template>[[index]]</template>
         <template class="footer">Index</template>
-      </vaadin-grid-column>
-      <vaadin-grid-column>
+      </vaadin23-grid-column>
+      <vaadin23-grid-column>
         <template class="header">header</template>
         <template>[[item]]</template>
         <template class="footer">footer</template>
-      </vaadin-grid-column>
-    </vaadin-grid>
+      </vaadin23-grid-column>
+    </vaadin23-grid>
   `,
   group: `
-    <vaadin-grid>
-      <vaadin-grid-column-group>
+    <vaadin23-grid>
+      <vaadin23-grid-column-group>
         <template class="header">Group header</template>
         <template class="footer">Group footer</template>
-        <vaadin-grid-column>
+        <vaadin23-grid-column>
           <template class="header">Index</template>
           <template>[[index]]</template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">header</template>
           <template>[[item]]</template>
-        </vaadin-grid-column>
-      </vaadin-grid-column-group>
-    </vaadin-grid>
+        </vaadin23-grid-column>
+      </vaadin23-grid-column-group>
+    </vaadin23-grid>
   `,
   details: `
-    <vaadin-grid>
-      <vaadin-grid-column>
+    <vaadin23-grid>
+      <vaadin23-grid-column>
         <template class="header">Index</template>
         <template>[[index]]</template>
         <template class="footer">Index</template>
-      </vaadin-grid-column>
-      <vaadin-grid-column>
+      </vaadin23-grid-column>
+      <vaadin23-grid-column>
         <template class="header">header</template>
         <template>[[item]]</template>
         <template class="footer">footer</template>
-      </vaadin-grid-column>
+      </vaadin23-grid-column>
       <template class="row-details">details</template>
-    </vaadin-grid>
+    </vaadin23-grid>
   `,
 };
 
@@ -56,11 +56,11 @@
   let grid;
 
   function initGridRenderer(grouped) {
-    grid = fixtureSync('<vaadin-grid></vaadin-grid>');
-    const col1 = document.createElement('vaadin-grid-column');
-    const col2 = document.createElement('vaadin-grid-column');
+    grid = fixtureSync('<vaadin23-grid></vaadin23-grid>');
+    const col1 = document.createElement('vaadin23-grid-column');
+    const col2 = document.createElement('vaadin23-grid-column');
     if (grouped) {
-      const grp = document.createElement('vaadin-grid-column-group');
+      const grp = document.createElement('vaadin23-grid-column-group');
       grp.headerRenderer = (root) => {
         root.textContent = 'Group header';
       };
@@ -211,9 +211,9 @@
 
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid item-id-path="name">
-          <vaadin-grid-column path="name" width="200px" flex-shrink="0"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin23-grid item-id-path="name">
+          <vaadin23-grid-column path="name" width="200px" flex-shrink="0"></vaadin23-grid-column>
+        </vaadin23-grid>
       `);
       grid.dataProvider = hierarchicalDataProvider;
       flushGrid(grid);
@@ -277,7 +277,7 @@
       it('should update aria-colcount when column is added', async () => {
         const template = document.createElement('template');
         template.innerHTML = '[[item]]';
-        const column = document.createElement('vaadin-grid-column');
+        const column = document.createElement('vaadin23-grid-column');
         column.appendChild(template);
         grid.appendChild(column);
         await nextFrame();
@@ -304,8 +304,8 @@
     let col;
 
     beforeEach(() => {
-      grid = fixtureSync('<vaadin-grid></vaadin-grid>');
-      col = document.createElement('vaadin-grid-column');
+      grid = fixtureSync('<vaadin23-grid></vaadin23-grid>');
+      col = document.createElement('vaadin23-grid-column');
       grid.appendChild(col);
       grid.items = [{ value: 'foo' }, { value: 'bar' }];
     });
