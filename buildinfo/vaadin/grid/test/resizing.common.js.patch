Index: test/resizing.common.js
===================================================================
--- test/resizing.common.js
+++ test/resizing.common.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { aTimeout, fixtureSync, nextFrame, nextResize, oneEvent } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -23,9 +24,9 @@
         }
       </style>
 
-      <vaadin-grid id="grid" style="width: 200px; height: 400px;" size="10" hidden>
-        <vaadin-grid-column id="column" header="header"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid id="grid" style="width: 200px; height: 400px;" size="10" hidden>
+        <vaadin24-grid-column id="column" header="header"></vaadin24-grid-column>
+      </vaadin24-grid>
     `;
   }
 
@@ -44,7 +45,7 @@
   }
 }
 
-customElements.define('test-component', TestComponent);
+internalCustomElements.define('test-component', TestComponent);
 
 describe('resizing', () => {
   let component, grid;
@@ -119,7 +120,7 @@
   it('should have correct layout after column width change', async () => {
     grid.style.height = '';
     grid.allRowsVisible = true;
-    grid.querySelector('vaadin-grid-column').width = '300px';
+    grid.querySelector('vaadin24-grid-column').width = '300px';
     // Before next render
     await nextFrame();
     // After next render
@@ -167,11 +168,11 @@
   describe('renderer', () => {
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
-      grid.querySelector('vaadin-grid-column').renderer = (root, _, model) => {
+      grid.querySelector('vaadin24-grid-column').renderer = (root, _, model) => {
         root.textContent = model.index;
       };
     });
@@ -190,9 +191,9 @@
   describe('path', () => {
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-column path="value"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-column path="value"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.firstElementChild.header = null;
       grid.allRowsVisible = true;
@@ -219,9 +220,9 @@
     beforeEach(() => {
       wrapper = fixtureSync(`
         <div>
-          <vaadin-grid>
-            <vaadin-grid-column path="value"></vaadin-grid-column>
-          </vaadin-grid>
+          <vaadin24-grid>
+            <vaadin24-grid-column path="value"></vaadin24-grid-column>
+          </vaadin24-grid>
         </div>
       `);
       grid = wrapper.firstElementChild;
@@ -291,9 +292,9 @@
   describe('tree grid', () => {
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-tree-column path="value"></vaadin-grid-tree-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-tree-column path="value"></vaadin24-grid-tree-column>
+        </vaadin24-grid>
       `);
       grid.allRowsVisible = true;
       grid.itemIdPath = 'value';
@@ -335,7 +336,7 @@
         { value: '0-0-0-0-0-0-0-0' },
       ];
 
-      const column = grid.querySelector('vaadin-grid-tree-column');
+      const column = grid.querySelector('vaadin24-grid-tree-column');
       column.header = null;
 
       flushGrid(grid);
