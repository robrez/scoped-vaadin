Index: test/accessibility.common.js
===================================================================
--- test/accessibility.common.js
+++ test/accessibility.common.js
@@ -6,13 +6,13 @@
   let grid;
 
   function initGridRenderer(grouped) {
-    grid = fixtureSync('<vaadin-grid></vaadin-grid>');
-    const col1 = document.createElement('vaadin-grid-column');
-    const col2 = document.createElement('vaadin-grid-column');
-    const col3 = document.createElement('vaadin-grid-column');
+    grid = fixtureSync('<vaadin24-grid></vaadin24-grid>');
+    const col1 = document.createElement('vaadin24-grid-column');
+    const col2 = document.createElement('vaadin24-grid-column');
+    const col3 = document.createElement('vaadin24-grid-column');
     col3.setAttribute('row-header', '');
     if (grouped) {
-      const grp = document.createElement('vaadin-grid-column-group');
+      const grp = document.createElement('vaadin24-grid-column-group');
       grp.headerRenderer = (root) => {
         root.textContent = 'Group header';
       };
@@ -102,7 +102,7 @@
       });
 
       it('should change role from rowheader to gridcell when `rowHeader` is set to false', () => {
-        const columns = grid.querySelectorAll('vaadin-grid-column');
+        const columns = grid.querySelectorAll('vaadin24-grid-column');
         columns[2].rowHeader = false;
         expect(grid.$.items.children[0].children[2].getAttribute('role')).to.equal('gridcell');
         expect(grid.$.items.children[1].children[2].getAttribute('role')).to.equal('gridcell');
@@ -167,9 +167,9 @@
 
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid item-id-path="name">
-          <vaadin-grid-column path="name" width="200px" flex-shrink="0"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid item-id-path="name">
+          <vaadin24-grid-column path="name" width="200px" flex-shrink="0"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.dataProvider = hierarchicalDataProvider;
       flushGrid(grid);
@@ -230,7 +230,7 @@
       });
 
       it('should update aria-colcount when column is added', async () => {
-        const column = document.createElement('vaadin-grid-column');
+        const column = document.createElement('vaadin24-grid-column');
         column.renderer = (root, _, model) => {
           root.textContent = model.item;
         };
@@ -259,8 +259,8 @@
     let col;
 
     beforeEach(() => {
-      grid = fixtureSync('<vaadin-grid></vaadin-grid>');
-      col = document.createElement('vaadin-grid-column');
+      grid = fixtureSync('<vaadin24-grid></vaadin24-grid>');
+      col = document.createElement('vaadin24-grid-column');
       grid.appendChild(col);
       grid.items = [{ value: 'foo' }, { value: 'bar' }];
     });
