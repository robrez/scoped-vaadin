Index: test/data-provider.test.js
===================================================================
--- test/data-provider.test.js
+++ test/data-provider.test.js
@@ -68,11 +68,11 @@
 
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid>
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
-    grid.querySelector('vaadin-grid-column').renderer = (root, _, model) => {
+    grid.querySelector('vaadin24-grid-column').renderer = (root, _, model) => {
       root.textContent = model.index;
     };
     flushGrid(grid);
@@ -157,9 +157,9 @@
       // Initialize a fresh grid
       grid.remove();
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-sort-column path="value" direction="asc"></vaadin-grid-sort-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-sort-column path="value" direction="asc"></vaadin24-grid-sort-column>
+        </vaadin24-grid>
       `);
 
       // Set data provider
@@ -179,9 +179,9 @@
       // Add multiple pre-sorted sort columns
       const columns = fixtureSync`
         <div>
-          <vaadin-grid-sort-column path="name" direction="asc"></vaadin-grid-sort-column>
-          <vaadin-grid-sort-column path="price" direction="asc"></vaadin-grid-sort-column>
-          <vaadin-grid-sort-column path="discount" direction="asc"></vaadin-grid-sort-column>
+          <vaadin24-grid-sort-column path="name" direction="asc"></vaadin24-grid-sort-column>
+          <vaadin24-grid-sort-column path="price" direction="asc"></vaadin24-grid-sort-column>
+          <vaadin24-grid-sort-column path="discount" direction="asc"></vaadin24-grid-sort-column>
         </div>
       `;
       grid.multiSort = true;
@@ -248,7 +248,7 @@
     }
 
     beforeEach(async () => {
-      const treeColumn = document.createElement('vaadin-grid-tree-column');
+      const treeColumn = document.createElement('vaadin24-grid-tree-column');
       await nextFrame();
       treeColumn.path = 'value';
       grid.itemHasChildrenPath = 'value';
@@ -665,8 +665,8 @@
 
 describe('attached', () => {
   it('should have rows when attached and shown after cache is cleared on hidden grid', async () => {
-    const grid = document.createElement('vaadin-grid');
-    const col = document.createElement('vaadin-grid-column');
+    const grid = document.createElement('vaadin24-grid');
+    const col = document.createElement('vaadin24-grid-column');
     col.setAttribute('path', 'item');
     grid.appendChild(col);
 
@@ -691,7 +691,7 @@
 
 describe('unattached', () => {
   it('should not throw on clearCache', () => {
-    const grid = document.createElement('vaadin-grid');
+    const grid = document.createElement('vaadin24-grid');
     expect(() => grid.clearCache()).to.not.throw(Error);
   });
 });
@@ -699,9 +699,9 @@
 describe('page size grid', () => {
   it('should render grid rows when setting page-size before size', () => {
     const grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column header="#" path="value"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid>
+        <vaadin24-grid-column header="#" path="value"></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     grid.pageSize = 10;
     grid.size = 200;
@@ -717,9 +717,9 @@
   describe('initial render', () => {
     it('should not render rows before columns are defined', () => {
       grid = fixtureSync(`
-        <vaadin-grid size="100">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid size="100">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.dataProvider = sinon.spy(infiniteDataProvider);
       expect(grid.$.items.childElementCount).to.equal(0);
@@ -736,11 +736,11 @@
 
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid size="100" style="height: 300px">
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid size="100" style="height: 300px">
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
-      const column = grid.querySelector('vaadin-grid-column');
+      const column = grid.querySelector('vaadin24-grid-column');
       column.headerRenderer = (root) => {
         root.textContent = 'Header';
       };
