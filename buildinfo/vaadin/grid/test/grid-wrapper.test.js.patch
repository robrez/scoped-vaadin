Index: test/grid-wrapper.test.js
===================================================================
--- test/grid-wrapper.test.js
+++ test/grid-wrapper.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import '../all-imports.js';
@@ -7,20 +8,20 @@
   constructor() {
     super();
     this.attachShadow({ mode: 'open' }).innerHTML = `
-      <vaadin-grid id="grid">
-        <vaadin-grid-column-group>
+      <vaadin24-grid id="grid">
+        <vaadin24-grid-column-group>
           <slot name="group"></slot>
-        </vaadin-grid-column-group>
+        </vaadin24-grid-column-group>
         <slot></slot>
-      </vaadin-grid>
+      </vaadin24-grid>
     `;
   }
 }
 
-customElements.define('grid-wrapper', GridWrapper);
+internalCustomElements.define('grid-wrapper', GridWrapper);
 
 async function initGrid(wrapper) {
-  const grid = wrapper.shadowRoot.querySelector('vaadin-grid');
+  const grid = wrapper.shadowRoot.querySelector('vaadin24-grid');
   grid.items = Array.from({ length: 10 }).map((_, i) => ({ name: `Person ${i}` }));
   flushGrid(grid);
   await nextFrame();
@@ -30,7 +31,7 @@
 describe('columns slotted in custom element', () => {
   it('should render column correctly with auto-width defined', async () => {
     const wrapper = fixtureSync(
-      '<grid-wrapper><vaadin-grid-column path="name" auto-width></vaadin-grid-column></grid-wrapper>',
+      '<grid-wrapper><vaadin24-grid-column path="name" auto-width></vaadin24-grid-column></grid-wrapper>',
     );
     const grid = await initGrid(wrapper);
 
@@ -39,7 +40,7 @@
 
   it('should render column correctly with auto-width inside a column-group', async () => {
     const wrapper = fixtureSync(
-      '<grid-wrapper><vaadin-grid-column slot="group" path="name" auto-width></vaadin-grid-column></grid-wrapper>',
+      '<grid-wrapper><vaadin24-grid-column slot="group" path="name" auto-width></vaadin24-grid-column></grid-wrapper>',
     );
     const grid = await initGrid(wrapper);
 
@@ -48,10 +49,10 @@
 
   it('should render column correctly when text-align is defined', async () => {
     const wrapper = fixtureSync(
-      '<grid-wrapper-delayed><vaadin-grid-column path="name" text-align="end"></vaadin-grid-column></grid-wrapper-delayed>',
+      '<grid-wrapper-delayed><vaadin24-grid-column path="name" text-align="end"></vaadin24-grid-column></grid-wrapper-delayed>',
     );
-    // Delaying the definition of the custom-element so internal <vaadin-grid> is not yet defined
-    customElements.define('grid-wrapper-delayed', class extends GridWrapper {});
+    // Delaying the definition of the custom-element so internal <vaadin24-grid> is not yet defined
+    internalCustomElements.define('grid-wrapper-delayed', class extends GridWrapper {});
 
     const grid = await initGrid(wrapper);
 
