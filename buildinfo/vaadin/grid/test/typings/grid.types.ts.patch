Index: test/typings/grid.types.ts
===================================================================
--- test/typings/grid.types.ts
+++ test/typings/grid.types.ts
@@ -1,6 +1,6 @@
-import type { DisabledMixinClass } from '@vaadin/component-base/src/disabled-mixin.js';
-import type { ElementMixinClass } from '@vaadin/component-base/src/element-mixin.js';
-import type { ThemableMixinClass } from '@vaadin/vaadin-themable-mixin';
+import type { DisabledMixinClass } from '@scoped-vaadin/component-base/src/disabled-mixin.js';
+import type { ElementMixinClass } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import type { ThemableMixinClass } from '@scoped-vaadin/vaadin-themable-mixin';
 import type {
   GridColumnGroup,
   GridFilter,
@@ -68,7 +68,7 @@
 const assertType = <TExpected>(actual: TExpected) => actual;
 
 /* Grid */
-const genericGrid = document.createElement('vaadin-grid');
+const genericGrid = document.createElement('vaadin24-grid');
 assertType<Grid>(genericGrid);
 
 const narrowedGrid = genericGrid as Grid<TestGridItem>;
@@ -215,7 +215,7 @@
 assertType<string | null | undefined>(narrowedGrid.theme);
 
 /* GridColumn */
-const genericColumn = document.createElement('vaadin-grid-column');
+const genericColumn = document.createElement('vaadin24-grid-column');
 assertType<GridColumn>(genericColumn);
 
 const bodyRenderer: GridBodyRenderer<TestGridItem> = (root, column, model) => {
@@ -251,7 +251,7 @@
 assertType<boolean>(narrowedColumn.autoWidth);
 
 /* GridColumnGroup */
-const genericColumnGroup = document.createElement('vaadin-grid-column-group');
+const genericColumnGroup = document.createElement('vaadin24-grid-column-group');
 assertType<GridColumnGroup>(genericColumnGroup);
 
 const narrowedColumnGroup = genericColumnGroup as GridColumnGroup<TestGridItem>;
@@ -259,7 +259,7 @@
 assertType<ColumnBaseMixinClass<TestGridItem>>(narrowedColumnGroup);
 
 /* GridFilter */
-const filter = document.createElement('vaadin-grid-filter');
+const filter = document.createElement('vaadin24-grid-filter');
 assertType<GridFilter>(filter);
 assertType<HTMLElement>(filter);
 assertType<string | null | undefined>(filter.path);
@@ -271,7 +271,7 @@
 });
 
 /* GridFilterColumn */
-const genericFilterColumn = document.createElement('vaadin-grid-filter-column');
+const genericFilterColumn = document.createElement('vaadin24-grid-filter-column');
 assertType<GridFilterColumn>(genericFilterColumn);
 
 const narrowedFilterColumn = genericFilterColumn as GridFilterColumn<TestGridItem>;
@@ -280,7 +280,7 @@
 assertType<string | null | undefined>(narrowedFilterColumn.path);
 
 /* GridSelectionColumn */
-const genericSelectionColumn = document.createElement('vaadin-grid-selection-column');
+const genericSelectionColumn = document.createElement('vaadin24-grid-selection-column');
 assertType<GridSelectionColumn>(genericSelectionColumn);
 
 const narrowedSelectionColumn = genericSelectionColumn as GridSelectionColumn<TestGridItem>;
@@ -298,7 +298,7 @@
 assertType<boolean>(narrowedSelectionColumn.autoSelect);
 
 /* GridSortColumn */
-const genericSortColumn = document.createElement('vaadin-grid-sort-column');
+const genericSortColumn = document.createElement('vaadin24-grid-sort-column');
 assertType<GridSortColumn>(genericSortColumn);
 
 const narrowedSortColumn = genericSortColumn as GridSortColumn<TestGridItem>;
@@ -312,7 +312,7 @@
 });
 
 /* GridSorter */
-const sorter = document.createElement('vaadin-grid-sorter');
+const sorter = document.createElement('vaadin24-grid-sorter');
 assertType<GridSorter>(sorter);
 
 sorter.addEventListener('sorter-changed', (event) => {
@@ -330,7 +330,7 @@
 assertType<GridSorterDirection | null | undefined>(sorter.direction);
 
 /* GridTreeColumn */
-const genericTreeColumn = document.createElement('vaadin-grid-tree-column');
+const genericTreeColumn = document.createElement('vaadin24-grid-tree-column');
 assertType<GridTreeColumn>(genericTreeColumn);
 
 const narrowedTreeColumn = genericTreeColumn as GridTreeColumn<TestGridItem>;
@@ -339,7 +339,7 @@
 assertType<string | null | undefined>(narrowedTreeColumn.itemHasChildrenPath);
 
 /* GridTreeToggle */
-const treeToggle = document.createElement('vaadin-grid-tree-toggle');
+const treeToggle = document.createElement('vaadin24-grid-tree-toggle');
 assertType<GridTreeToggle>(treeToggle);
 assertType<ThemableMixinClass>(treeToggle);
 assertType<number>(treeToggle.level);
