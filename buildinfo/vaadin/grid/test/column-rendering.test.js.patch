Index: test/column-rendering.test.js
===================================================================
--- test/column-rendering.test.js
+++ test/column-rendering.test.js
@@ -78,12 +78,12 @@
     });
 
     beforeEach(async () => {
-      grid = fixtureSync(`<vaadin-grid style="width: 400px;"></vaadin-grid>`);
+      grid = fixtureSync(`<vaadin24-grid style="width: 400px;"></vaadin24-grid>`);
       cellContent = 'cell';
 
       columns = [];
       for (let i = 0; i < 10; i++) {
-        const column = document.createElement('vaadin-grid-column');
+        const column = document.createElement('vaadin24-grid-column');
         column.header = `Col ${i}`;
 
         // eslint-disable-next-line @typescript-eslint/no-loop-func
@@ -218,15 +218,15 @@
 
     it('should render new appended column', async () => {
       grid = fixtureSync(`
-        <vaadin-grid item-id-path="name" column-rendering="lazy">
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid item-id-path="name" column-rendering="lazy">
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       grid.items = [{ name: `Item 1` }];
       await nextResize(grid);
       flushGrid(grid);
 
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       grid.appendChild(newColumn);
       await nextFrame();
 
