Index: test/column-resizing.common.js
===================================================================
--- test/column-resizing.common.js
+++ test/column-resizing.common.js
@@ -20,12 +20,12 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px" column-reordering-allowed>
-        <vaadin-grid-column resizable header="0"></vaadin-grid-column>
-        <vaadin-grid-column header="1"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid size="1" style="width: 300px; height: 400px" column-reordering-allowed>
+        <vaadin24-grid-column resizable header="0"></vaadin24-grid-column>
+        <vaadin24-grid-column header="1"></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
-    grid.querySelectorAll('vaadin-grid-column').forEach((col, idx) => {
+    grid.querySelectorAll('vaadin24-grid-column').forEach((col, idx) => {
       col.renderer = (root) => {
         root.textContent = idx;
       };
@@ -231,14 +231,14 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px">
-        <vaadin-grid-column-group resizable header="0">
-          <vaadin-grid-column flex-grow="0" header="0"></vaadin-grid-column>
-          <vaadin-grid-column flex-grow="0" header="1"></vaadin-grid-column>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+      <vaadin24-grid size="1" style="width: 300px; height: 400px">
+        <vaadin24-grid-column-group resizable header="0">
+          <vaadin24-grid-column flex-grow="0" header="0"></vaadin24-grid-column>
+          <vaadin24-grid-column flex-grow="0" header="1"></vaadin24-grid-column>
+        </vaadin24-grid-column-group>
+      </vaadin24-grid>
     `);
-    grid.querySelectorAll('vaadin-grid-column').forEach((col, idx) => {
+    grid.querySelectorAll('vaadin24-grid-column').forEach((col, idx) => {
       col.renderer = (root) => {
         root.textContent = idx;
       };
@@ -255,7 +255,7 @@
   });
 
   it('should inherit resizable value from parent group', async () => {
-    const newColumn = document.createElement('vaadin-grid-column');
+    const newColumn = document.createElement('vaadin24-grid-column');
     grid._columnTree[0][0].appendChild(newColumn);
     grid._columnTree[0][0]._observer.flush();
 
@@ -264,13 +264,13 @@
   });
 
   it('should have resizable false by default on column', () => {
-    const newColumn = document.createElement('vaadin-grid-column');
+    const newColumn = document.createElement('vaadin24-grid-column');
 
     expect(newColumn.resizable).to.be.false;
   });
 
   it('should not have resizable by default on column group', () => {
-    const newColumn = document.createElement('vaadin-grid-column-group');
+    const newColumn = document.createElement('vaadin24-grid-column-group');
 
     expect(newColumn.resizable).to.be.undefined;
   });
@@ -316,20 +316,20 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="1" style="width: 300px; height: 400px">
-        <vaadin-grid-column-group resizable header="0">
-          <vaadin-grid-column-group resizable header="1">
-            <vaadin-grid-column header="2"></vaadin-grid-column>
-          </vaadin-grid-column-group>
-        </vaadin-grid-column-group>
-        <vaadin-grid-column-group header="3">
-          <vaadin-grid-column-group header="4">
-            <vaadin-grid-column header="5"></vaadin-grid-column>
-          </vaadin-grid-column-group>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+      <vaadin24-grid size="1" style="width: 300px; height: 400px">
+        <vaadin24-grid-column-group resizable header="0">
+          <vaadin24-grid-column-group resizable header="1">
+            <vaadin24-grid-column header="2"></vaadin24-grid-column>
+          </vaadin24-grid-column-group>
+        </vaadin24-grid-column-group>
+        <vaadin24-grid-column-group header="3">
+          <vaadin24-grid-column-group header="4">
+            <vaadin24-grid-column header="5"></vaadin24-grid-column>
+          </vaadin24-grid-column-group>
+        </vaadin24-grid-column-group>
+      </vaadin24-grid>
     `);
-    grid.querySelectorAll('vaadin-grid-column').forEach((col, idx) => {
+    grid.querySelectorAll('vaadin24-grid-column').forEach((col, idx) => {
       col.renderer = (root) => {
         root.textContent = idx === 0 ? 2 : 5;
       };
