Index: test/keyboard-navigation.test.js
===================================================================
--- test/keyboard-navigation.test.js
+++ test/keyboard-navigation.test.js
@@ -15,12 +15,12 @@
 } from '@vaadin/testing-helpers';
 import { sendKeys } from '@web/test-runner-commands';
 import sinon from 'sinon';
-import '@vaadin/polymer-legacy-adapter/template-renderer.js';
+import '@scoped-vaadin/polymer-legacy-adapter/template-renderer.js';
 import '../vaadin-grid.js';
 import '../vaadin-grid-tree-column.js';
 import '../vaadin-grid-column-group.js';
 import '../vaadin-grid-selection-column.js';
-import { isElementFocused } from '@vaadin/component-base/src/focus-utils.js';
+import { isElementFocused } from '@scoped-vaadin/component-base/src/focus-utils.js';
 import {
   flushGrid,
   getCell,
@@ -192,16 +192,16 @@
 describe('keyboard navigation', () => {
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid theme="no-border">
+      <vaadin23-grid theme="no-border">
         <template class="row-details">
           <input type="text">
         </template>
-        <vaadin-grid-column>
+        <vaadin23-grid-column>
           <template class="header"></template>
           <template>[[index]] [[item]]</template>
           <template class="footer"></template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">
             <input>
           </template>
@@ -211,8 +211,8 @@
           <template class="footer">
             <input>
           </template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">
             <div></div>
             <div></div>
@@ -223,8 +223,8 @@
             </span>
           </template>
           <template class="footer"></template>
-        </vaadin-grid-column>
-      </vaadin-grid>
+        </vaadin23-grid-column>
+      </vaadin23-grid>
     `);
 
     scroller = grid.$.scroller;
@@ -446,7 +446,7 @@
     });
 
     it('should be possible to tab through the grid when first column is hidden', () => {
-      const firstColumn = grid.querySelectorAll('vaadin-grid-column')[0];
+      const firstColumn = grid.querySelectorAll('vaadin23-grid-column')[0];
       firstColumn.hidden = true;
 
       const tabbableElements = getTabbableElements(grid.shadowRoot);
@@ -471,7 +471,7 @@
     });
 
     it('should be possible to shift-tab through grid when first column is hidden', () => {
-      const firstColumn = grid.querySelectorAll('vaadin-grid-column')[0];
+      const firstColumn = grid.querySelectorAll('vaadin23-grid-column')[0];
       firstColumn.hidden = true;
 
       const tabbableElements = getTabbableElements(grid.shadowRoot);
@@ -1159,8 +1159,8 @@
 
       it('should not throw when focusing a group header cell', () => {
         // Wrap the columns in a group
-        const group = document.createElement('vaadin-grid-column-group');
-        group.append(...grid.querySelectorAll('vaadin-grid-column'));
+        const group = document.createElement('vaadin23-grid-column-group');
+        group.append(...grid.querySelectorAll('vaadin23-grid-column'));
         group.header = 'group';
         grid.appendChild(group);
         flushGrid(grid);
@@ -1495,7 +1495,7 @@
 
       it('should allow toggling a checkbox with space keypress', async () => {
         // Add a selection column
-        grid.appendChild(document.createElement('vaadin-grid-selection-column'));
+        grid.appendChild(document.createElement('vaadin23-grid-selection-column'));
         flushGrid(grid);
 
         // Get a reference to a checkbox, focus it and hit space
@@ -1564,16 +1564,16 @@
   describe('interaction mode', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-      <vaadin-grid theme="no-border">
+      <vaadin23-grid theme="no-border">
         <template class="row-details">
           <input type="text">
         </template>
-        <vaadin-grid-column>
+        <vaadin23-grid-column>
           <template class="header"></template>
           <template>[[index]] [[item]]</template>
           <template class="footer"></template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">
             <input>
           </template>
@@ -1583,8 +1583,8 @@
           <template class="footer">
             <input>
           </template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin23-grid-column>
+        <vaadin23-grid-column>
           <template class="header">
             <input>
           </template>
@@ -1594,8 +1594,8 @@
           <template class="footer">
             <input>
           </template>
-        </vaadin-grid-column>
-      </vaadin-grid>
+        </vaadin23-grid-column>
+      </vaadin23-grid>
     `);
 
       scroller = grid.$.scroller;
@@ -1985,7 +1985,7 @@
   describe('focus events on cell content', () => {
     it('should dispatch cell-focus on keyboard navigation', () => {
       const expectedContext = {
-        column: grid.querySelector('vaadin-grid-column'),
+        column: grid.querySelector('vaadin23-grid-column'),
         detailsOpened: false,
         expanded: false,
         index: 0,
@@ -2074,22 +2074,22 @@
 describe('keyboard navigation on column groups', () => {
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column-group>
+      <vaadin23-grid>
+        <vaadin23-grid-column-group>
           <template class="header">main group header</template>
           <template class="footer">main group footer</template>
 
-          <vaadin-grid-column-group>
+          <vaadin23-grid-column-group>
             <template class="header">sub group header</template>
 
-            <vaadin-grid-column>
+            <vaadin23-grid-column>
               <template class="header">column header</template>
               <template class="footer">column footer</template>
               <template>[[index]] [[item]]</template>
-            </vaadin-grid-column>
-          </vaadin-grid-column-group>
-        </vaadin-grid-column-group>
-      </vaadin-grid>
+            </vaadin23-grid-column>
+          </vaadin23-grid-column-group>
+        </vaadin23-grid-column-group>
+      </vaadin23-grid>
     `);
     grid.items = ['foo', 'bar'];
     flushGrid(grid);
@@ -2157,9 +2157,9 @@
 
       beforeEach(() => {
         header = grid.$.header;
-        mainGroup = grid.querySelector('vaadin-grid-column-group');
-        subGroup = mainGroup.querySelector('vaadin-grid-column-group');
-        column = subGroup.querySelector('vaadin-grid-column');
+        mainGroup = grid.querySelector('vaadin23-grid-column-group');
+        subGroup = mainGroup.querySelector('vaadin23-grid-column-group');
+        column = subGroup.querySelector('vaadin23-grid-column');
       });
 
       it('should update tabbable header cell on header row hide', async () => {
@@ -2246,7 +2246,7 @@
 
       it('should remain on the first column after a tabbable cell row is hidden', async () => {
         // Add a second column
-        const column = document.createElement('vaadin-grid-column');
+        const column = document.createElement('vaadin23-grid-column');
         grid.appendChild(column);
         await nextFrame();
 
@@ -2289,9 +2289,9 @@
 describe('empty grid', () => {
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column header="header"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin23-grid>
+        <vaadin23-grid-column header="header"></vaadin23-grid-column>
+      </vaadin23-grid>
     `);
     flushGrid(grid);
   });
@@ -2334,9 +2334,9 @@
 
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-tree-column path="name"></vaadin-grid-tree-column>
-      </vaadin-grid>
+      <vaadin23-grid>
+        <vaadin23-grid-tree-column path="name"></vaadin23-grid-tree-column>
+      </vaadin23-grid>
     `);
 
     grid.dataProvider = hierarchicalDataProvider;
@@ -2392,9 +2392,9 @@
   beforeEach(() => {
     dataProviderCallbacks = [];
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column path="name"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin23-grid>
+        <vaadin23-grid-column path="name"></vaadin23-grid-column>
+      </vaadin23-grid>
     `);
     cellFocusSpy = sinon.spy();
     grid.addEventListener('cell-focus', cellFocusSpy);
@@ -2408,7 +2408,7 @@
 
   it('should dispatch cell-focused event for lazily loaded item', async () => {
     const expectedContext = {
-      column: grid.querySelector('vaadin-grid-column'),
+      column: grid.querySelector('vaadin23-grid-column'),
       detailsOpened: false,
       expanded: false,
       index: 999,
