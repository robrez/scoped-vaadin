Index: test/selection.common.js
===================================================================
--- test/selection.common.js
+++ test/selection.common.js
@@ -30,10 +30,10 @@
   describe('with renderer', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 200px;" size="10">
-          <vaadin-grid-column></vaadin-grid-column>
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 200px;" size="10">
+          <vaadin24-grid-column></vaadin24-grid-column>
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
 
       const cols = grid.children;
@@ -116,10 +116,10 @@
   describe('renderer cells', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 200px;" size="10">
-          <vaadin-grid-column></vaadin-grid-column>
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 200px;" size="10">
+          <vaadin24-grid-column></vaadin24-grid-column>
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
 
       const cols = grid.children;
@@ -171,16 +171,16 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid style="width: 200px; height: 200px;">
-        <vaadin-grid-selection-column auto-select></vaadin-grid-selection-column>
-        <vaadin-grid-selection-column header="header"></vaadin-grid-selection-column>
+      <vaadin24-grid style="width: 200px; height: 200px;">
+        <vaadin24-grid-selection-column auto-select></vaadin24-grid-selection-column>
+        <vaadin24-grid-selection-column header="header"></vaadin24-grid-selection-column>
 
-        <vaadin-grid-column-group>
-          <vaadin-grid-selection-column></vaadin-grid-selection-column>
-        </vaadin-grid-column-group>
+        <vaadin24-grid-column-group>
+          <vaadin24-grid-selection-column></vaadin24-grid-selection-column>
+        </vaadin24-grid-column-group>
 
-        <vaadin-grid-filter-column path="value"></vaadin-grid-filter-column>
-      </vaadin-grid>
+        <vaadin24-grid-filter-column path="value"></vaadin24-grid-filter-column>
+      </vaadin24-grid>
     `);
     await nextFrame();
 
@@ -212,7 +212,7 @@
   });
 
   it('should have a checkbox in the body cell', () => {
-    expect(firstBodyCheckbox.localName).to.eql('vaadin-checkbox');
+    expect(firstBodyCheckbox.localName).to.eql('vaadin24-checkbox');
   });
 
   it('should select item when checkbox is checked', async () => {
@@ -261,7 +261,7 @@
   });
 
   it('should have a select all checkbox in the header', () => {
-    expect(selectAllCheckbox.localName).to.eql('vaadin-checkbox');
+    expect(selectAllCheckbox.localName).to.eql('vaadin24-checkbox');
   });
 
   it('should have class name for the select all checkbox', () => {
@@ -414,10 +414,10 @@
 
   it('should not clear pre-selected items', () => {
     const grid = fixtureSync(`
-      <vaadin-grid selected-items='[{"value": "foo"}]'>
-        <vaadin-grid-selection-column></vaadin-grid-selection-column>
-        <vaadin-grid-column path="value"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid selected-items='[{"value": "foo"}]'>
+        <vaadin24-grid-selection-column></vaadin24-grid-selection-column>
+        <vaadin24-grid-column path="value"></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     expect(grid.selectedItems).to.have.length(1);
   });
@@ -468,7 +468,7 @@
     firstBodyCheckbox.checked = true;
 
     await nextFrame();
-    const filter = grid.querySelector('vaadin-grid-filter');
+    const filter = grid.querySelector('vaadin24-grid-filter');
     filter.value = 'foo';
     filter.dispatchEvent(new CustomEvent('input', { bubbles: true, composed: true }));
 
@@ -546,10 +546,10 @@
 
     beforeEach(async () => {
       grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 450px;">
-          <vaadin-grid-selection-column drag-select></vaadin-grid-selection-column>
-          <vaadin-grid-column></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 450px;">
+          <vaadin24-grid-selection-column drag-select></vaadin24-grid-selection-column>
+          <vaadin24-grid-column></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
       await nextFrame();
       grid.items = [...new Array(100)].map((_, i) => `${i}`);
@@ -616,7 +616,7 @@
 
     it('should not toggle checkbox after dragging on a single checkbox', () => {
       const cell = getBodyCellContent(grid, 1, 0);
-      const checkBox = cell.querySelector('vaadin-checkbox');
+      const checkBox = cell.querySelector('vaadin24-checkbox');
       const input = checkBox.querySelector('input');
 
       fireTrackEvent(input, input, 'start');
