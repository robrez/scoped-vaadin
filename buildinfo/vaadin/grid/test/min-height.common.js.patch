Index: test/min-height.common.js
===================================================================
--- test/min-height.common.js
+++ test/min-height.common.js
@@ -30,9 +30,9 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid style="height: 0;">
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid style="height: 0;">
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     flushGrid(grid);
     await nextResize(grid);
@@ -46,7 +46,7 @@
 
   describe('with header', () => {
     beforeEach(async () => {
-      grid.querySelector('vaadin-grid-column').header = 'Header';
+      grid.querySelector('vaadin24-grid-column').header = 'Header';
       flushGrid(grid);
       await nextResize(grid);
     });
@@ -58,7 +58,7 @@
 
   describe('with footer', () => {
     beforeEach(async () => {
-      grid.querySelector('vaadin-grid-column').footerRenderer = (root) => {
+      grid.querySelector('vaadin24-grid-column').footerRenderer = (root) => {
         root.textContent = 'Footer';
       };
       flushGrid(grid);
@@ -72,8 +72,8 @@
 
   describe('with header and footer', () => {
     beforeEach(async () => {
-      grid.querySelector('vaadin-grid-column').header = 'Header';
-      grid.querySelector('vaadin-grid-column').footerRenderer = (root) => {
+      grid.querySelector('vaadin24-grid-column').header = 'Header';
+      grid.querySelector('vaadin24-grid-column').footerRenderer = (root) => {
         root.textContent = 'Footer';
       };
       flushGrid(grid);
@@ -87,8 +87,8 @@
 
   describe('with data', () => {
     beforeEach(async () => {
-      grid.querySelector('vaadin-grid-column').path = 'value';
-      grid.querySelector('vaadin-grid-column').header = null;
+      grid.querySelector('vaadin24-grid-column').path = 'value';
+      grid.querySelector('vaadin24-grid-column').header = null;
       grid.dataProvider = infiniteDataProvider;
       flushGrid(grid);
       await nextResize(grid);
