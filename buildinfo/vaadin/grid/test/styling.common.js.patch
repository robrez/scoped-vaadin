Index: test/styling.common.js
===================================================================
--- test/styling.common.js
+++ test/styling.common.js
@@ -8,10 +8,10 @@
 
   beforeEach(async () => {
     grid = fixtureSync(`
-      <vaadin-grid size="200">
-        <vaadin-grid-column path="value" header="col0"></vaadin-grid-column>
-        <vaadin-grid-column path="value" header="col1"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid size="200">
+        <vaadin24-grid-column path="value" header="col0"></vaadin24-grid-column>
+        <vaadin24-grid-column path="value" header="col1"></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     grid.dataProvider = infiniteDataProvider;
     flushGrid(grid);
@@ -118,7 +118,7 @@
 
     it(`should have the right ${entries} after toggling column visibility`, async () => {
       grid[generatorFn] = (_column, { index }) => (index % 2 === 0 ? 'even' : 'odd');
-      const column = grid.querySelector('vaadin-grid-column');
+      const column = grid.querySelector('vaadin24-grid-column');
       column.hidden = true;
       await nextRender();
       column.hidden = false;
@@ -220,7 +220,7 @@
     let footerCell;
 
     beforeEach(() => {
-      column = grid.querySelector('vaadin-grid-column');
+      column = grid.querySelector('vaadin24-grid-column');
       column.footerRenderer = (root) => {
         root.textContent = 'footer';
       };
@@ -301,7 +301,7 @@
     });
 
     it('should not override custom part names', () => {
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.path = 'value';
       newColumn.headerPartName = 'foobar';
       newColumn.footerPartName = 'bazqux';
