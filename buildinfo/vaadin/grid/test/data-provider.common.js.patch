Index: test/data-provider.common.js
===================================================================
--- test/data-provider.common.js
+++ test/data-provider.common.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { aTimeout, fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -26,9 +27,9 @@
           height: 30px;
         }
       </style>
-      <vaadin-grid size="100" id="grid" style="height: 300px;" data-provider="[[dataProvider]]">
-        <vaadin-grid-column id="col"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid size="100" id="grid" style="height: 300px;" data-provider="[[dataProvider]]">
+        <vaadin24-grid-column id="col"></vaadin24-grid-column>
+      </vaadin24-grid>
     `;
   }
 
@@ -43,14 +44,14 @@
   }
 }
 
-customElements.define('wrapped-grid', WrappedGrid);
+internalCustomElements.define('wrapped-grid', WrappedGrid);
 
 class PageSizeGrid extends PolymerElement {
   static get template() {
     return html`
-      <vaadin-grid data-provider="[[dataProvider]]" size="[[size]]" id="grid">
-        <vaadin-grid-column header="#" path="value"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid data-provider="[[dataProvider]]" size="[[size]]" id="grid">
+        <vaadin24-grid-column header="#" path="value"></vaadin24-grid-column>
+      </vaadin24-grid>
     `;
   }
 
@@ -69,7 +70,7 @@
   }
 }
 
-customElements.define('page-size-grid', PageSizeGrid);
+internalCustomElements.define('page-size-grid', PageSizeGrid);
 
 function simulateScrollToStart(grid) {
   // Make sure not over scroll more than the delta threshold limit of 10k.
@@ -119,11 +120,11 @@
 
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid>
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
-    grid.querySelector('vaadin-grid-column').renderer = (root, _, model) => {
+    grid.querySelector('vaadin24-grid-column').renderer = (root, _, model) => {
       root.textContent = model.index;
     };
     flushGrid(grid);
@@ -208,9 +209,9 @@
       // Initialize a fresh grid
       grid.remove();
       grid = fixtureSync(`
-        <vaadin-grid>
-          <vaadin-grid-sort-column path="value" direction="asc"></vaadin-grid-sort-column>
-        </vaadin-grid>
+        <vaadin24-grid>
+          <vaadin24-grid-sort-column path="value" direction="asc"></vaadin24-grid-sort-column>
+        </vaadin24-grid>
       `);
 
       // Set data provider
@@ -230,9 +231,9 @@
       // Add multiple pre-sorted sort columns
       const columns = fixtureSync`
         <div>
-          <vaadin-grid-sort-column path="name" direction="asc"></vaadin-grid-sort-column>
-          <vaadin-grid-sort-column path="price" direction="asc"></vaadin-grid-sort-column>
-          <vaadin-grid-sort-column path="discount" direction="asc"></vaadin-grid-sort-column>
+          <vaadin24-grid-sort-column path="name" direction="asc"></vaadin24-grid-sort-column>
+          <vaadin24-grid-sort-column path="price" direction="asc"></vaadin24-grid-sort-column>
+          <vaadin24-grid-sort-column path="discount" direction="asc"></vaadin24-grid-sort-column>
         </div>
       `;
       grid.multiSort = true;
@@ -290,7 +291,7 @@
     }
 
     beforeEach(async () => {
-      const treeColumn = document.createElement('vaadin-grid-tree-column');
+      const treeColumn = document.createElement('vaadin24-grid-tree-column');
       await nextFrame();
       treeColumn.path = 'value';
       grid.itemHasChildrenPath = 'value';
@@ -666,8 +667,8 @@
 
 describe('attached', () => {
   it('should have rows when attached and shown after cache is cleared on hidden grid', async () => {
-    const grid = document.createElement('vaadin-grid');
-    const col = document.createElement('vaadin-grid-column');
+    const grid = document.createElement('vaadin24-grid');
+    const col = document.createElement('vaadin24-grid-column');
     col.setAttribute('path', 'item');
     grid.appendChild(col);
 
@@ -692,7 +693,7 @@
 
 describe('unattached', () => {
   it('should not throw on clearCache', () => {
-    const grid = document.createElement('vaadin-grid');
+    const grid = document.createElement('vaadin24-grid');
     expect(() => grid.clearCache()).to.not.throw(Error);
   });
 });
