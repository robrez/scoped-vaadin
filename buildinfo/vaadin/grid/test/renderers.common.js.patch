Index: test/renderers.common.js
===================================================================
--- test/renderers.common.js
+++ test/renderers.common.js
@@ -16,9 +16,9 @@
 
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid>
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     column = grid.firstElementChild;
     grid.items = [{ foo: 'bar' }, { foo: 'baz' }];
@@ -49,7 +49,7 @@
     it('should pass column as `owner` and `this` to the renderer', () => {
       column.renderer = function (root, owner) {
         expect(this).to.eql(owner);
-        expect(owner.localName).to.eql('vaadin-grid-column');
+        expect(owner.localName).to.eql('vaadin24-grid-column');
       };
     });
 
@@ -221,7 +221,7 @@
       column.headerRenderer = (root) => {
         root.textContent = 'foo';
       };
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.headerRenderer = (root) => {
         root.textContent = 'bar';
       };
@@ -234,7 +234,7 @@
 
     it('should have a visible header with header', () => {
       column.header = 'foo';
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.header = 'bar';
       grid.appendChild(newColumn);
       flushGrid(grid);
@@ -267,7 +267,7 @@
 
     it('should apply updates to hidden column headers', async () => {
       // Add another column
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.headerRenderer = (root) => {
         root.textContent = 'header2';
       };
