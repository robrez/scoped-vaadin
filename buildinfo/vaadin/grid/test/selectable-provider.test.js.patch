Index: test/selectable-provider.test.js
===================================================================
--- test/selectable-provider.test.js
+++ test/selectable-provider.test.js
@@ -19,15 +19,15 @@
   let selectAllCheckbox;
 
   function getItemCheckbox(rowIndex) {
-    return getBodyCellContent(grid, rowIndex, 0).querySelector('vaadin-checkbox');
+    return getBodyCellContent(grid, rowIndex, 0).querySelector('vaadin24-checkbox');
   }
 
   beforeEach(async () => {
     grid = fixtureSync(`
-        <vaadin-grid style="width: 200px; height: 400px;">
-          <vaadin-grid-selection-column></vaadin-grid-selection-column>
-          <vaadin-grid-column path="name"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid style="width: 200px; height: 400px;">
+          <vaadin24-grid-selection-column></vaadin24-grid-selection-column>
+          <vaadin24-grid-column path="name"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
 
     // setup 10 items, first 5 are non-selectable
@@ -39,8 +39,8 @@
     flushGrid(grid);
     await nextFrame();
 
-    selectionColumn = grid.querySelector('vaadin-grid-selection-column');
-    selectAllCheckbox = getHeaderCellContent(grid, 0, 0).querySelector('vaadin-checkbox');
+    selectionColumn = grid.querySelector('vaadin24-grid-selection-column');
+    selectAllCheckbox = getHeaderCellContent(grid, 0, 0).querySelector('vaadin24-checkbox');
   });
 
   describe('checkbox states', () => {
@@ -212,11 +212,11 @@
       await nextFrame();
 
       // add new selection column
-      selectionColumn = document.createElement('vaadin-grid-selection-column');
+      selectionColumn = document.createElement('vaadin24-grid-selection-column');
       grid.prepend(selectionColumn);
       // column mixin only adds cells after an animation frame
       await nextFrame();
-      selectAllCheckbox = getHeaderCellContent(grid, 0, 0).querySelector('vaadin-checkbox');
+      selectAllCheckbox = getHeaderCellContent(grid, 0, 0).querySelector('vaadin24-checkbox');
 
       expect(selectAllCheckbox.hasAttribute('hidden')).to.be.true;
     });
