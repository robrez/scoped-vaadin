Index: test/hidden-grid.test.js
===================================================================
--- test/hidden-grid.test.js
+++ test/hidden-grid.test.js
@@ -11,12 +11,12 @@
   describe('initially hidden', () => {
     beforeEach(async () => {
       grid = fixtureSync(`
-      <vaadin-grid style="height: 200px; width: 200px;" hidden size="1">
-        <vaadin-grid-column header="foo"></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid style="height: 200px; width: 200px;" hidden size="1">
+        <vaadin24-grid-column header="foo"></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
       await nextRender();
-      grid.querySelector('vaadin-grid-column').renderer = (root, _, model) => {
+      grid.querySelector('vaadin24-grid-column').renderer = (root, _, model) => {
         root.textContent = model.index;
       };
       grid.dataProvider = infiniteDataProvider;
@@ -48,11 +48,11 @@
   describe('hiding the grid', () => {
     beforeEach(() => {
       grid = fixtureSync(`
-        <vaadin-grid size="1000">
-          <vaadin-grid-column header="foo"></vaadin-grid-column>
-        </vaadin-grid>
+        <vaadin24-grid size="1000">
+          <vaadin24-grid-column header="foo"></vaadin24-grid-column>
+        </vaadin24-grid>
       `);
-      grid.querySelector('vaadin-grid-column').renderer = (root, _, model) => {
+      grid.querySelector('vaadin24-grid-column').renderer = (root, _, model) => {
         root.textContent = model.index + 1;
       };
       grid.dataProvider = sinon.spy(infiniteDataProvider);
