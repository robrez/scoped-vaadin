Index: test/renderers.test.js
===================================================================
--- test/renderers.test.js
+++ test/renderers.test.js
@@ -17,9 +17,9 @@
 
   beforeEach(() => {
     grid = fixtureSync(`
-      <vaadin-grid>
-        <vaadin-grid-column></vaadin-grid-column>
-      </vaadin-grid>
+      <vaadin24-grid>
+        <vaadin24-grid-column></vaadin24-grid-column>
+      </vaadin24-grid>
     `);
     column = grid.firstElementChild;
     grid.items = [{ foo: 'bar' }, { foo: 'baz' }];
@@ -50,7 +50,7 @@
     it('should pass column as `owner` and `this` to the renderer', () => {
       column.renderer = function (_root, owner) {
         expect(this).to.eql(owner);
-        expect(owner.localName).to.eql('vaadin-grid-column');
+        expect(owner.localName).to.eql('vaadin24-grid-column');
       };
     });
 
@@ -222,7 +222,7 @@
       column.headerRenderer = (root) => {
         root.textContent = 'foo';
       };
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.headerRenderer = (root) => {
         root.textContent = 'bar';
       };
@@ -235,7 +235,7 @@
 
     it('should have a visible header with header', () => {
       column.header = 'foo';
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.header = 'bar';
       grid.appendChild(newColumn);
       flushGrid(grid);
@@ -268,7 +268,7 @@
 
     it('should apply updates to hidden column headers', async () => {
       // Add another column
-      const newColumn = document.createElement('vaadin-grid-column');
+      const newColumn = document.createElement('vaadin24-grid-column');
       newColumn.headerRenderer = (root) => {
         root.textContent = 'header2';
       };
