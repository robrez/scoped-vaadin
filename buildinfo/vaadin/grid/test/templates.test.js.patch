Index: test/templates.test.js
===================================================================
--- test/templates.test.js
+++ test/templates.test.js
@@ -1,9 +1,10 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
 import '@polymer/polymer/lib/elements/dom-bind.js';
-import '@vaadin/polymer-legacy-adapter/template-renderer.js';
-import '@vaadin/text-field/vaadin-text-field.js';
+import '@scoped-vaadin/polymer-legacy-adapter/template-renderer.js';
+import '@scoped-vaadin/text-field/vaadin-text-field.js';
 import '../vaadin-grid.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
 import {
@@ -19,42 +20,42 @@
 class GridWithSlots extends PolymerElement {
   static get template() {
     return html`
-      <vaadin-grid size="10" id="grid" style="height: 300px" data-provider="[[dataProvider]]">
-        <vaadin-grid-column>
+      <vaadin24-grid size="10" id="grid" style="height: 300px" data-provider="[[dataProvider]]">
+        <vaadin24-grid-column>
           <template>[[_format(index)]] [[parentProp]] [[_formatItem(item)]]</template>
           <template class="header">[[_format('header1')]] [[parentProp]]</template>
           <template class="footer">Footer</template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin24-grid-column>
+        <vaadin24-grid-column>
           <template>
-            <vaadin-text-field on-value-changed="_valueChanged" value="{{parentProp}}"></vaadin-text-field>
+            <vaadin24-text-field on-value-changed="_valueChanged" value="{{parentProp}}"></vaadin24-text-field>
           </template>
           <template class="header">
-            <vaadin-text-field on-invalid-changed="_invalidChanged" value="{{parentProp}}"></vaadin-text-field>
+            <vaadin24-text-field on-invalid-changed="_invalidChanged" value="{{parentProp}}"></vaadin24-text-field>
           </template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin24-grid-column>
+        <vaadin24-grid-column>
           <template>
-            <vaadin-text-field value="{{parentPath.foo}}"></vaadin-text-field>
+            <vaadin24-text-field value="{{parentPath.foo}}"></vaadin24-text-field>
           </template>
           <template class="header">
-            <vaadin-text-field value="{{parentPath.foo}}"></vaadin-text-field>
+            <vaadin24-text-field value="{{parentPath.foo}}"></vaadin24-text-field>
           </template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin24-grid-column>
+        <vaadin24-grid-column>
           <template>
-            <vaadin-text-field value="{{item.value}}"></vaadin-text-field>
+            <vaadin24-text-field value="{{item.value}}"></vaadin24-text-field>
           </template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin24-grid-column>
+        <vaadin24-grid-column>
           <template>[[item.value]]</template>
-        </vaadin-grid-column>
-        <vaadin-grid-column>
+        </vaadin24-grid-column>
+        <vaadin24-grid-column>
           <slot name="grid-column-header-template"></slot>
           <slot name="grid-column-template"></slot>
           <slot name="grid-column-footer-template"></slot>
-        </vaadin-grid-column>
-      </vaadin-grid>
+        </vaadin24-grid-column>
+      </vaadin24-grid>
     `;
   }
 
@@ -94,7 +95,7 @@
   }
 }
 
-customElements.define('grid-with-slots', GridWithSlots);
+internalCustomElements.define('grid-with-slots', GridWithSlots);
 
 class SlottedTemplates extends PolymerElement {
   static get template() {
@@ -119,7 +120,7 @@
   }
 }
 
-customElements.define('slotted-templates', SlottedTemplates);
+internalCustomElements.define('slotted-templates', SlottedTemplates);
 
 function getHeaderCell(grid, index) {
   return grid.$.header.querySelectorAll('[part~="cell"]')[index];
@@ -154,7 +155,7 @@
       const spy = sinon.spy();
       grid.addEventListener('cell-activate', spy);
 
-      const input = getCellContent(getCell(grid, 1)).querySelector('vaadin-text-field');
+      const input = getCellContent(getCell(grid, 1)).querySelector('vaadin24-text-field');
       input.focus();
       input.click();
 
@@ -224,7 +225,7 @@
       });
 
       it('should two-way bind parent properties inside cell templates', () => {
-        const input = getCellContent(getCell(grid, 1)).querySelector('vaadin-text-field');
+        const input = getCellContent(getCell(grid, 1)).querySelector('vaadin24-text-field');
         expect(input.value).to.eql('foobar');
 
         input.value = 'value';
@@ -237,7 +238,7 @@
       });
 
       it('should two-way bind parent properties inside header templates', () => {
-        const input = getCellContent(getHeaderCell(grid, 1)).querySelector('vaadin-text-field');
+        const input = getCellContent(getHeaderCell(grid, 1)).querySelector('vaadin24-text-field');
         expect(input.value).to.eql('foobar');
 
         input.value = 'value';
@@ -248,7 +249,7 @@
 
     describe('using event handlers inside templates', () => {
       it('should add event listeners inside cell templates', () => {
-        const input = getCellContent(getCell(grid, 1)).querySelector('vaadin-text-field');
+        const input = getCellContent(getCell(grid, 1)).querySelector('vaadin24-text-field');
 
         input.value = 'foo';
 
@@ -256,7 +257,7 @@
       });
 
       it('should add event listeners inside header templates', () => {
-        const input = getCellContent(getHeaderCell(grid, 1)).querySelector('vaadin-text-field');
+        const input = getCellContent(getHeaderCell(grid, 1)).querySelector('vaadin24-text-field');
 
         input.invalid = 'foo';
 
@@ -284,12 +285,12 @@
       });
 
       it('should bind inside cell templates', () => {
-        expect(getCellContent(getCell(grid, 2)).querySelector('vaadin-text-field').value).to.contain('bar');
-        expect(getCellContent(getCell(grid, 8)).querySelector('vaadin-text-field').value).to.contain('bar');
+        expect(getCellContent(getCell(grid, 2)).querySelector('vaadin24-text-field').value).to.contain('bar');
+        expect(getCellContent(getCell(grid, 8)).querySelector('vaadin24-text-field').value).to.contain('bar');
       });
 
       it('should two-way bind parent path inside cell templates', () => {
-        const input = getCellContent(getCell(grid, 2)).querySelector('vaadin-text-field');
+        const input = getCellContent(getCell(grid, 2)).querySelector('vaadin24-text-field');
         expect(input.value).to.eql('bar');
 
         input.value = 'value';
@@ -298,11 +299,11 @@
       });
 
       it('should bind inside header templates', () => {
-        expect(getCellContent(getHeaderCell(grid, 2)).querySelector('vaadin-text-field').value).to.contain('bar');
+        expect(getCellContent(getHeaderCell(grid, 2)).querySelector('vaadin24-text-field').value).to.contain('bar');
       });
 
       it('should two-way bind parent path inside header templates', () => {
-        const input = getCellContent(getHeaderCell(grid, 2)).querySelector('vaadin-text-field');
+        const input = getCellContent(getHeaderCell(grid, 2)).querySelector('vaadin24-text-field');
         expect(input.value).to.eql('bar');
 
         input.value = 'value';
@@ -331,7 +332,7 @@
 
       flushGrid(grid);
 
-      input = getCellContent(getCell(grid, 3)).querySelector('vaadin-text-field');
+      input = getCellContent(getCell(grid, 3)).querySelector('vaadin24-text-field');
     });
 
     it('should two-way bind instance path inside cell templates', () => {
@@ -360,14 +361,14 @@
       <dom-bind>
         <template>
           <div id="div">[[items.0.foo]]</div>
-          <vaadin-grid id="grid" items="{{items}}">
-            <vaadin-grid-column>
+          <vaadin24-grid id="grid" items="{{items}}">
+            <vaadin24-grid-column>
               <template>
                 <input value="{{item.foo::input}}" />
                 <input type="checkbox" checked="{{selected::change}}" />
               </template>
-            </vaadin-grid-column>
-          </vaadin-grid>
+            </vaadin24-grid-column>
+          </vaadin24-grid>
         </template>
       </dom-bind>
     `);
