Index: test/details.common.js
===================================================================
--- test/details.common.js
+++ test/details.common.js
@@ -1,25 +1,26 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { click, fixtureSync, nextRender, nextUpdate } from '@vaadin/testing-helpers';
 import { sendKeys } from '@web/test-runner-commands';
 import sinon from 'sinon';
 
-describe('vaadin-details', () => {
+describe('vaadin24-details', () => {
   let details;
 
   describe('custom element definition', () => {
     let tagName;
 
     beforeEach(() => {
-      details = fixtureSync('<vaadin-details></vaadin-details>');
+      details = fixtureSync('<vaadin24-details></vaadin24-details>');
       tagName = details.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
@@ -28,9 +29,9 @@
 
     beforeEach(async () => {
       details = fixtureSync(`
-        <vaadin-details>
+        <vaadin24-details>
           <div>Content</div>
-        </vaadin-details>
+        </vaadin24-details>
       `);
       await nextRender();
       contentPart = details.shadowRoot.querySelector('[part="content"]');
@@ -78,21 +79,21 @@
   ['default', 'custom', 'component'].forEach((type) => {
     const fixtures = {
       default: `
-        <vaadin-details summary="Summary">
+        <vaadin24-details summary="Summary">
           <div>Content</div>
-        </vaadin-details>
+        </vaadin24-details>
       `,
       custom: `
-        <vaadin-details>
-          <vaadin-details-summary slot="summary">Summary</vaadin-details-summary>
+        <vaadin24-details>
+          <vaadin24-details-summary slot="summary">Summary</vaadin24-details-summary>
           <div>Content</div>
-        </vaadin-details>
+        </vaadin24-details>
       `,
       component: `
-        <vaadin-details>
-          <vaadin-details-summary slot="summary"><div>Summary<div></vaadin-details-summary>
+        <vaadin24-details>
+          <vaadin24-details-summary slot="summary"><div>Summary<div></vaadin24-details-summary>
           <div>Content</div>
-        </vaadin-details>
+        </vaadin24-details>
       `,
     };
 
@@ -204,22 +205,22 @@
   });
 
   describe('unique IDs', () => {
-    const idRegex = /^content-vaadin-details-\d+$/u;
+    const idRegex = /^content-vaadin24-details-\d+$/u;
     let container, details;
 
     beforeEach(async () => {
       container = fixtureSync(`
         <div>
-          <vaadin-details summary="Summary 1">
+          <vaadin24-details summary="Summary 1">
             <div>Content 1</div>
-          </vaadin-details>
-          <vaadin-details summary="Summary 2">
+          </vaadin24-details>
+          <vaadin24-details summary="Summary 2">
             <div>Content 2</div>
-          </vaadin-details>
+          </vaadin24-details>
         </div>
       `);
       await nextRender();
-      details = container.querySelectorAll('vaadin-details');
+      details = container.querySelectorAll('vaadin24-details');
     });
 
     it('should set unique id on the content', () => {
@@ -236,13 +237,13 @@
 
     beforeEach(async () => {
       details = fixtureSync(`
-        <vaadin-details>
-          <vaadin-details-summary slot="summary">
+        <vaadin24-details>
+          <vaadin24-details-summary slot="summary">
             Toggle
             <a href="#">Link</a>
-          </vaadin-details-summary>
+          </vaadin24-details-summary>
           <div>Content</div>
-        </vaadin-details>
+        </vaadin24-details>
       `);
       await nextRender();
       link = details.querySelector('a');
