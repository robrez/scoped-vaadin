Index: test/user-tags.test.js
===================================================================
--- test/user-tags.test.js
+++ test/user-tags.test.js
@@ -2,7 +2,7 @@
 import { fixtureSync, nextFrame, oneEvent } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
 import './test-styles.test.js';
-import '@vaadin/text-field/src/vaadin-text-field.js';
+import '@scoped-vaadin/text-field/src/vaadin-text-field.js';
 import { FieldHighlighter } from '../src/vaadin-field-highlighter.js';
 
 const user1 = { id: 'a', name: 'foo', colorIndex: 0 };
@@ -21,7 +21,7 @@
 
   const getTags = () => {
     const { overlay } = wrapper.$;
-    return overlay.querySelectorAll('vaadin-user-tag');
+    return overlay.querySelectorAll('vaadin24-user-tag');
   };
 
   const addUser = (user) => {
@@ -41,9 +41,9 @@
 
   describe('default', () => {
     beforeEach(async () => {
-      field = fixtureSync(`<vaadin-text-field></vaadin-text-field>`);
+      field = fixtureSync(`<vaadin24-text-field></vaadin24-text-field>`);
       FieldHighlighter.init(field);
-      wrapper = field.shadowRoot.querySelector('vaadin-user-tags');
+      wrapper = field.shadowRoot.querySelector('vaadin24-user-tags');
       wrapper.duration = 0;
       wrapper.delay = 0;
       await waitForIntersectionObserver();
@@ -69,9 +69,9 @@
 
   describe('opened', () => {
     beforeEach(async () => {
-      field = fixtureSync(`<vaadin-text-field></vaadin-text-field>`);
+      field = fixtureSync(`<vaadin24-text-field></vaadin24-text-field>`);
       FieldHighlighter.init(field);
-      wrapper = field.shadowRoot.querySelector('vaadin-user-tags');
+      wrapper = field.shadowRoot.querySelector('vaadin24-user-tags');
       wrapper.duration = 0;
       wrapper.delay = 0;
       wrapper.show();
@@ -153,9 +153,9 @@
 
   describe('closed', () => {
     beforeEach(async () => {
-      field = fixtureSync(`<vaadin-text-field></vaadin-text-field>`);
+      field = fixtureSync(`<vaadin24-text-field></vaadin24-text-field>`);
       FieldHighlighter.init(field);
-      wrapper = field.shadowRoot.querySelector('vaadin-user-tags');
+      wrapper = field.shadowRoot.querySelector('vaadin24-user-tags');
       wrapper.duration = 0;
       wrapper.delay = 0;
       await waitForIntersectionObserver();
@@ -204,12 +204,12 @@
     beforeEach(async () => {
       container = fixtureSync(`
         <div style="width: 400px; height: 400px; overflow: scroll; border: 1px solid black;">
-          <vaadin-text-field style="margin: 600px 0;"></vaadin-text-field>
+          <vaadin24-text-field style="margin: 600px 0;"></vaadin24-text-field>
         </div>
       `);
-      field = container.querySelector('vaadin-text-field');
+      field = container.querySelector('vaadin24-text-field');
       FieldHighlighter.init(field);
-      wrapper = field.shadowRoot.querySelector('vaadin-user-tags');
+      wrapper = field.shadowRoot.querySelector('vaadin24-user-tags');
       wrapper.duration = 1000;
       await waitForIntersectionObserver();
     });
