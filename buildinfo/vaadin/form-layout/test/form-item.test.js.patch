Index: test/form-item.test.js
===================================================================
--- test/form-item.test.js
+++ test/form-item.test.js
@@ -1,8 +1,8 @@
 import { expect } from '@vaadin/chai-plugins';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/custom-field';
-import '@vaadin/text-field';
+import '@scoped-vaadin/custom-field';
+import '@scoped-vaadin/text-field';
 import '../vaadin-form-item.js';
 
 describe('form-item', () => {
@@ -13,10 +13,10 @@
 
     beforeEach(() => {
       item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <label slot="label">Label</label>
           <input>
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       label = item.querySelector('label');
       input = item.querySelector('input');
@@ -41,10 +41,10 @@
   describe('label positioning', () => {
     beforeEach(() => {
       item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <label slot="label">Label</label>
           <input>
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       label = item.querySelector('label');
       input = item.querySelector('input');
@@ -83,15 +83,15 @@
     let label1, label2;
 
     beforeEach(async () => {
-      const item1 = fixtureSync(`<vaadin-form-item><label slot="label">Label</label></vaadin-form-item>`);
-      const item2 = fixtureSync(`<vaadin-form-item><label slot="label">Label</label></vaadin-form-item>`);
+      const item1 = fixtureSync(`<vaadin24-form-item><label slot="label">Label</label></vaadin24-form-item>`);
+      const item2 = fixtureSync(`<vaadin24-form-item><label slot="label">Label</label></vaadin24-form-item>`);
       label1 = item1.querySelector('label');
       label2 = item2.querySelector('label');
       await nextFrame();
     });
 
     it('should set a unique id on the label element', () => {
-      const ID_REGEX = /^label-vaadin-form-item-\d+$/u;
+      const ID_REGEX = /^label-vaadin24-form-item-\d+$/u;
       expect(label1.id).to.not.equal(label2.id);
       expect(label1.id).to.match(ID_REGEX);
       expect(label2.id).to.match(ID_REGEX);
@@ -103,10 +103,10 @@
 
     beforeEach(async () => {
       item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <label slot="label">Label</label>
           <input>
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       await nextFrame();
       input = item.querySelector('input');
@@ -185,10 +185,10 @@
     describe('input', () => {
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-form-item>
+          <vaadin24-form-item>
             <label slot="label">Label</label>
             <input aria-labelledby="custom-id">
-          </vaadin-form-item>
+          </vaadin24-form-item>
         `);
         label = item.querySelector('label');
         input = item.querySelector('input');
@@ -233,9 +233,9 @@
     describe('input without label', () => {
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-form-item>
+          <vaadin24-form-item>
             <input aria-labelledby="custom-id">
-          </vaadin-form-item>
+          </vaadin24-form-item>
         `);
         input = item.querySelector('input');
         await nextFrame();
@@ -259,15 +259,15 @@
 
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-form-item>
+          <vaadin24-form-item>
             <label slot="label">Label</label>
-            <vaadin-text-field>
+            <vaadin24-text-field>
               <input slot="input" aria-labelledby="custom-id">
-            </vaadin-text-field>
-          </vaadin-form-item>
+            </vaadin24-text-field>
+          </vaadin24-form-item>
         `);
         label = item.querySelector(':scope > label');
-        field = item.querySelector(':scope > vaadin-text-field');
+        field = item.querySelector(':scope > vaadin24-text-field');
         fieldInput = field.querySelector(':scope > input');
         await nextFrame();
       });
@@ -283,13 +283,13 @@
 
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-form-item>
+          <vaadin24-form-item>
             <label slot="label">Label</label>
-            <vaadin-custom-field aria-labelledby="custom-id"></vaadin-custom-field>
-          </vaadin-form-item>
+            <vaadin24-custom-field aria-labelledby="custom-id"></vaadin24-custom-field>
+          </vaadin24-form-item>
         `);
         label = item.querySelector(':scope > label');
-        field = item.querySelector(':scope > vaadin-custom-field');
+        field = item.querySelector(':scope > vaadin24-custom-field');
         await nextFrame();
       });
 
@@ -314,10 +314,10 @@
 
     beforeEach(() => {
       item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <label slot="label">Label</label>
           <input>
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       label = item.querySelector('label');
       input = item.querySelector('input');
@@ -346,10 +346,10 @@
   describe('required input', () => {
     beforeEach(async () => {
       item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <label slot="label">Label</label>
           <input>
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       label = item.querySelector('label');
       input = item.querySelector('input');
@@ -483,9 +483,9 @@
 
     it('should not warn when a single field is placed to an item', async () => {
       fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <input />
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       await nextFrame();
 
@@ -494,24 +494,24 @@
 
     it('should warn when multiple fields are placed to an item initially', async () => {
       fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <input />
           <input />
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       await nextFrame();
 
       expect(stub.calledOnce).to.be.true;
       expect(stub.args[0][0]).to.include(
-        'WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin-form-item> is deprecated.',
+        'WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin24-form-item> is deprecated.',
       );
     });
 
     it('should warn when multiple fields are placed to an item dynamically', async () => {
       const item = fixtureSync(`
-        <vaadin-form-item>
+        <vaadin24-form-item>
           <input />
-        </vaadin-form-item>
+        </vaadin24-form-item>
       `);
       await nextFrame();
 
@@ -521,7 +521,7 @@
 
       expect(stub.calledOnce).to.be.true;
       expect(stub.args[0][0]).to.include(
-        'WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin-form-item> is deprecated.',
+        'WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin24-form-item> is deprecated.',
       );
     });
   });
