Index: test/form-layout.test.js
===================================================================
--- test/form-layout.test.js
+++ test/form-layout.test.js
@@ -1,7 +1,7 @@
 import { expect } from '@vaadin/chai-plugins';
 import { aTimeout, fixtureSync, nextRender, nextResize } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/text-field/vaadin-text-field.js';
+import '@scoped-vaadin/text-field/vaadin-text-field.js';
 import '../src/vaadin-form-layout.js';
 import '../src/vaadin-form-item.js';
 
@@ -25,10 +25,10 @@
 
     beforeEach(() => {
       layout = fixtureSync(`
-        <vaadin-form-layout>
-          <vaadin-text-field></vaadin-text-field>
-          <vaadin-form-item></vaadin-form-item>
-        </vaadin-form-layout>
+        <vaadin24-form-layout>
+          <vaadin24-text-field></vaadin24-text-field>
+          <vaadin24-form-item></vaadin24-form-item>
+        </vaadin24-form-layout>
       `);
     });
 
@@ -44,7 +44,7 @@
     });
 
     it('should distribute vaadin-text-field', () => {
-      const textField = layout.querySelector('vaadin-text-field');
+      const textField = layout.querySelector('vaadin24-text-field');
       const slot = layout.shadowRoot.querySelector('slot');
       expect(textField).to.be.ok;
       expect(slot.assignedNodes()).to.contain(textField);
@@ -56,14 +56,14 @@
 
     beforeEach(() => {
       layout = fixtureSync(`
-        <vaadin-form-layout style="font-size: 16px;">
+        <vaadin24-form-layout style="font-size: 16px;">
           <input />
-          <vaadin-form-item></vaadin-form-item>
+          <vaadin24-form-item></vaadin24-form-item>
           <input />
-        </vaadin-form-layout>
+        </vaadin24-form-layout>
       `);
       layout.responsiveSteps = [{ columns: 3 }];
-      item = layout.querySelector('vaadin-form-item');
+      item = layout.querySelector('vaadin24-form-item');
     });
 
     it('should apply default --vaadin-form-layout-label-width', () => {
@@ -127,14 +127,14 @@
       sinon.stub(console, 'warn');
 
       layout = fixtureSync(`
-        <vaadin-form-layout style="font-size: 16px;">
+        <vaadin24-form-layout style="font-size: 16px;">
           <input />
-          <vaadin-form-item></vaadin-form-item>
+          <vaadin24-form-item></vaadin24-form-item>
           <input />
-        </vaadin-form-layout>
+        </vaadin24-form-layout>
       `);
       layout.responsiveSteps = [{ columns: 3 }];
-      item = layout.querySelector('vaadin-form-item');
+      item = layout.querySelector('vaadin24-form-item');
     });
 
     afterEach(() => {
@@ -155,7 +155,7 @@
 
     it('should warn once when adding form items with deprecated --vaadin-form-item-label-width', () => {
       for (let i = 0; i < 2; i++) {
-        const item = document.createElement('vaadin-form-item');
+        const item = document.createElement('vaadin24-form-item');
         item.style.setProperty('--vaadin-form-item-label-width', '100px');
         layout.appendChild(item);
       }
@@ -166,7 +166,7 @@
 
     it('should warn once when adding form items with deprecated --vaadin-form-item-label-spacing', () => {
       for (let i = 0; i < 2; i++) {
-        const item = document.createElement('vaadin-form-item');
+        const item = document.createElement('vaadin24-form-item');
         item.style.setProperty('--vaadin-form-item-label-spacing', '8px');
         layout.appendChild(item);
       }
@@ -177,7 +177,7 @@
 
     it('should warn when adding form items with deprecated --vaadin-form-item-row-spacing', () => {
       for (let i = 0; i < 2; i++) {
-        const item = document.createElement('vaadin-form-item');
+        const item = document.createElement('vaadin24-form-item');
         item.style.setProperty('--vaadin-form-item-row-spacing', '8px');
         layout.appendChild(item);
       }
@@ -208,14 +208,14 @@
 
     beforeEach(() => {
       layout = fixtureSync(`
-        <vaadin-form-layout responsive-steps='[{"columns": 3}]'>
-          <vaadin-text-field></vaadin-text-field>
-          <vaadin-text-field colspan="1"></vaadin-text-field>
-          <vaadin-text-field colspan="2"></vaadin-text-field>
-          <vaadin-text-field colspan="3"></vaadin-text-field>
-          <vaadin-text-field colspan="4"></vaadin-text-field>
-          <vaadin-text-field colspan="non-number"></vaadin-text-field>
-        </vaadin-form-layout>
+        <vaadin24-form-layout responsive-steps='[{"columns": 3}]'>
+          <vaadin24-text-field></vaadin24-text-field>
+          <vaadin24-text-field colspan="1"></vaadin24-text-field>
+          <vaadin24-text-field colspan="2"></vaadin24-text-field>
+          <vaadin24-text-field colspan="3"></vaadin24-text-field>
+          <vaadin24-text-field colspan="4"></vaadin24-text-field>
+          <vaadin24-text-field colspan="non-number"></vaadin24-text-field>
+        </vaadin24-form-layout>
       `);
     });
 
@@ -246,11 +246,11 @@
     describe('basic', () => {
       beforeEach(async () => {
         layout = fixtureSync(`
-          <vaadin-form-layout>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-form-item></vaadin-form-item>
-          </vaadin-form-layout>
+          <vaadin24-form-layout>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-form-item></vaadin24-form-item>
+          </vaadin24-form-layout>
         `);
         await nextRender();
       });
@@ -289,12 +289,12 @@
     describe('custom label-position', () => {
       beforeEach(async () => {
         layout = fixtureSync(`
-          <vaadin-form-layout>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-form-item></vaadin-form-item>
-            <vaadin-form-item label-position="top"></vaadin-form-item>
-          </vaadin-form-layout>
+          <vaadin24-form-layout>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-form-item></vaadin24-form-item>
+            <vaadin24-form-item label-position="top"></vaadin24-form-item>
+          </vaadin24-form-layout>
         `);
         await nextRender();
       });
@@ -321,13 +321,13 @@
         document.body.style.minWidth = '0';
 
         layout = fixtureSync(`
-          <vaadin-form-layout>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-text-field></vaadin-text-field>
-            <vaadin-form-item></vaadin-form-item>
-            <vaadin-form-item></vaadin-form-item>
-            <vaadin-form-item></vaadin-form-item>
-          </vaadin-form-layout>
+          <vaadin24-form-layout>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-text-field></vaadin24-text-field>
+            <vaadin24-form-item></vaadin24-form-item>
+            <vaadin24-form-item></vaadin24-form-item>
+            <vaadin24-form-item></vaadin24-form-item>
+          </vaadin24-form-layout>
         `);
         await nextRender();
       });
@@ -399,7 +399,7 @@
 
     describe('value validation', () => {
       beforeEach(async () => {
-        layout = fixtureSync(`<vaadin-form-layout></vaadin-form-layout>`);
+        layout = fixtureSync(`<vaadin24-form-layout></vaadin24-form-layout>`);
         await nextRender();
 
         sinon.stub(console, 'warn');
@@ -485,14 +485,14 @@
       container = fixtureSync(`
         <div style="display: flex;">
           <div>Foo</div>
-          <vaadin-form-layout>
-            <vaadin-text-field></vaadin-text-field>
+          <vaadin24-form-layout>
+            <vaadin24-text-field></vaadin24-text-field>
             <br>
-            <vaadin-text-field></vaadin-text-field>
-          </vaadin-form-layout>
+            <vaadin24-text-field></vaadin24-text-field>
+          </vaadin24-form-layout>
         </div>
       `);
-      layout = container.querySelector('vaadin-form-layout');
+      layout = container.querySelector('vaadin24-form-layout');
     });
 
     it('should have less width than then flexbox', () => {
@@ -508,13 +508,13 @@
     beforeEach(async () => {
       container = fixtureSync(`
         <div hidden>
-          <vaadin-form-layout>
+          <vaadin24-form-layout>
             <div>Foo</div>
             <div>Bar</div>
-          </vaadin-form-layout>
+          </vaadin24-form-layout>
         </div>
       `);
-      layout = container.querySelector('vaadin-form-layout');
+      layout = container.querySelector('vaadin24-form-layout');
       await nextResize(layout);
     });
 
@@ -551,25 +551,25 @@
     beforeEach(async () => {
       container = fixtureSync(`
         <div>
-          <vaadin-form-layout>
-            <vaadin-form-item>
+          <vaadin24-form-layout>
+            <vaadin24-form-item>
               <label slot="label">Field</label>
               <input />
-            </vaadin-form-item>
-            <vaadin-form-item>
+            </vaadin24-form-item>
+            <vaadin24-form-item>
               <label slot="label">Field</label>
               <input />
-            </vaadin-form-item>
-            <vaadin-form-item>
+            </vaadin24-form-item>
+            <vaadin24-form-item>
               <label slot="label">Field</label>
               <input />
-            </vaadin-form-item>
-          </vaadin-form-layout>
+            </vaadin24-form-item>
+          </vaadin24-form-layout>
         </div>
       `);
       layout = container.firstElementChild;
       layout.responsiveSteps = [{ columns: 2 }];
-      items = [...layout.querySelectorAll('vaadin-form-item')];
+      items = [...layout.querySelectorAll('vaadin24-form-item')];
       await nextRender(container);
     });
 
@@ -604,7 +604,7 @@
       const itemWidth = layout.children[0].getBoundingClientRect().width;
       expect(itemWidth).to.be.above(0);
 
-      const newFormItem = document.createElement('vaadin-form-item');
+      const newFormItem = document.createElement('vaadin24-form-item');
       newFormItem.hidden = true;
       layout.appendChild(newFormItem);
       await nextRender(container);
@@ -617,7 +617,7 @@
     });
 
     it('should update layout after a new item is added', async () => {
-      const newFormItem = document.createElement('vaadin-form-item');
+      const newFormItem = document.createElement('vaadin24-form-item');
       newFormItem.innerHTML = '<label slot="label">Field</label><input />';
       layout.insertBefore(newFormItem, items[0]);
       await nextRender(container);
@@ -625,7 +625,7 @@
     });
 
     it('should update layout after an item is removed', async () => {
-      const newFormItem = document.createElement('vaadin-form-item');
+      const newFormItem = document.createElement('vaadin24-form-item');
       newFormItem.innerHTML = '<label slot="label">Field</label><input />';
       layout.insertBefore(newFormItem, items[0]);
       await nextRender(container);
