Index: src/vaadin-number-field.js
===================================================================
--- src/vaadin-number-field.js
+++ src/vaadin-number-field.js
@@ -1,33 +1,34 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2021 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import '@vaadin/input-container/src/vaadin-input-container.js';
+import '@scoped-vaadin/input-container/src/vaadin-input-container.js';
 import { html, PolymerElement } from '@polymer/polymer';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { InputController } from '@vaadin/field-base/src/input-controller.js';
-import { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';
-import { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';
-import { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';
-import { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { InputController } from '@scoped-vaadin/field-base/src/input-controller.js';
+import { InputFieldMixin } from '@scoped-vaadin/field-base/src/input-field-mixin.js';
+import { LabelledInputController } from '@scoped-vaadin/field-base/src/labelled-input-controller.js';
+import { inputFieldShared } from '@scoped-vaadin/field-base/src/styles/input-field-shared-styles.js';
+import { registerStyles, ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 
-registerStyles('vaadin-number-field', inputFieldShared, { moduleId: 'vaadin-number-field-styles' });
+registerStyles('vaadin23-number-field', inputFieldShared, { moduleId: 'vaadin-number-field-styles' });
 
 /**
- * `<vaadin-number-field>` is an input field web component that only accepts numeric input.
+ * `<vaadin23-number-field>` is an input field web component that only accepts numeric input.
  *
  * ```html
- * <vaadin-number-field label="Balance"></vaadin-number-field>
+ * <vaadin23-number-field label="Balance"></vaadin23-number-field>
  * ```
  *
  * ### Styling
  *
- * `<vaadin-number-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.
- * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.
+ * `<vaadin23-number-field>` provides the same set of shadow DOM parts and state attributes as `<vaadin23-text-field>`.
+ * See [`<vaadin23-text-field>`](#/elements/vaadin-text-field) for the styling documentation.
  *
- * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:
+ * In addition to `<vaadin23-text-field>` parts, the following parts are available for theming:
  *
  * Part name         | Description
  * ------------------|-------------------------
@@ -52,7 +53,7 @@
  */
 export class NumberField extends InputFieldMixin(ThemableMixin(ElementMixin(PolymerElement))) {
   static get is() {
-    return 'vaadin-number-field';
+    return 'vaadin23-number-field';
   }
 
   static get template() {
@@ -88,7 +89,7 @@
           <span part="required-indicator" aria-hidden="true" on-click="focus"></span>
         </div>
 
-        <vaadin-input-container
+        <vaadin23-input-container
           part="input-field"
           readonly="[[readonly]]"
           disabled="[[disabled]]"
@@ -117,7 +118,7 @@
             aria-hidden="true"
             slot="suffix"
           ></div>
-        </vaadin-input-container>
+        </vaadin23-input-container>
 
         <div part="helper-text">
           <slot name="helper"></slot>
@@ -478,4 +479,4 @@
   }
 }
 
-customElements.define(NumberField.is, NumberField);
+internalCustomElements.define(NumberField.is, NumberField);
