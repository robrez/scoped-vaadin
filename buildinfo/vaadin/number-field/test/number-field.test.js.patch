Index: test/number-field.test.js
===================================================================
--- test/number-field.test.js
+++ test/number-field.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { arrowDown, arrowUp, fixtureSync, nextRender, nextUpdate } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -10,16 +11,16 @@
     let tagName;
 
     beforeEach(() => {
-      numberField = fixtureSync('<vaadin-number-field></vaadin-number-field>');
+      numberField = fixtureSync('<vaadin24-number-field></vaadin24-number-field>');
       tagName = numberField.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
@@ -27,7 +28,7 @@
     let input;
 
     beforeEach(async () => {
-      numberField = fixtureSync('<vaadin-number-field></vaadin-number-field>');
+      numberField = fixtureSync('<vaadin24-number-field></vaadin24-number-field>');
       await nextRender();
       input = numberField.inputElement;
     });
@@ -107,7 +108,7 @@
 
   describe('required', () => {
     beforeEach(async () => {
-      numberField = fixtureSync('<vaadin-number-field required></vaadin-number-field>');
+      numberField = fixtureSync('<vaadin24-number-field required></vaadin24-number-field>');
       await nextRender();
     });
 
