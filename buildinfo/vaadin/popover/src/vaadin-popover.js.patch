Index: src/vaadin-popover.js
===================================================================
--- src/vaadin-popover.js
+++ src/vaadin-popover.js
@@ -11,14 +11,14 @@
   getFocusableElements,
   isElementFocused,
   isKeyboardActive,
-} from '@vaadin/a11y-base/src/focus-utils.js';
-import { defineCustomElement } from '@vaadin/component-base/src/define.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';
-import { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';
-import { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';
-import { isLastOverlay as isLastOverlayBase } from '@vaadin/overlay/src/vaadin-overlay-stack-mixin.js';
-import { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';
+} from '@scoped-vaadin/a11y-base/src/focus-utils.js';
+import { defineCustomElement } from '@scoped-vaadin/component-base/src/define.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { OverlayClassMixin } from '@scoped-vaadin/component-base/src/overlay-class-mixin.js';
+import { PolylitMixin } from '@scoped-vaadin/component-base/src/polylit-mixin.js';
+import { generateUniqueId } from '@scoped-vaadin/component-base/src/unique-id-utils.js';
+import { isLastOverlay as isLastOverlayBase } from '@scoped-vaadin/overlay/src/vaadin-overlay-stack-mixin.js';
+import { ThemePropertyMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';
 import { PopoverPositionMixin } from './vaadin-popover-position-mixin.js';
 import { PopoverTargetMixin } from './vaadin-popover-target-mixin.js';
 
@@ -156,26 +156,26 @@
  */
 const isLastOverlay = (overlay) => {
   // Ignore tooltips, popovers should still close when a tooltip is present
-  const filter = (o) => o.localName !== 'vaadin-tooltip-overlay';
+  const filter = (o) => o.localName !== 'vaadin24-tooltip-overlay';
   return isLastOverlayBase(overlay, filter);
 };
 
 /**
- * `<vaadin-popover>` is a Web Component for creating overlays
+ * `<vaadin24-popover>` is a Web Component for creating overlays
  * that are positioned next to specified DOM element (target).
  *
- * Unlike `<vaadin-tooltip>`, the popover supports rich content
+ * Unlike `<vaadin24-tooltip>`, the popover supports rich content
  * that can be provided by using `renderer` function.
  *
  * ### Styling
  *
- * `<vaadin-popover>` uses `<vaadin-popover-overlay>` internal
+ * `<vaadin24-popover>` uses `<vaadin24-popover-overlay>` internal
  * themable component as the actual visible overlay.
  *
- * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation
- * for `<vaadin-popover-overlay>` parts.
+ * See [`<vaadin24-overlay>`](#/elements/vaadin-overlay) documentation
+ * for `<vaadin24-popover-overlay>` parts.
  *
- * In addition to `<vaadin-overlay>` parts, the following parts are available for styling:
+ * In addition to `<vaadin24-overlay>` parts, the following parts are available for styling:
  *
  * Part name        | Description
  * -----------------|-------------------------------------------
@@ -187,12 +187,12 @@
  * -----------------|----------------------------------------
  * `position`       | Reflects the `position` property value.
  *
- * Note: the `theme` attribute value set on `<vaadin-popover>` is
- * propagated to the internal `<vaadin-popover-overlay>` component.
+ * Note: the `theme` attribute value set on `<vaadin24-popover>` is
+ * propagated to the internal `<vaadin24-popover-overlay>` component.
  *
  * ### Custom CSS Properties
  *
- * The following custom CSS properties are available on the `<vaadin-popover>` element:
+ * The following custom CSS properties are available on the `<vaadin24-popover>` element:
  *
  * Custom CSS property              | Description
  * ---------------------------------|-------------
@@ -218,7 +218,7 @@
   PopoverTargetMixin(OverlayClassMixin(ThemePropertyMixin(ElementMixin(PolylitMixin(LitElement))))),
 ) {
   static get is() {
-    return 'vaadin-popover';
+    return 'vaadin24-popover';
   }
 
   static get styles() {
@@ -337,7 +337,7 @@
        * Receives two arguments:
        *
        * - `root` The root container DOM element. Append your content to it.
-       * - `popover` The reference to the `vaadin-popover` element (overlay host).
+       * - `popover` The reference to the `vaadin24-popover` element (overlay host).
        */
       renderer: {
         type: Object,
@@ -484,7 +484,7 @@
     const effectivePosition = this.__effectivePosition;
 
     return html`
-      <vaadin-popover-overlay
+      <vaadin24-popover-overlay
         id="${this.__overlayId}"
         role="${this.overlayRole}"
         aria-label="${ifDefined(this.accessibleName)}"
@@ -514,7 +514,7 @@
         @vaadin-overlay-outside-click="${this.__onOutsideClick}"
         @vaadin-overlay-open="${this.__onOverlayOpened}"
         @vaadin-overlay-closed="${this.__onOverlayClosed}"
-      ></vaadin-popover-overlay>
+      ></vaadin24-popover-overlay>
     `;
   }
 
