Index: test/button.test.ts
===================================================================
--- test/button.test.ts
+++ test/button.test.ts
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { resetMouse, sendKeys, sendMouseToElement } from '@vaadin/test-runner-commands';
 import { fire, fixtureSync, nextRender, nextUpdate } from '@vaadin/testing-helpers';
@@ -5,30 +6,30 @@
 import '../vaadin-button.js';
 import type { Button } from '../vaadin-button.js';
 
-describe('vaadin-button', () => {
+describe('vaadin24-button', () => {
   let button: Button;
 
   describe('custom element definition', () => {
     let tagName: string;
 
     beforeEach(() => {
-      button = fixtureSync('<vaadin-button></vaadin-button>');
+      button = fixtureSync('<vaadin24-button></vaadin24-button>');
       tagName = button.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect((customElements.get(tagName) as any).is).to.equal(tagName);
+      expect((internalCustomElements.get(tagName) as any).is).to.equal(tagName);
     });
   });
 
   describe('role', () => {
     describe('default', () => {
       beforeEach(async () => {
-        button = fixtureSync('<vaadin-button>Press me</vaadin-button>');
+        button = fixtureSync('<vaadin24-button>Press me</vaadin24-button>');
         await nextRender(button);
       });
 
@@ -39,7 +40,7 @@
 
     describe('custom', () => {
       beforeEach(async () => {
-        button = fixtureSync('<vaadin-button role="menuitem">Press me</vaadin-button>');
+        button = fixtureSync('<vaadin24-button role="menuitem">Press me</vaadin24-button>');
         await nextRender(button);
       });
 
@@ -51,7 +52,7 @@
 
   describe('keyboard', () => {
     beforeEach(async () => {
-      button = fixtureSync('<vaadin-button>Press me</vaadin-button>');
+      button = fixtureSync('<vaadin24-button>Press me</vaadin24-button>');
       await nextRender(button);
       button.focus();
     });
@@ -125,7 +126,7 @@
     beforeEach(async () => {
       [button, lastGlobalFocusable] = fixtureSync(
         `<div>
-          <vaadin-button disabled>Press me</vaadin-button>
+          <vaadin24-button disabled>Press me</vaadin24-button>
           <input id="last-global-focusable" />
         </div>`,
       ).children as unknown as [Button, HTMLInputElement];
@@ -177,7 +178,7 @@
     beforeEach(async () => {
       [button, lastGlobalFocusable] = fixtureSync(
         `<div>
-          <vaadin-button disabled>Press me</vaadin-button>
+          <vaadin24-button disabled>Press me</vaadin24-button>
           <input id="last-global-focusable" />
         </div>`,
       ).children as unknown as [Button, HTMLInputElement];
