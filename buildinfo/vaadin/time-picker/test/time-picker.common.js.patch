Index: test/time-picker.common.js
===================================================================
--- test/time-picker.common.js
+++ test/time-picker.common.js
@@ -1,14 +1,15 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { enter, fixtureSync, nextFrame, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import { isTouch } from '@vaadin/component-base/src/browser-utils.js';
+import { isTouch } from '@scoped-vaadin/component-base/src/browser-utils.js';
 import { setInputValue } from './helpers.js';
 
 describe('time-picker', () => {
   let timePicker, comboBox, inputElement;
 
   beforeEach(async () => {
-    timePicker = fixtureSync(`<vaadin-time-picker></vaadin-time-picker>`);
+    timePicker = fixtureSync(`<vaadin24-time-picker></vaadin24-time-picker>`);
     await nextRender();
     comboBox = timePicker.$.comboBox;
     inputElement = timePicker.inputElement;
@@ -22,11 +23,11 @@
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
@@ -141,7 +142,7 @@
     let overlay;
 
     beforeEach(() => {
-      overlay = comboBox.shadowRoot.querySelector('vaadin-time-picker-overlay');
+      overlay = comboBox.shadowRoot.querySelector('vaadin24-time-picker-overlay');
     });
 
     it('should open overlay using open() call', () => {
