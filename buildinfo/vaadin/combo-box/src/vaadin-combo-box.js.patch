Index: src/vaadin-combo-box.js
===================================================================
--- src/vaadin-combo-box.js
+++ src/vaadin-combo-box.js
@@ -1,33 +1,34 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2015 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import '@vaadin/input-container/src/vaadin-input-container.js';
+import '@scoped-vaadin/input-container/src/vaadin-input-container.js';
 import './vaadin-combo-box-item.js';
 import './vaadin-combo-box-overlay.js';
 import './vaadin-combo-box-scroller.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';
-import { InputControlMixin } from '@vaadin/field-base/src/input-control-mixin.js';
-import { InputController } from '@vaadin/field-base/src/input-controller.js';
-import { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';
-import { PatternMixin } from '@vaadin/field-base/src/pattern-mixin.js';
-import { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';
-import { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { TooltipController } from '@scoped-vaadin/component-base/src/tooltip-controller.js';
+import { InputControlMixin } from '@scoped-vaadin/field-base/src/input-control-mixin.js';
+import { InputController } from '@scoped-vaadin/field-base/src/input-controller.js';
+import { LabelledInputController } from '@scoped-vaadin/field-base/src/labelled-input-controller.js';
+import { PatternMixin } from '@scoped-vaadin/field-base/src/pattern-mixin.js';
+import { inputFieldShared } from '@scoped-vaadin/field-base/src/styles/input-field-shared-styles.js';
+import { registerStyles, ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { ComboBoxDataProviderMixin } from './vaadin-combo-box-data-provider-mixin.js';
 import { ComboBoxMixin } from './vaadin-combo-box-mixin.js';
 
-registerStyles('vaadin-combo-box', inputFieldShared, { moduleId: 'vaadin-combo-box-styles' });
+registerStyles('vaadin23-combo-box', inputFieldShared, { moduleId: 'vaadin-combo-box-styles' });
 
 /**
- * `<vaadin-combo-box>` is a web component for choosing a value from a filterable list of options
+ * `<vaadin23-combo-box>` is a web component for choosing a value from a filterable list of options
  * presented in a dropdown overlay. The options can be provided as a list of strings or objects
  * by setting [`items`](#/elements/vaadin-combo-box#property-items) property on the element.
  *
  * ```html
- * <vaadin-combo-box id="combo-box"></vaadin-combo-box>
+ * <vaadin23-combo-box id="combo-box"></vaadin23-combo-box>
  * ```
  *
  * ```js
@@ -38,7 +39,7 @@
  *
  * ### Item rendering
  *
- * To customize the content of the `<vaadin-combo-box-item>` elements placed in the dropdown, use
+ * To customize the content of the `<vaadin23-combo-box-item>` elements placed in the dropdown, use
  * [`renderer`](#/elements/vaadin-combo-box#property-renderer) property which accepts a function.
  * The renderer function is called with `root`, `comboBox`, and `model` as arguments.
  *
@@ -73,7 +74,7 @@
  *
  * In addition to assigning an array to the items property, you can alternatively use the
  * [`dataProvider`](#/elements/vaadin-combo-box#property-dataProvider) function property.
- * The `<vaadin-combo-box>` calls this function lazily, only when it needs more data
+ * The `<vaadin23-combo-box>` calls this function lazily, only when it needs more data
  * to be displayed.
  *
  * __Note that when using function data providers, the total number of items
@@ -104,16 +105,16 @@
  * `--vaadin-combo-box-overlay-width`      | Width of the overlay       | `auto`
  * `--vaadin-combo-box-overlay-max-height` | Max height of the overlay  | `65vh`
  *
- * `<vaadin-combo-box>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.
- * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.
+ * `<vaadin23-combo-box>` provides the same set of shadow DOM parts and state attributes as `<vaadin23-text-field>`.
+ * See [`<vaadin23-text-field>`](#/elements/vaadin-text-field) for the styling documentation.
  *
- * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:
+ * In addition to `<vaadin23-text-field>` parts, the following parts are available for theming:
  *
  * Part name       | Description
  * ----------------|----------------
  * `toggle-button` | The toggle button
  *
- * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:
+ * In addition to `<vaadin23-text-field>` state attributes, the following state attributes are available for theming:
  *
  * Attribute | Description | Part name
  * ----------|-------------|------------
@@ -121,18 +122,18 @@
  * `loading` | Set when new items are expected | :host
  *
  * If you want to replace the default `<input>` and its container with a custom implementation to get full control
- * over the input field, consider using the [`<vaadin-combo-box-light>`](#/elements/vaadin-combo-box-light) element.
+ * over the input field, consider using the [`<vaadin23-combo-box-light>`](#/elements/vaadin-combo-box-light) element.
  *
  * ### Internal components
  *
- * In addition to `<vaadin-combo-box>` itself, the following internal
+ * In addition to `<vaadin23-combo-box>` itself, the following internal
  * components are themable:
  *
- * - `<vaadin-combo-box-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).
- * - `<vaadin-combo-box-item>` - has the same API as [`<vaadin-item>`](#/elements/vaadin-item).
- * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.
+ * - `<vaadin23-combo-box-overlay>` - has the same API as [`<vaadin23-overlay>`](#/elements/vaadin-overlay).
+ * - `<vaadin23-combo-box-item>` - has the same API as [`<vaadin23-item>`](#/elements/vaadin-item).
+ * - [`<vaadin23-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the input.
  *
- * Note: the `theme` attribute value set on `<vaadin-combo-box>` is
+ * Note: the `theme` attribute value set on `<vaadin23-combo-box>` is
  * propagated to the internal components listed above.
  *
  * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.
@@ -158,7 +159,7 @@
   ComboBoxMixin(PatternMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement))))),
 ) {
   static get is() {
-    return 'vaadin-combo-box';
+    return 'vaadin23-combo-box';
   }
 
   static get template() {
@@ -175,7 +176,7 @@
           <span part="required-indicator" aria-hidden="true" on-click="focus"></span>
         </div>
 
-        <vaadin-input-container
+        <vaadin23-input-container
           part="input-field"
           readonly="[[readonly]]"
           disabled="[[disabled]]"
@@ -186,7 +187,7 @@
           <slot name="input"></slot>
           <div id="clearButton" part="clear-button" slot="suffix" aria-hidden="true"></div>
           <div id="toggleButton" part="toggle-button" slot="suffix" aria-hidden="true"></div>
-        </vaadin-input-container>
+        </vaadin23-input-container>
 
         <div part="helper-text">
           <slot name="helper"></slot>
@@ -197,7 +198,7 @@
         </div>
       </div>
 
-      <vaadin-combo-box-overlay
+      <vaadin23-combo-box-overlay
         id="overlay"
         opened="[[_overlayOpened]]"
         loading$="[[loading]]"
@@ -205,7 +206,7 @@
         position-target="[[_positionTarget]]"
         no-vertical-overlap
         restore-focus-node="[[inputElement]]"
-      ></vaadin-combo-box-overlay>
+      ></vaadin23-combo-box-overlay>
 
       <slot name="tooltip"></slot>
     `;
@@ -313,6 +314,6 @@
   }
 }
 
-customElements.define(ComboBox.is, ComboBox);
+internalCustomElements.define(ComboBox.is, ComboBox);
 
 export { ComboBox };
