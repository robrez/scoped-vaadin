Index: test/lit.test.js
===================================================================
--- test/lit.test.js
+++ test/lit.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import './not-animated-styles.js';
@@ -10,7 +11,7 @@
     let comboBox;
 
     beforeEach(() => {
-      comboBox = fixtureSync(`<vaadin-combo-box></vaadin-combo-box>`);
+      comboBox = fixtureSync(`<vaadin23-combo-box></vaadin23-combo-box>`);
 
       const size = 100;
 
@@ -45,25 +46,25 @@
         return html`<slot></slot> `;
       }
     }
-    customElements.define('test-slot-container', TestSlotContainer);
+    internalCustomElements.define('test-slot-container', TestSlotContainer);
 
     class TestSlottedComboComponent extends LitElement {
       render() {
         return html`
           <test-slot-container>
-            <vaadin-combo-box .items="${['First', 'Second', 'Third']}"></vaadin-combo-box>
+            <vaadin23-combo-box .items="${['First', 'Second', 'Third']}"></vaadin23-combo-box>
           </test-slot-container>
         `;
       }
     }
-    customElements.define('test-slotted-combo-component', TestSlottedComboComponent);
+    internalCustomElements.define('test-slotted-combo-component', TestSlottedComboComponent);
 
     beforeEach(async () => {
       container = fixtureSync('<div></div>');
       render(html`<test-slotted-combo-component></test-slotted-combo-component>`, container);
       await nextFrame();
       const component = container.querySelector('test-slotted-combo-component');
-      comboBox = component.shadowRoot.querySelector('vaadin-combo-box');
+      comboBox = component.shadowRoot.querySelector('vaadin23-combo-box');
       selector = comboBox._scroller.shadowRoot.children.selector;
     });
 
