Index: test/i18n.test.js
===================================================================
--- test/i18n.test.js
+++ test/i18n.test.js
@@ -1,25 +1,26 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { aTimeout, fixtureSync, nextRender } from '@vaadin/testing-helpers';
 import '../vaadin-date-time-picker.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
 
 const formatTime = (...args) =>
-  customElements
-    .get('vaadin-time-picker')
+  internalCustomElements
+    .get('vaadin24-time-picker')
     .properties.i18n.value()
     .formatTime(...args);
 
 const parseTime = (...args) =>
-  customElements
-    .get('vaadin-time-picker')
+  internalCustomElements
+    .get('vaadin24-time-picker')
     .properties.i18n.value()
     .parseTime(...args);
 
-customElements.define(
+internalCustomElements.define(
   'dtp-i18n-default',
   class extends PolymerElement {
     static get template() {
-      return html`<vaadin-date-time-picker id="dateTimePicker" i18n="[[i18n]]"></vaadin-date-time-picker>`;
+      return html`<vaadin24-date-time-picker id="dateTimePicker" i18n="[[i18n]]"></vaadin24-date-time-picker>`;
     }
 
     static get properties() {
@@ -41,15 +42,15 @@
   },
 );
 
-customElements.define(
+internalCustomElements.define(
   'dtp-i18n-slotted',
   class extends PolymerElement {
     static get template() {
       return html`
-        <vaadin-date-time-picker id="dateTimePicker">
-          <vaadin-date-picker slot="date-picker" i18n="[[dpI18n]]"></vaadin-date-picker>
-          <vaadin-time-picker slot="time-picker" i18n="[[tpI18n]]"></vaadin-time-picker>
-        </vaadin-date-time-picker>
+        <vaadin24-date-time-picker id="dateTimePicker">
+          <vaadin24-date-picker slot="date-picker" i18n="[[dpI18n]]"></vaadin24-date-picker>
+          <vaadin24-time-picker slot="time-picker" i18n="[[tpI18n]]"></vaadin24-time-picker>
+        </vaadin24-date-time-picker>
       `;
     }
 
@@ -101,12 +102,12 @@
   let dateTimePicker, datePicker;
 
   beforeEach(() => {
-    dateTimePicker = document.createElement('vaadin-date-time-picker');
+    dateTimePicker = document.createElement('vaadin24-date-time-picker');
   });
 
   describe('date-picker', () => {
     beforeEach(() => {
-      datePicker = document.createElement('vaadin-date-picker');
+      datePicker = document.createElement('vaadin24-date-picker');
       datePicker.slot = 'date-picker';
       datePicker.i18n = { ...datePicker.i18n, cancel: 'Peruuta' };
       dateTimePicker.appendChild(datePicker);
@@ -125,7 +126,7 @@
     let dateTimePicker, pickerFocusElement;
 
     beforeEach(() => {
-      dateTimePicker = fixtureSync('<vaadin-date-time-picker></vaadin-date-time-picker>');
+      dateTimePicker = fixtureSync('<vaadin24-date-time-picker></vaadin24-date-time-picker>');
       pickerFocusElement = dateTimePicker.querySelector(`[slot=${part}-picker]`).focusElement;
     });
 
@@ -168,7 +169,7 @@
     describe('property set before attach', () => {
       beforeEach(() => {
         const parent = fixtureSync('<div></div>');
-        dateTimePicker = document.createElement('vaadin-date-time-picker');
+        dateTimePicker = document.createElement('vaadin24-date-time-picker');
         dateTimePicker.label = 'dtp-label';
         dateTimePicker.accessibleName = 'dtp-accessible-name';
         dateTimePicker.i18n = { ...dateTimePicker.i18n, [`${part}Label`]: 'picker-label' };
