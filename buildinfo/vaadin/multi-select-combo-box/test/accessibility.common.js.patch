Index: test/accessibility.common.js
===================================================================
--- test/accessibility.common.js
+++ test/accessibility.common.js
@@ -12,7 +12,7 @@
     describe('input', () => {
       describe('required', () => {
         beforeEach(async () => {
-          comboBox = fixtureSync(`<vaadin-multi-select-combo-box required></vaadin-multi-select-combo-box>`);
+          comboBox = fixtureSync(`<vaadin24-multi-select-combo-box required></vaadin24-multi-select-combo-box>`);
           comboBox.items = ['Apple', 'Banana', 'Lemon', 'Orange'];
           await nextRender();
           inputElement = comboBox.inputElement;
@@ -38,7 +38,7 @@
           // Do not use `fixtureSync()` helper to test the case where both placeholder
           // and selectedItems are set when the component is initialized, to make sure
           // that the placeholder is correctly restored after clearing selectedItems.
-          comboBox = document.createElement('vaadin-multi-select-combo-box');
+          comboBox = document.createElement('vaadin24-multi-select-combo-box');
           comboBox.placeholder = 'Fruits';
           comboBox.items = ['Apple', 'Banana', 'Lemon', 'Orange'];
           comboBox.selectedItems = ['Apple', 'Banana'];
@@ -95,13 +95,13 @@
 
     describe('items', () => {
       beforeEach(async () => {
-        comboBox = fixtureSync(`<vaadin-multi-select-combo-box></vaadin-multi-select-combo-box>`);
+        comboBox = fixtureSync(`<vaadin24-multi-select-combo-box></vaadin24-multi-select-combo-box>`);
         await nextRender();
         comboBox.items = ['Apple', 'Banana', 'Lemon', 'Orange'];
         comboBox.selectedItems = ['Apple', 'Lemon'];
         comboBox.inputElement.click();
         scroller = comboBox.$.comboBox._scroller;
-        items = document.querySelectorAll('vaadin-multi-select-combo-box-item');
+        items = document.querySelectorAll('vaadin24-multi-select-combo-box-item');
       });
 
       it('should set aria-multiselectable attribute on the scroller', () => {
@@ -140,7 +140,7 @@
     });
 
     beforeEach(async () => {
-      comboBox = fixtureSync(`<vaadin-multi-select-combo-box></vaadin-multi-select-combo-box>`);
+      comboBox = fixtureSync(`<vaadin24-multi-select-combo-box></vaadin24-multi-select-combo-box>`);
       comboBox.itemIdPath = 'id';
       comboBox.itemLabelPath = 'name';
       comboBox.items = fruits;
@@ -156,7 +156,7 @@
     it('should announce when selecting an item', () => {
       inputElement.click();
 
-      const item = document.querySelector('vaadin-multi-select-combo-box-item');
+      const item = document.querySelector('vaadin24-multi-select-combo-box-item');
       item.click();
 
       clock.tick(150);
@@ -168,7 +168,7 @@
       comboBox.selectedItems = [apple, banana, lemon];
       inputElement.click();
 
-      const item = document.querySelector('vaadin-multi-select-combo-box-item');
+      const item = document.querySelector('vaadin24-multi-select-combo-box-item');
       item.click();
 
       clock.tick(150);
