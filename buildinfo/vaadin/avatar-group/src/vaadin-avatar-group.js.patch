Index: src/vaadin-avatar-group.js
===================================================================
--- src/vaadin-avatar-group.js
+++ src/vaadin-avatar-group.js
@@ -1,36 +1,37 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2020 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
 import '@polymer/polymer/lib/elements/dom-repeat.js';
-import '@vaadin/avatar/src/vaadin-avatar.js';
-import '@vaadin/item/src/vaadin-item.js';
+import '@scoped-vaadin/avatar/src/vaadin-avatar.js';
+import '@scoped-vaadin/item/src/vaadin-item.js';
 import './vaadin-avatar-group-list-box.js';
 import './vaadin-avatar-group-overlay.js';
 import { calculateSplices } from '@polymer/polymer/lib/utils/array-splice.js';
 import { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { announce } from '@vaadin/component-base/src/a11y-announcer.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { announce } from '@scoped-vaadin/component-base/src/a11y-announcer.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { ResizeMixin } from '@scoped-vaadin/component-base/src/resize-mixin.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 
 const MINIMUM_DISPLAYED_AVATARS = 2;
 
 /**
- * `<vaadin-avatar-group>` is a Web Component providing avatar group displaying functionality.
+ * `<vaadin23-avatar-group>` is a Web Component providing avatar group displaying functionality.
  *
  * To create the avatar group, first add the component to the page:
  *
  * ```
- * <vaadin-avatar-group></vaadin-avatar-group>
+ * <vaadin23-avatar-group></vaadin23-avatar-group>
  * ```
  *
  * And then use [`items`](#/elements/vaadin-avatar-group#property-items) property to initialize the structure:
  *
  * ```
- * document.querySelector('vaadin-avatar-group').items = [
+ * document.querySelector('vaadin23-avatar-group').items = [
  *   {name: 'John Doe'},
  *   {abbr: 'AB'}
  * ];
@@ -49,11 +50,11 @@
  *
  * ### Internal components
  *
- * In addition to `<vaadin-avatar-group>` itself, the following internal
+ * In addition to `<vaadin23-avatar-group>` itself, the following internal
  * components are themable:
  *
- * - `<vaadin-avatar-group-list-box>` - has the same API as [`<vaadin-list-box>`](#/elements/vaadin-list-box).
- * - `<vaadin-avatar-group-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).
+ * - `<vaadin23-avatar-group-list-box>` - has the same API as [`<vaadin23-list-box>`](#/elements/vaadin-list-box).
+ * - `<vaadin23-avatar-group-overlay>` - has the same API as [`<vaadin23-overlay>`](#/elements/vaadin-overlay).
  *
  * @extends HTMLElement
  * @mixes ElementMixin
@@ -111,7 +112,7 @@
       </style>
       <div id="container" part="container">
         <template id="items" is="dom-repeat" items="[[__computeItems(items.*, __itemsInView, maxItemsVisible)]]">
-          <vaadin-avatar
+          <vaadin23-avatar
             name="[[item.name]]"
             abbr="[[item.abbr]]"
             img="[[item.img]]"
@@ -120,9 +121,9 @@
             i18n="[[i18n]]"
             color-index="[[item.colorIndex]]"
             with-tooltip
-          ></vaadin-avatar>
+          ></vaadin23-avatar>
         </template>
-        <vaadin-avatar
+        <vaadin23-avatar
           id="overflow"
           part="avatar"
           hidden$="[[__computeMoreHidden(items.length, __itemsInView, __maxReached)]]"
@@ -132,20 +133,20 @@
           on-keydown="_onOverflowKeyDown"
           aria-haspopup="listbox"
         >
-          <vaadin-tooltip slot="tooltip" generator="[[__overflowTextGenerator]]"></vaadin-tooltip>
-        </vaadin-avatar>
+          <vaadin23-tooltip slot="tooltip" generator="[[__overflowTextGenerator]]"></vaadin23-tooltip>
+        </vaadin23-avatar>
       </div>
-      <vaadin-avatar-group-overlay
+      <vaadin23-avatar-group-overlay
         id="overlay"
         opened="{{_opened}}"
         no-vertical-overlap
         on-vaadin-overlay-close="_onVaadinOverlayClose"
       >
         <template>
-          <vaadin-avatar-group-list-box on-keydown="_onListKeyDown">
+          <vaadin23-avatar-group-list-box on-keydown="_onListKeyDown">
             <template is="dom-repeat" items="[[__computeExtraItems(items.*, __itemsInView, maxItemsVisible)]]">
-              <vaadin-item theme="avatar-group-item">
-                <vaadin-avatar
+              <vaadin23-item theme="avatar-group-item">
+                <vaadin23-avatar
                   name="[[item.name]]"
                   abbr="[[item.abbr]]"
                   img="[[item.img]]"
@@ -155,18 +156,18 @@
                   color-index="[[item.colorIndex]]"
                   tabindex="-1"
                   aria-hidden="true"
-                ></vaadin-avatar>
+                ></vaadin23-avatar>
                 [[item.name]]
-              </vaadin-item>
+              </vaadin23-item>
             </template>
-          </vaadin-avatar-group-list-box>
+          </vaadin23-avatar-group-list-box>
         </template>
-      </vaadin-avatar-group-overlay>
+      </vaadin23-avatar-group-overlay>
     `;
   }
 
   static get is() {
-    return 'vaadin-avatar-group';
+    return 'vaadin23-avatar-group';
   }
 
   static get properties() {
@@ -290,7 +291,7 @@
   ready() {
     super.ready();
 
-    this._overlayElement = this.shadowRoot.querySelector('vaadin-avatar-group-overlay');
+    this._overlayElement = this.shadowRoot.querySelector('vaadin23-avatar-group-overlay');
     this._overlayElement.positionTarget = this.$.overflow;
 
     afterNextRender(this, () => {
@@ -310,7 +311,7 @@
    * @protected
    */
   get _avatars() {
-    return this.shadowRoot.querySelectorAll('vaadin-avatar');
+    return this.shadowRoot.querySelectorAll('vaadin23-avatar');
   }
 
   /** @private */
@@ -483,7 +484,7 @@
   __openedChanged(opened, wasOpened) {
     if (opened) {
       if (!this._menuElement) {
-        this._menuElement = this._overlayElement.content.querySelector('vaadin-avatar-group-list-box');
+        this._menuElement = this._overlayElement.content.querySelector('vaadin23-avatar-group-list-box');
         this._menuElement.setAttribute('role', 'listbox');
       }
 
@@ -550,6 +551,6 @@
   }
 }
 
-customElements.define(AvatarGroup.is, AvatarGroup);
+internalCustomElements.define(AvatarGroup.is, AvatarGroup);
 
 export { AvatarGroup };
