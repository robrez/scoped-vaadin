Index: test/context.test.js
===================================================================
--- test/context.test.js
+++ test/context.test.js
@@ -1,9 +1,10 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { fire, fixtureSync, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
 import '../src/vaadin-context-menu.js';
-import '@vaadin/item/src/vaadin-item.js';
-import '@vaadin/list-box/src/vaadin-list-box.js';
+import '@scoped-vaadin/item/src/vaadin-item.js';
+import '@scoped-vaadin/list-box/src/vaadin-list-box.js';
 
 class XFoo extends HTMLElement {
   constructor() {
@@ -17,26 +18,26 @@
   }
 }
 
-customElements.define('x-foo', XFoo);
+internalCustomElements.define('x-foo', XFoo);
 
 describe('context', () => {
   let menu, foo, fooContent, target, another;
 
   beforeEach(async () => {
     menu = fixtureSync(`
-      <vaadin-context-menu>
+      <vaadin24-context-menu>
         <div id="target">
           Foo
           <x-foo></x-foo>
         </div>
         <div id="another">Bar</div>
-      </vaadin-context-menu>
+      </vaadin24-context-menu>
     `);
     menu.renderer = (root, _, context) => {
       root.innerHTML = `
-        <vaadin-list-box id="menu">
-          <vaadin-item>The menu target: ${context.target.textContent}</vaadin-item>
-        </vaadin-list-box>
+        <vaadin24-list-box id="menu">
+          <vaadin24-item>The menu target: ${context.target.textContent}</vaadin24-item>
+        </vaadin24-list-box>
       `;
     };
     await nextRender();
