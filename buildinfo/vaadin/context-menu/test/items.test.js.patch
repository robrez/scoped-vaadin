Index: test/items.test.js
===================================================================
--- test/items.test.js
+++ test/items.test.js
@@ -14,11 +14,11 @@
   tabKeyDown,
 } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/item/vaadin-item.js';
-import '@vaadin/list-box/vaadin-list-box.js';
+import '@scoped-vaadin/item/vaadin-item.js';
+import '@scoped-vaadin/list-box/vaadin-list-box.js';
 import './not-animated-styles.js';
 import '../vaadin-context-menu.js';
-import { isTouch } from '@vaadin/component-base/src/browser-utils.js';
+import { isTouch } from '@scoped-vaadin/component-base/src/browser-utils.js';
 
 const menuOpenEvent = isTouch ? 'click' : 'mouseover';
 
@@ -26,7 +26,7 @@
   let rootMenu, subMenu, target;
 
   const createComponent = (text) => {
-    const item = document.createElement('vaadin-context-menu-item');
+    const item = document.createElement('vaadin23-context-menu-item');
     item.textContent = text;
     return item;
   };
@@ -47,7 +47,7 @@
   };
 
   const getSubMenu = (menu = rootMenu) => {
-    return menu.$.overlay.content.querySelector('vaadin-context-menu');
+    return menu.$.overlay.content.querySelector('vaadin23-context-menu');
   };
 
   const updateItemsAndReopen = async () => {
@@ -59,8 +59,8 @@
 
   const getMenuItems = (menu = rootMenu) => {
     const overlay = menu.$.overlay;
-    const listBox = overlay.querySelector('vaadin-context-menu-list-box');
-    return Array.from(listBox.querySelectorAll('vaadin-context-menu-item'));
+    const listBox = overlay.querySelector('vaadin23-context-menu-list-box');
+    return Array.from(listBox.querySelectorAll('vaadin23-context-menu-item'));
   };
 
   afterEach(() => {
@@ -70,9 +70,9 @@
   describe('default', () => {
     beforeEach(async () => {
       rootMenu = fixtureSync(`
-        <vaadin-context-menu>
+        <vaadin23-context-menu>
           <button id="target"></button>
-        </vaadin-context-menu>
+        </vaadin23-context-menu>
       `);
       rootMenu.openOn = menuOpenEvent;
       target = rootMenu.firstElementChild;
@@ -228,7 +228,7 @@
     });
 
     it('should have default item type', () => {
-      expect(menuComponents()[0].localName).to.equal('vaadin-context-menu-item');
+      expect(menuComponents()[0].localName).to.equal('vaadin23-context-menu-item');
     });
 
     it('should accept component items', () => {
@@ -556,9 +556,9 @@
 
     beforeEach(async () => {
       rootMenu = fixtureSync(`
-        <vaadin-context-menu theme="foo">
+        <vaadin23-context-menu theme="foo">
           <button id="target"></button>
-        </vaadin-context-menu>
+        </vaadin23-context-menu>
       `);
       rootMenu.openOn = menuOpenEvent;
       target = rootMenu.firstElementChild;
@@ -594,8 +594,8 @@
     it('should propagate host theme attribute to the nested elements', () => {
       [rootMenu, subMenu, subMenu2].forEach((subMenu) => {
         const overlay = subMenu.$.overlay;
-        const listBox = overlay.querySelector('vaadin-context-menu-list-box');
-        const items = Array.from(listBox.querySelectorAll('vaadin-context-menu-item'));
+        const listBox = overlay.querySelector('vaadin23-context-menu-list-box');
+        const items = Array.from(listBox.querySelectorAll('vaadin23-context-menu-item'));
 
         expect(overlay.getAttribute('theme')).to.equal('foo');
         expect(listBox.getAttribute('theme')).to.equal('foo');
@@ -624,8 +624,8 @@
 
       [rootMenu, subMenu, subMenu2].forEach((subMenu) => {
         const overlay = subMenu.$.overlay;
-        const listBox = overlay.querySelector('vaadin-context-menu-list-box');
-        const items = Array.from(listBox.querySelectorAll('vaadin-context-menu-item'));
+        const listBox = overlay.querySelector('vaadin23-context-menu-list-box');
+        const items = Array.from(listBox.querySelectorAll('vaadin23-context-menu-item'));
 
         expect(overlay.hasAttribute('theme')).to.be.false;
         expect(listBox.hasAttribute('theme')).to.be.false;
