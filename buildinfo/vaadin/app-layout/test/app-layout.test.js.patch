Index: test/app-layout.test.js
===================================================================
--- test/app-layout.test.js
+++ test/app-layout.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import {
   aTimeout,
@@ -32,29 +33,29 @@
   await onceInvoked(layout, '_updateOffsetSize');
 }
 
-describe('vaadin-app-layout', () => {
+describe('vaadin23-app-layout', () => {
   let layout;
 
   describe('custom element definition', () => {
     let tagName;
 
     beforeEach(() => {
-      layout = fixtureSync('<vaadin-app-layout></vaadin-app-layout>');
+      layout = fixtureSync('<vaadin23-app-layout></vaadin23-app-layout>');
       tagName = layout.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
   describe('primarySection', () => {
     beforeEach(() => {
-      layout = fixtureSync('<vaadin-app-layout></vaadin-app-layout>');
+      layout = fixtureSync('<vaadin23-app-layout></vaadin23-app-layout>');
     });
 
     it('should be set to navbar by default', () => {
@@ -80,7 +81,7 @@
 
   describe('navbar', () => {
     beforeEach(() => {
-      layout = fixtureSync('<vaadin-app-layout></vaadin-app-layout>');
+      layout = fixtureSync('<vaadin23-app-layout></vaadin23-app-layout>');
     });
 
     describe('default', () => {
@@ -89,7 +90,7 @@
       });
 
       it('should move added node to navbar', async () => {
-        const toggle = document.createElement('vaadin-drawer-toggle');
+        const toggle = document.createElement('vaadin23-drawer-toggle');
         toggle.setAttribute('slot', 'navbar touch-optimized');
         layout.appendChild(toggle);
         await aTimeout(0);
@@ -97,7 +98,7 @@
       });
 
       it('should make node added to navbar visible', async () => {
-        const toggle = document.createElement('vaadin-drawer-toggle');
+        const toggle = document.createElement('vaadin23-drawer-toggle');
         toggle.setAttribute('slot', 'navbar');
         layout.appendChild(toggle);
         await aTimeout(0);
@@ -127,7 +128,7 @@
       });
 
       it('should move added node to navbar-bottom', async () => {
-        const toggle = document.createElement('vaadin-drawer-toggle');
+        const toggle = document.createElement('vaadin23-drawer-toggle');
         toggle.setAttribute('slot', 'navbar touch-optimized');
         layout.appendChild(toggle);
         await aTimeout(0);
@@ -135,7 +136,7 @@
       });
 
       it('should make node added to navbar-bottom visible', async () => {
-        const toggle = document.createElement('vaadin-drawer-toggle');
+        const toggle = document.createElement('vaadin23-drawer-toggle');
         toggle.setAttribute('slot', 'navbar touch-optimized');
         layout.appendChild(toggle);
         await aTimeout(0);
@@ -173,15 +174,15 @@
       const overlayMode = String(layoutMode === 'mobile');
 
       layout = fixtureSync(`
-        <vaadin-app-layout style="--vaadin-app-layout-drawer-overlay: ${overlayMode}; --vaadin-app-layout-transition: none;">
-          <vaadin-drawer-toggle id="toggle" slot="navbar"></vaadin-drawer-toggle>
+        <vaadin23-app-layout style="--vaadin-app-layout-drawer-overlay: ${overlayMode}; --vaadin-app-layout-transition: none;">
+          <vaadin23-drawer-toggle id="toggle" slot="navbar"></vaadin23-drawer-toggle>
           <section slot="drawer">
             <p>Item 1</p>
             <p>Item 2</p>
             <p>Item 3</p>
           </section>
           <main>Page content</main>
-        </vaadin-app-layout>
+        </vaadin23-app-layout>
       `);
       await nextRender();
       toggle = layout.querySelector('#toggle');
