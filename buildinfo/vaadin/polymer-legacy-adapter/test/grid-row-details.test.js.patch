Index: test/grid-row-details.test.js
===================================================================
--- test/grid-row-details.test.js
+++ test/grid-row-details.test.js
@@ -1,7 +1,7 @@
 import { expect } from '@esm-bundle/chai';
 import { fire, fixtureSync, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/grid';
+import '@scoped-vaadin/grid';
 import '../template-renderer.js';
 import './fixtures/mock-grid-host.js';
 import { GridTemplatizer } from '../src/template-renderer-grid-templatizer.js';
@@ -9,9 +9,9 @@
 describe('row details template', () => {
   function fixtureGrid() {
     return fixtureSync(`
-      <vaadin-grid>
+      <vaadin24-grid>
         <template class="row-details"></template>
-      </vaadin-grid>
+      </vaadin24-grid>
     `);
   }
 
@@ -30,7 +30,7 @@
     grid.rowDetailsRenderer = () => {};
 
     expect(() => window.Vaadin.templateRendererCallback(grid)).to.throw(
-      /^Cannot use both a template and a renderer for <vaadin-grid \/>\.$/u,
+      /^Cannot use both a template and a renderer for <vaadin24-grid \/>\.$/u,
     );
   });
 });
@@ -64,19 +64,19 @@
   });
 
   it('should render model.detailsOpened', () => {
-    const checkbox = queryDetailsCellContent('vaadin-checkbox.details-opened');
+    const checkbox = queryDetailsCellContent('vaadin24-checkbox.details-opened');
 
     expect(checkbox.checked).to.equal(true);
   });
 
   it('should render model.selected', () => {
-    const checkbox = queryDetailsCellContent('vaadin-checkbox.selected');
+    const checkbox = queryDetailsCellContent('vaadin24-checkbox.selected');
 
     expect(checkbox.checked).to.equal(false);
   });
 
   it('should render model.expanded', () => {
-    const checkbox = queryDetailsCellContent('vaadin-checkbox.expanded');
+    const checkbox = queryDetailsCellContent('vaadin24-checkbox.expanded');
 
     expect(checkbox.checked).to.equal(false);
   });
@@ -91,7 +91,7 @@
     let checkbox;
 
     beforeEach(() => {
-      checkbox = queryDetailsCellContent('vaadin-checkbox.details-opened');
+      checkbox = queryDetailsCellContent('vaadin24-checkbox.details-opened');
     });
 
     describe('upwards', () => {
@@ -126,7 +126,7 @@
     let checkbox;
 
     beforeEach(() => {
-      checkbox = queryDetailsCellContent('vaadin-checkbox.expanded');
+      checkbox = queryDetailsCellContent('vaadin24-checkbox.expanded');
 
       // Expanding items only works with custom data providers.
       grid.dataProvider = (_params, cb) => {
@@ -178,7 +178,7 @@
     let checkbox;
 
     beforeEach(() => {
-      checkbox = queryDetailsCellContent('vaadin-checkbox.selected');
+      checkbox = queryDetailsCellContent('vaadin24-checkbox.selected');
     });
 
     describe('upwards', () => {
