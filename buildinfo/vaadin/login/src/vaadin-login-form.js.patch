Index: login/src/vaadin-login-form.js
===================================================================
--- login/src/vaadin-login-form.js
+++ login/src/vaadin-login-form.js
@@ -3,33 +3,33 @@
  * Copyright (c) 2018 - 2023 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import '@vaadin/button/src/vaadin-button.js';
-import '@vaadin/text-field/src/vaadin-text-field.js';
-import '@vaadin/password-field/src/vaadin-password-field.js';
+import '@scoped-vaadin/button/src/vaadin-button.js';
+import '@scoped-vaadin/text-field/src/vaadin-text-field.js';
+import '@scoped-vaadin/password-field/src/vaadin-password-field.js';
 import './vaadin-login-form-wrapper.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { defineCustomElement } from '@vaadin/component-base/src/define.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { defineCustomElement } from '@scoped-vaadin/component-base/src/define.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { LoginFormMixin } from './vaadin-login-form-mixin.js';
 
 /**
- * `<vaadin-login-form>` is a Web Component providing an easy way to require users
+ * `<vaadin24-login-form>` is a Web Component providing an easy way to require users
  * to log in into an application. Note that component has no shadowRoot.
  *
  * ```
- * <vaadin-login-form></vaadin-login-form>
+ * <vaadin24-login-form></vaadin24-login-form>
  * ```
  *
  * Component has to be accessible from the `document` layer in order to allow password managers to work properly with form values.
- * Using `<vaadin-login-overlay>` allows to always attach the component to the document body.
+ * Using `<vaadin24-login-overlay>` allows to always attach the component to the document body.
  *
  * ### Styling
  *
  * The component doesn't have a shadowRoot, so the `<form>` and input fields can be styled from a global scope.
- * Use `<vaadin-login-form-wrapper>` themable component to apply styles.
+ * Use `<vaadin24-login-form-wrapper>` themable component to apply styles.
  *
- * The following shadow DOM parts of the `<vaadin-login-form-wrapper>` are available for styling:
+ * The following shadow DOM parts of the `<vaadin24-login-form-wrapper>` are available for styling:
  *
  * Part name      | Description
  * ---------------|---------------------------------------------------------|
@@ -57,14 +57,14 @@
   static get template() {
     return html`
       <style>
-        vaadin-login-form-wrapper > form > * {
+        vaadin24-login-form-wrapper > form > * {
           width: 100%;
         }
       </style>
-      <vaadin-login-form-wrapper id="vaadinLoginFormWrapper" theme$="[[_theme]]" error="[[error]]" i18n="[[i18n]]">
+      <vaadin24-login-form-wrapper id="vaadinLoginFormWrapper" theme$="[[_theme]]" error="[[error]]" i18n="[[i18n]]">
         <form method="POST" action$="[[action]]" on-formdata="_onFormData" slot="form">
           <input id="csrf" type="hidden" />
-          <vaadin-text-field
+          <vaadin24-text-field
             name="username"
             label="[[i18n.form.username]]"
             error-message="[[i18n.errorMessage.username]]"
@@ -77,9 +77,9 @@
             autocomplete="username"
           >
             <input type="text" slot="input" on-keyup="_handleInputKeyup" />
-          </vaadin-text-field>
+          </vaadin24-text-field>
 
-          <vaadin-password-field
+          <vaadin24-password-field
             name="password"
             label="[[i18n.form.password]]"
             error-message="[[i18n.errorMessage.password]]"
@@ -90,27 +90,27 @@
             autocomplete="current-password"
           >
             <input type="password" slot="input" on-keyup="_handleInputKeyup" />
-          </vaadin-password-field>
+          </vaadin24-password-field>
         </form>
 
-        <vaadin-button slot="submit" theme="primary contained submit" on-click="submit" disabled$="[[disabled]]">
+        <vaadin24-button slot="submit" theme="primary contained submit" on-click="submit" disabled$="[[disabled]]">
           [[i18n.form.submit]]
-        </vaadin-button>
+        </vaadin24-button>
 
-        <vaadin-button
+        <vaadin24-button
           slot="forgot-password"
           theme="tertiary small"
           on-click="_onForgotPasswordClick"
           hidden$="[[noForgotPassword]]"
         >
           [[i18n.form.forgotPassword]]
-        </vaadin-button>
-      </vaadin-login-form-wrapper>
+        </vaadin24-button>
+      </vaadin24-login-form-wrapper>
     `;
   }
 
   static get is() {
-    return 'vaadin-login-form';
+    return 'vaadin24-login-form';
   }
 
   /**
