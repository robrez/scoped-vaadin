Index: test/drawer-mode.test.js
===================================================================
--- test/drawer-mode.test.js
+++ test/drawer-mode.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { setViewport } from '@vaadin/test-runner-commands';
 import { fixtureSync, nextRender, nextResize } from '@vaadin/testing-helpers';
@@ -21,10 +22,10 @@
 
   beforeEach(async () => {
     layout = fixtureSync(`
-      <vaadin-master-detail-layout>
+      <vaadin24-master-detail-layout>
         <master-content></master-content>
         <detail-content slot="detail"></detail-content>
-      </vaadin-master-detail-layout>
+      </vaadin24-master-detail-layout>
     `);
     await nextRender();
     master = layout.shadowRoot.querySelector('[part="master"]');
@@ -202,10 +203,10 @@
 
     it('should immediately switch to drawer mode when wide LitElement detail is added at narrow width', async () => {
       layout = fixtureSync(`
-    <vaadin-master-detail-layout>
+    <vaadin24-master-detail-layout>
       <div><input/></div>
       <div slot="detail"><input/></div>
-    </vaadin-master-detail-layout>
+    </vaadin24-master-detail-layout>
   `);
       await nextRender();
 
@@ -221,7 +222,7 @@
           return html` <button style="width: 250px">Long button description</button> `;
         }
       }
-      customElements.define('custom-details-element', CustomDetailsElement);
+      internalCustomElements.define('custom-details-element', CustomDetailsElement);
 
       const detail = document.createElement('custom-details-element');
       await layout._setDetail(detail);
