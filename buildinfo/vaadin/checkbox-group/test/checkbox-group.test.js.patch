Index: test/checkbox-group.test.js
===================================================================
--- test/checkbox-group.test.js
+++ test/checkbox-group.test.js
@@ -1,38 +1,39 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { sendKeys } from '@vaadin/test-runner-commands';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
 import '../src/vaadin-checkbox-group.js';
 
-describe('vaadin-checkbox-group', () => {
+describe('vaadin24-checkbox-group', () => {
   let group, checkboxes;
 
   describe('custom element definition', () => {
     let tagName;
 
     beforeEach(() => {
-      group = fixtureSync(`<vaadin-checkbox-group></vaadin-checkbox-group>`);
+      group = fixtureSync(`<vaadin24-checkbox-group></vaadin24-checkbox-group>`);
       tagName = group.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
   describe('default', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group>
-          <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-          <vaadin-checkbox value="2" label="Checkbox 2" disabled></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group>
+          <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+          <vaadin24-checkbox value="2" label="Checkbox 2" disabled></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
-      checkboxes = group.querySelectorAll('vaadin-checkbox');
+      checkboxes = group.querySelectorAll('vaadin24-checkbox');
       await nextFrame();
     });
 
@@ -57,13 +58,13 @@
   describe('disabled', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group disabled>
-          <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-          <vaadin-checkbox value="2" label="Checkbox 2"></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group disabled>
+          <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+          <vaadin24-checkbox value="2" label="Checkbox 2"></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
       await nextFrame();
-      checkboxes = [...group.querySelectorAll('vaadin-checkbox')];
+      checkboxes = [...group.querySelectorAll('vaadin24-checkbox')];
     });
 
     it('should propagate disabled property to checkboxes', async () => {
@@ -79,7 +80,7 @@
     });
 
     it('should set disabled property to dynamically added checkboxes', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = '3';
       group.appendChild(checkbox);
       await nextFrame();
@@ -90,13 +91,13 @@
   describe('readonly', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group readonly>
-          <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-          <vaadin-checkbox value="2" label="Checkbox 2"></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group readonly>
+          <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+          <vaadin24-checkbox value="2" label="Checkbox 2"></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
       await nextFrame();
-      checkboxes = [...group.querySelectorAll('vaadin-checkbox')];
+      checkboxes = [...group.querySelectorAll('vaadin24-checkbox')];
     });
 
     it('should propagate readonly property to checkboxes', async () => {
@@ -112,7 +113,7 @@
     });
 
     it('should set readonly property to dynamically added checkboxes', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = '3';
       group.appendChild(checkbox);
       await nextFrame();
@@ -123,18 +124,18 @@
   describe('value', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group>
-          <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-          <vaadin-checkbox value="2" label="Checkbox 2"></vaadin-checkbox>
-          <vaadin-checkbox value="3" label="Checkbox 3"></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group>
+          <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+          <vaadin24-checkbox value="2" label="Checkbox 2"></vaadin24-checkbox>
+          <vaadin24-checkbox value="3" label="Checkbox 3"></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
       await nextFrame();
-      checkboxes = [...group.querySelectorAll('vaadin-checkbox')];
+      checkboxes = [...group.querySelectorAll('vaadin24-checkbox')];
     });
 
     it('should add dynamically added checked checkbox value to checkbox group value', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       checkbox.checked = true;
       group.appendChild(checkbox);
@@ -144,7 +145,7 @@
 
     it('should add dynamically added checked checkbox value when group value is null', async () => {
       group.value = null;
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       checkbox.checked = true;
       group.appendChild(checkbox);
@@ -154,7 +155,7 @@
 
     it('should ignore dynamically added unchecked checkbox value when group value is null', async () => {
       group.value = null;
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       group.appendChild(checkbox);
       await nextFrame();
@@ -162,7 +163,7 @@
     });
 
     it('should not add duplicate values when added checked checkbox already included in value', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       checkbox.checked = true;
       group.value = ['new'];
@@ -172,7 +173,7 @@
     });
 
     it('should check dynamically added checkbox if included in value', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       group.value = ['new'];
       group.appendChild(checkbox);
@@ -191,7 +192,7 @@
 
     it('should create new array instance for checkbox group value when checkbox dynamically added', async () => {
       const value = group.value;
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'new';
       checkbox.checked = true;
       group.appendChild(checkbox);
@@ -265,14 +266,14 @@
       [firstGlobalFocusable, group] = fixtureSync(
         `<div>
           <input id="first-global-focusable" />
-          <vaadin-checkbox-group>
-            <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-          </vaadin-checkbox-group>
+          <vaadin24-checkbox-group>
+            <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+          </vaadin24-checkbox-group>
         </div>`,
       ).children;
       firstGlobalFocusable.focus();
       await nextFrame();
-      checkboxes = [...group.querySelectorAll('vaadin-checkbox')];
+      checkboxes = [...group.querySelectorAll('vaadin24-checkbox')];
     });
 
     it('should set focused attribute on Tab', async () => {
@@ -307,12 +308,12 @@
   describe('has-value attribute', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group>
-          <vaadin-checkbox value="1" label="Checkbox 1"></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group>
+          <vaadin24-checkbox value="1" label="Checkbox 1"></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
       await nextFrame();
-      checkboxes = [...group.querySelectorAll('vaadin-checkbox')];
+      checkboxes = [...group.querySelectorAll('vaadin24-checkbox')];
     });
 
     it('should toggle the attribute on value change', async () => {
@@ -327,7 +328,7 @@
 
   describe('warnings', () => {
     beforeEach(async () => {
-      group = fixtureSync(`<vaadin-checkbox-group></vaadin-checkbox-group>`);
+      group = fixtureSync(`<vaadin24-checkbox-group></vaadin24-checkbox-group>`);
       await nextFrame();
     });
 
@@ -340,14 +341,14 @@
     });
 
     it('should warn when adding checkbox without value', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       group.appendChild(checkbox);
       await nextFrame();
       expect(console.warn.calledOnce).to.be.true;
     });
 
     it('should not warn when adding checkbox with value attribute', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.setAttribute('value', 'something');
       group.appendChild(checkbox);
       await nextFrame();
@@ -355,7 +356,7 @@
     });
 
     it('should not warn when adding checkbox with value property', async () => {
-      const checkbox = document.createElement('vaadin-checkbox');
+      const checkbox = document.createElement('vaadin24-checkbox');
       checkbox.value = 'something';
       group.appendChild(checkbox);
       await nextFrame();
@@ -366,20 +367,20 @@
   describe('wrapping', () => {
     beforeEach(async () => {
       group = fixtureSync(`
-        <vaadin-checkbox-group>
-          <vaadin-checkbox value="c_1" label="Checkbox 1"></vaadin-checkbox>
-          <vaadin-checkbox value="c_2" label="Checkbox 2"></vaadin-checkbox>
-          <vaadin-checkbox value="c_3" label="Checkbox 3"></vaadin-checkbox>
-          <vaadin-checkbox value="c_4" label="Checkbox 4"></vaadin-checkbox>
-          <vaadin-checkbox value="c_5" label="Checkbox 5"></vaadin-checkbox>
-          <vaadin-checkbox value="c_6" label="Checkbox 6"></vaadin-checkbox>
-          <vaadin-checkbox value="c_7" label="Checkbox 7"></vaadin-checkbox>
-          <vaadin-checkbox value="c_8" label="Checkbox 8"></vaadin-checkbox>
-          <vaadin-checkbox value="c_9" label="Checkbox 9"></vaadin-checkbox>
-          <vaadin-checkbox value="c_10" label="Checkbox 10"></vaadin-checkbox>
-          <vaadin-checkbox value="c_11" label="Checkbox 11"></vaadin-checkbox>
-          <vaadin-checkbox value="c_12" label="Checkbox 12"></vaadin-checkbox>
-        </vaadin-checkbox-group>
+        <vaadin24-checkbox-group>
+          <vaadin24-checkbox value="c_1" label="Checkbox 1"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_2" label="Checkbox 2"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_3" label="Checkbox 3"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_4" label="Checkbox 4"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_5" label="Checkbox 5"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_6" label="Checkbox 6"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_7" label="Checkbox 7"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_8" label="Checkbox 8"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_9" label="Checkbox 9"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_10" label="Checkbox 10"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_11" label="Checkbox 11"></vaadin24-checkbox>
+          <vaadin24-checkbox value="c_12" label="Checkbox 12"></vaadin24-checkbox>
+        </vaadin24-checkbox-group>
       `);
       await nextFrame();
     });
