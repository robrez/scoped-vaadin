Index: test/accordion.test.js
===================================================================
--- test/accordion.test.js
+++ test/accordion.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import {
   arrowDownKeyDown,
@@ -12,7 +13,7 @@
 import sinon from 'sinon';
 import '../src/vaadin-accordion.js';
 
-describe('vaadin-accordion', () => {
+describe('vaadin24-accordion', () => {
   let accordion, heading;
 
   function getHeading(idx) {
@@ -21,22 +22,22 @@
 
   beforeEach(async () => {
     accordion = fixtureSync(`
-      <vaadin-accordion>
-        <vaadin-accordion-panel>
-          <vaadin-accordion-heading slot="summary">Panel 1</vaadin-accordion-heading>
+      <vaadin24-accordion>
+        <vaadin24-accordion-panel>
+          <vaadin24-accordion-heading slot="summary">Panel 1</vaadin24-accordion-heading>
           <div>
             <input />
           </div>
-        </vaadin-accordion-panel>
-        <vaadin-accordion-panel>
-          <vaadin-accordion-heading slot="summary">Panel 2</vaadin-accordion-heading>
+        </vaadin24-accordion-panel>
+        <vaadin24-accordion-panel>
+          <vaadin24-accordion-heading slot="summary">Panel 2</vaadin24-accordion-heading>
           <div>Content 2</div>
-        </vaadin-accordion-panel>
-        <vaadin-accordion-panel>
-          <vaadin-accordion-heading slot="summary"><div>Panel 3</div></vaadin-accordion-heading>
+        </vaadin24-accordion-panel>
+        <vaadin24-accordion-panel>
+          <vaadin24-accordion-heading slot="summary"><div>Panel 3</div></vaadin24-accordion-heading>
           <div>Content 3</div>
-        </vaadin-accordion-panel>
-      </vaadin-accordion>
+        </vaadin24-accordion-panel>
+      </vaadin24-accordion>
     `);
     await nextRender();
   });
@@ -49,11 +50,11 @@
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
@@ -70,7 +71,7 @@
     });
 
     it('should update items value when adding nodes', () => {
-      const panel = document.createElement('vaadin-accordion-panel');
+      const panel = document.createElement('vaadin24-accordion-panel');
       accordion.appendChild(panel);
       accordion._observer.flush();
       expect(accordion.items.length).to.be.equal(4);
@@ -189,7 +190,7 @@
     });
 
     it('should not throw when calling `focus()` before items are set', () => {
-      const focus = () => document.createElement('vaadin-accordion').focus();
+      const focus = () => document.createElement('vaadin24-accordion').focus();
       expect(focus()).to.not.throw;
     });
   });
@@ -320,7 +321,7 @@
     let heading, content;
 
     beforeEach(() => {
-      heading = accordion.items[0].querySelector('vaadin-accordion-heading');
+      heading = accordion.items[0].querySelector('vaadin24-accordion-heading');
       content = accordion.items[0].querySelector('div');
     });
 
