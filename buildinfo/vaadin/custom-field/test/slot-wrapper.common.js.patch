Index: test/slot-wrapper.common.js
===================================================================
--- test/slot-wrapper.common.js
+++ test/slot-wrapper.common.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { fire, fixtureSync, nextFrame, nextRender } from '@vaadin/testing-helpers';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
@@ -5,35 +6,35 @@
 class XField extends PolymerElement {
   static get template() {
     return html`
-      <vaadin-custom-field id="customField">
+      <vaadin24-custom-field id="customField">
         <slot></slot>
-      </vaadin-custom-field>
+      </vaadin24-custom-field>
     `;
   }
 }
 
-customElements.define('x-field', XField);
+internalCustomElements.define('x-field', XField);
 
 class XField2 extends PolymerElement {
   static get template() {
     return html`
-      <vaadin-custom-field id="customField">
+      <vaadin24-custom-field id="customField">
         <div id="wrapper">
           <slot></slot>
         </div>
-      </vaadin-custom-field>
+      </vaadin24-custom-field>
     `;
   }
 }
 
-customElements.define('x-field2', XField2);
+internalCustomElements.define('x-field2', XField2);
 
 const fixtures = {
   default: `
-    <vaadin-custom-field>
+    <vaadin24-custom-field>
       <input type="text">
       <input type="number">
-    </vaadin-custom-field>
+    </vaadin24-custom-field>
   `,
   nested: `
     <x-field>
