Index: src/vaadin-date-picker-light.js
===================================================================
--- src/vaadin-date-picker-light.js
+++ src/vaadin-date-picker-light.js
@@ -6,9 +6,9 @@
 import './vaadin-date-picker-overlay-content.js';
 import './vaadin-date-picker-overlay.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { defineCustomElement } from '@vaadin/component-base/src/define.js';
-import { ValidateMixin } from '@vaadin/field-base/src/validate-mixin.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { defineCustomElement } from '@scoped-vaadin/component-base/src/define.js';
+import { ValidateMixin } from '@scoped-vaadin/field-base/src/validate-mixin.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { DatePickerMixin } from './vaadin-date-picker-mixin.js';
 
 function dashToCamelCase(dash) {
@@ -16,7 +16,7 @@
 }
 
 /**
- * `<vaadin-date-picker-light>` is a customizable version of the `<vaadin-date-picker>` providing
+ * `<vaadin24-date-picker-light>` is a customizable version of the `<vaadin24-date-picker>` providing
  * only the scrollable month calendar view and leaving the input field definition to the user.
  *
  * To create a custom input field, you need to add a child element which has a two-way
@@ -25,23 +25,23 @@
  * using an `<input>` element.
  *
  * ```html
- * <vaadin-date-picker-light attr-for-value="value">
+ * <vaadin24-date-picker-light attr-for-value="value">
  *   <input class="input">
- * </vaadin-date-picker-light>
+ * </vaadin24-date-picker-light>
  * ```
  *
  * ### Styling
  *
  * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.
  *
- * In addition to `<vaadin-date-picker-light>` itself, the following
+ * In addition to `<vaadin24-date-picker-light>` itself, the following
  * internal components are themable:
  *
- * - `<vaadin-date-picker-overlay>`
- * - `<vaadin-date-picker-overlay-content>`
- * - `<vaadin-month-calendar>`
+ * - `<vaadin24-date-picker-overlay>`
+ * - `<vaadin24-date-picker-overlay-content>`
+ * - `<vaadin24-month-calendar>`
  *
- * Note: the `theme` attribute value set on `<vaadin-date-picker-light>`
+ * Note: the `theme` attribute value set on `<vaadin24-date-picker-light>`
  * is propagated to the internal themable components listed above.
  *
  * @fires {Event} change - Fired when the user commits a value change.
@@ -68,7 +68,7 @@
       </style>
       <slot></slot>
 
-      <vaadin-date-picker-overlay
+      <vaadin24-date-picker-overlay
         id="overlay"
         fullscreen$="[[_fullscreen]]"
         opened="{{opened}}"
@@ -78,12 +78,12 @@
         restore-focus-on-close
         restore-focus-node="[[inputElement]]"
         theme$="[[_theme]]"
-      ></vaadin-date-picker-overlay>
+      ></vaadin24-date-picker-overlay>
     `;
   }
 
   static get is() {
-    return 'vaadin-date-picker-light';
+    return 'vaadin24-date-picker-light';
   }
 
   static get properties() {
@@ -116,7 +116,7 @@
   /** @protected */
   connectedCallback() {
     super.connectedCallback();
-    const cssSelector = 'vaadin-text-field,.input';
+    const cssSelector = 'vaadin24-text-field,.input';
     this._setInputElement(this.querySelector(cssSelector));
     this._setFocusElement(this.inputElement);
   }
