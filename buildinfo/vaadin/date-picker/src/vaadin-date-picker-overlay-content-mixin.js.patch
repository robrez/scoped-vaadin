Index: date-picker/src/vaadin-date-picker-overlay-content-mixin.js
===================================================================
--- date-picker/src/vaadin-date-picker-overlay-content-mixin.js	null
+++ date-picker/src/vaadin-date-picker-overlay-content-mixin.js	null
@@ -5,11 +5,11 @@
  */
 import { flush } from '@polymer/polymer/lib/utils/flush.js';
 import { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';
-import { timeOut } from '@vaadin/component-base/src/async.js';
-import { Debouncer } from '@vaadin/component-base/src/debounce.js';
-import { addListener, setTouchAction } from '@vaadin/component-base/src/gestures.js';
-import { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';
-import { SlotController } from '@vaadin/component-base/src/slot-controller.js';
+import { timeOut } from '@scoped-vaadin/component-base/src/async.js';
+import { Debouncer } from '@scoped-vaadin/component-base/src/debounce.js';
+import { addListener, setTouchAction } from '@scoped-vaadin/component-base/src/gestures.js';
+import { MediaQueryController } from '@scoped-vaadin/component-base/src/media-query-controller.js';
+import { SlotController } from '@scoped-vaadin/component-base/src/slot-controller.js';
 import { dateAfterXMonths, dateEquals, extractDateParts, getClosestDate } from './vaadin-date-picker-helper.js';
 
 /**
@@ -180,7 +180,7 @@
       );
 
       this.addController(
-        new SlotController(this, 'today-button', 'vaadin-button', {
+        new SlotController(this, 'today-button', 'vaadin24-button', {
           observe: false,
           initializer: (btn) => {
             btn.setAttribute('theme', 'tertiary');
@@ -192,7 +192,7 @@
       );
 
       this.addController(
-        new SlotController(this, 'cancel-button', 'vaadin-button', {
+        new SlotController(this, 'cancel-button', 'vaadin24-button', {
           observe: false,
           initializer: (btn) => {
             btn.setAttribute('theme', 'tertiary');
@@ -231,7 +231,7 @@
     /** @private */
     __initMonthScroller() {
       this.addController(
-        new SlotController(this, 'months', 'vaadin-date-picker-month-scroller', {
+        new SlotController(this, 'months', 'vaadin24-date-picker-month-scroller', {
           observe: false,
           initializer: (scroller) => {
             scroller.addEventListener('custom-scroll', () => {
@@ -247,7 +247,7 @@
             });
 
             scroller.addEventListener('init-done', () => {
-              const calendars = [...this.querySelectorAll('vaadin-month-calendar')];
+              const calendars = [...this.querySelectorAll('vaadin24-month-calendar')];
 
               // Two-way binding for selectedDate property
               calendars.forEach((calendar) => {
@@ -268,7 +268,7 @@
     /** @private */
     __initYearScroller() {
       this.addController(
-        new SlotController(this, 'years', 'vaadin-date-picker-year-scroller', {
+        new SlotController(this, 'years', 'vaadin24-date-picker-year-scroller', {
           observe: false,
           initializer: (scroller) => {
             scroller.setAttribute('aria-hidden', 'true');
@@ -286,7 +286,7 @@
             });
 
             scroller.addEventListener('init-done', () => {
-              this.years = [...this.querySelectorAll('vaadin-date-picker-year')];
+              this.years = [...this.querySelectorAll('vaadin24-date-picker-year')];
             });
 
             this._yearScroller = scroller;
@@ -899,7 +899,7 @@
     async focusDateElement(reveal = true) {
       this.__pendingDateFocus = this.focusedDate;
 
-      // Wait for `vaadin-month-calendar` elements to be rendered
+      // Wait for `vaadin24-month-calendar` elements to be rendered
       if (!this.calendars.length) {
         await new Promise((resolve) => {
           afterNextRender(this, () => {
