Index: test/tabsheet.test.js
===================================================================
--- test/tabsheet.test.js
+++ test/tabsheet.test.js
@@ -1,7 +1,8 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { fixtureSync, nextFrame } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
-import '@vaadin/tabs/src/vaadin-tabs.js';
+import '@scoped-vaadin/tabs/src/vaadin-tabs.js';
 import '../src/vaadin-tabsheet.js';
 
 describe('tabsheet', () => {
@@ -9,22 +10,22 @@
 
   beforeEach(async () => {
     tabsheet = fixtureSync(`
-      <vaadin-tabsheet>
+      <vaadin24-tabsheet>
         <div slot="prefix">Prefix</div>
         <div slot="suffix">Suffix</div>
 
-        <vaadin-tabs slot="tabs">
-          <vaadin-tab id="tab-1">Tab 1</vaadin-tab>
-          <vaadin-tab id="tab-2">Tab 2</vaadin-tab>
-          <vaadin-tab id="tab-3">Tab 3</vaadin-tab>
-        </vaadin-tabs>
+        <vaadin24-tabs slot="tabs">
+          <vaadin24-tab id="tab-1">Tab 1</vaadin24-tab>
+          <vaadin24-tab id="tab-2">Tab 2</vaadin24-tab>
+          <vaadin24-tab id="tab-3">Tab 3</vaadin24-tab>
+        </vaadin24-tabs>
 
         <div tab="tab-1">Panel 1</div>
         <div tab="tab-2">Panel 2</div>
         <div tab="tab-3">Panel 3</div>
-      </vaadin-tabsheet>
+      </vaadin24-tabsheet>
     `);
-    tabs = tabsheet.querySelector('vaadin-tabs');
+    tabs = tabsheet.querySelector('vaadin24-tabs');
 
     await nextFrame();
   });
@@ -41,11 +42,11 @@
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
@@ -173,7 +174,7 @@
 
     it('should bind dynamically added tab and panel', async () => {
       // Create a new tab and panel
-      const tab = document.createElement('vaadin-tab');
+      const tab = document.createElement('vaadin24-tab');
       const panel = document.createElement('div');
       tab.id = 'tab-4';
       panel.setAttribute('tab', 'tab-4');
@@ -193,7 +194,7 @@
 
     it('should not overwrite the id of a dynamically added panel', async () => {
       // Create a new tab and panel
-      const tab = document.createElement('vaadin-tab');
+      const tab = document.createElement('vaadin24-tab');
       const panel = document.createElement('div');
       tab.id = 'tab-4';
       panel.setAttribute('tab', 'tab-4');
@@ -235,7 +236,7 @@
     let newTab, newPanel;
 
     beforeEach(async () => {
-      newTab = fixtureSync(`<vaadin-tab id="new-tab">New Tab</vaadin-tab>`);
+      newTab = fixtureSync(`<vaadin24-tab id="new-tab">New Tab</vaadin24-tab>`);
       tabs.appendChild(newTab);
 
       newPanel = fixtureSync(`<div tab="new-tab">New Panel</div>`);
@@ -347,7 +348,7 @@
       await nextFrame();
       tabs.remove();
 
-      const newTabs = fixtureSync(`<vaadin-tabs slot="tabs"></vaadin-tabs>`);
+      const newTabs = fixtureSync(`<vaadin24-tabs slot="tabs"></vaadin24-tabs>`);
       tabsheet.appendChild(newTabs);
       await nextFrame();
       expect(newTabs.getAttribute('theme')).to.equal('foo');
@@ -364,22 +365,22 @@
 
   beforeEach(async () => {
     tabsheet = fixtureSync(`
-      <vaadin-tabsheet theme="foo">
+      <vaadin24-tabsheet theme="foo">
         <div tab="tab-1">Panel 1</div>
         <div tab="tab-2">Panel 2</div>
         <div tab="tab-3">Panel 3</div>
-      </vaadin-tabsheet>
+      </vaadin24-tabsheet>
     `);
 
     await nextFrame();
 
     // This setup lazily appends a pre-initialized tabs inside the tabsheet
     tabs = fixtureSync(`
-      <vaadin-tabs slot="tabs">
-        <vaadin-tab id="tab-1">Tab 1</vaadin-tab>
-        <vaadin-tab id="tab-2">Tab 2</vaadin-tab>
-        <vaadin-tab id="tab-3">Tab 3</vaadin-tab>
-      </vaadin-tabs>
+      <vaadin24-tabs slot="tabs">
+        <vaadin24-tab id="tab-1">Tab 1</vaadin24-tab>
+        <vaadin24-tab id="tab-2">Tab 2</vaadin24-tab>
+        <vaadin24-tab id="tab-3">Tab 3</vaadin24-tab>
+      </vaadin24-tabs>
     `);
     tabsheet.appendChild(tabs);
 
@@ -411,19 +412,19 @@
 
   beforeEach(async () => {
     tabsheet = fixtureSync(`
-      <vaadin-tabsheet>
-        <vaadin-tabs slot="tabs">
-          <vaadin-tab>Tab 1</vaadin-tab>
-          <vaadin-tab>Tab 2</vaadin-tab>
-        </vaadin-tabs>
+      <vaadin24-tabsheet>
+        <vaadin24-tabs slot="tabs">
+          <vaadin24-tab>Tab 1</vaadin24-tab>
+          <vaadin24-tab>Tab 2</vaadin24-tab>
+        </vaadin24-tabs>
 
         <div tab="tab-1">Panel 1</div>
         <div tab="tab-2">Panel 2</div>
-      </vaadin-tabsheet>
+      </vaadin24-tabsheet>
     `);
 
     await nextFrame();
-    tabs = tabsheet.querySelector('vaadin-tabs');
+    tabs = tabsheet.querySelector('vaadin24-tabs');
   });
 
   it('should be in loading state until ID is set on the tab', () => {
@@ -465,7 +466,7 @@
   });
 
   it('should not have matching panel visible after setting ID on the detached tab', async () => {
-    // Move selected tab out of the `vaadin-tabs`
+    // Move selected tab out of the `vaadin24-tabs`
     const tab = tabs.items[0];
     tabsheet.parentNode.appendChild(tab);
     await nextFrame();
