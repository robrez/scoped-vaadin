Index: test/side-nav-item.test.js
===================================================================
--- test/side-nav-item.test.js
+++ test/side-nav-item.test.js
@@ -1,3 +1,4 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@vaadin/chai-plugins';
 import { fixtureSync, nextRender } from '@vaadin/testing-helpers';
 import sinon from 'sinon';
@@ -19,22 +20,22 @@
     let tagName;
 
     beforeEach(() => {
-      item = fixtureSync('<vaadin-side-nav-item>Label</vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item>Label</vaadin24-side-nav-item>');
       tagName = item.tagName.toLowerCase();
     });
 
     it('should be defined in custom element registry', () => {
-      expect(customElements.get(tagName)).to.be.ok;
+      expect(internalCustomElements.get(tagName)).to.be.ok;
     });
 
     it('should have a valid static "is" getter', () => {
-      expect(customElements.get(tagName).is).to.equal(tagName);
+      expect(internalCustomElements.get(tagName).is).to.equal(tagName);
     });
   });
 
   describe('has-children', () => {
     beforeEach(async () => {
-      item = fixtureSync('<vaadin-side-nav-item></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item></vaadin24-side-nav-item>');
       await nextRender();
     });
 
@@ -43,7 +44,7 @@
     });
 
     it('should set has-children attribute when adding child item', async () => {
-      const child = document.createElement('vaadin-side-nav-item');
+      const child = document.createElement('vaadin24-side-nav-item');
       child.setAttribute('slot', 'children');
 
       item.appendChild(child);
@@ -53,7 +54,7 @@
     });
 
     it('should remove has-children attribute when removing child item', async () => {
-      const child = document.createElement('vaadin-side-nav-item');
+      const child = document.createElement('vaadin24-side-nav-item');
       child.setAttribute('slot', 'children');
 
       item.appendChild(child);
@@ -69,7 +70,7 @@
   describe('current', () => {
     describe('no path set initially', () => {
       beforeEach(async () => {
-        item = fixtureSync(`<vaadin-side-nav-item></vaadin-side-nav-item>`);
+        item = fixtureSync(`<vaadin24-side-nav-item></vaadin24-side-nav-item>`);
         await nextRender();
       });
 
@@ -104,7 +105,7 @@
 
     describe('matching path is set initially', () => {
       beforeEach(async () => {
-        item = fixtureSync(`<vaadin-side-nav-item path=""></vaadin-side-nav-item>`);
+        item = fixtureSync(`<vaadin24-side-nav-item path=""></vaadin24-side-nav-item>`);
         await nextRender();
       });
 
@@ -127,7 +128,7 @@
 
     describe('not matching path is set initially', () => {
       beforeEach(async () => {
-        item = fixtureSync(`<vaadin-side-nav-item path="/path"></vaadin-side-nav-item>`);
+        item = fixtureSync(`<vaadin24-side-nav-item path="/path"></vaadin24-side-nav-item>`);
         await nextRender();
       });
 
@@ -165,10 +166,10 @@
     describe('not current item with children', () => {
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-side-nav-item path="/another-path">
-            <vaadin-side-nav-item slot="children">Child 1</vaadin-side-nav-item>
-            <vaadin-side-nav-item slot="children">Child 2</vaadin-side-nav-item>
-          </vaadin-side-nav-item>
+          <vaadin24-side-nav-item path="/another-path">
+            <vaadin24-side-nav-item slot="children">Child 1</vaadin24-side-nav-item>
+            <vaadin24-side-nav-item slot="children">Child 2</vaadin24-side-nav-item>
+          </vaadin24-side-nav-item>
         `);
         await nextRender();
         toggle = item.shadowRoot.querySelector('button');
@@ -199,11 +200,11 @@
 
       it('should expand parent items when path matches', async () => {
         item = fixtureSync(`
-          <vaadin-side-nav-item>
-            <vaadin-side-nav-item slot="children">
-                <vaadin-side-nav-item slot="children"></vaadin-side-nav-item>
-            </vaadin-side-nav-item>
-          </vaadin-side-nav-item>
+          <vaadin24-side-nav-item>
+            <vaadin24-side-nav-item slot="children">
+                <vaadin24-side-nav-item slot="children"></vaadin24-side-nav-item>
+            </vaadin24-side-nav-item>
+          </vaadin24-side-nav-item>
         `);
         await nextRender();
         item._items[0]._items[0].path = '';
@@ -216,10 +217,10 @@
     describe('current item with children', () => {
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-side-nav-item path="">
-            <vaadin-side-nav-item slot="children">Child 1</vaadin-side-nav-item>
-            <vaadin-side-nav-item slot="children">Child 2</vaadin-side-nav-item>
-          </vaadin-side-nav-item>
+          <vaadin24-side-nav-item path="">
+            <vaadin24-side-nav-item slot="children">Child 1</vaadin24-side-nav-item>
+            <vaadin24-side-nav-item slot="children">Child 2</vaadin24-side-nav-item>
+          </vaadin24-side-nav-item>
         `);
         await nextRender();
         toggle = item.shadowRoot.querySelector('button');
@@ -246,10 +247,10 @@
 
       beforeEach(async () => {
         item = fixtureSync(`
-          <vaadin-side-nav-item>
-            <vaadin-side-nav-item slot="children">Child 1</vaadin-side-nav-item>
-            <vaadin-side-nav-item slot="children">Child 2</vaadin-side-nav-item>
-          </vaadin-side-nav-item>
+          <vaadin24-side-nav-item>
+            <vaadin24-side-nav-item slot="children">Child 1</vaadin24-side-nav-item>
+            <vaadin24-side-nav-item slot="children">Child 2</vaadin24-side-nav-item>
+          </vaadin24-side-nav-item>
         `);
         await nextRender();
         content = item.shadowRoot.querySelector('[part="content"]');
@@ -297,33 +298,33 @@
     });
 
     it('should be false by default', () => {
-      item = fixtureSync('<vaadin-side-nav-item></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item></vaadin24-side-nav-item>');
       expect(item.matchNested).to.be.false;
     });
 
     it('should match exact path when matchNested is false', () => {
       currentPath = '/users';
-      item = fixtureSync('<vaadin-side-nav-item path="/users"></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item path="/users"></vaadin24-side-nav-item>');
       expect(item.current).to.be.true;
 
       currentPath = '/users/john';
-      item = fixtureSync('<vaadin-side-nav-item path="/users"></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item path="/users"></vaadin24-side-nav-item>');
       expect(item.current).to.be.false;
     });
 
     it('should match nested paths when matchNested is true', () => {
       currentPath = '/users';
-      item = fixtureSync('<vaadin-side-nav-item path="/users" match-nested></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item path="/users" match-nested></vaadin24-side-nav-item>');
       expect(item.current).to.be.true;
 
       currentPath = '/users/john';
-      item = fixtureSync('<vaadin-side-nav-item path="/users" match-nested></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item path="/users" match-nested></vaadin24-side-nav-item>');
       expect(item.current).to.be.true;
     });
 
     it('should update when toggling matchNested', async () => {
       currentPath = '/users/john';
-      item = fixtureSync('<vaadin-side-nav-item path="/users"></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item path="/users"></vaadin24-side-nav-item>');
       await item.updateComplete;
       expect(item.current).to.be.false;
 
@@ -337,7 +338,7 @@
     let anchor, toggle;
 
     beforeEach(async () => {
-      item = fixtureSync('<vaadin-side-nav-item></vaadin-side-nav-item>');
+      item = fixtureSync('<vaadin24-side-nav-item></vaadin24-side-nav-item>');
       await nextRender();
       anchor = item.shadowRoot.querySelector('a');
       toggle = item.shadowRoot.querySelector('button');
