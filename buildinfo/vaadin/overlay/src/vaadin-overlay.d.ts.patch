Index: overlay/src/vaadin-overlay.d.ts
===================================================================
--- overlay/src/vaadin-overlay.d.ts
+++ overlay/src/vaadin-overlay.d.ts
@@ -3,8 +3,8 @@
  * Copyright (c) 2017 - 2023 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
-import { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { DirMixin } from '@scoped-vaadin/component-base/src/dir-mixin.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 import { OverlayMixin } from './vaadin-overlay-mixin.js';
 
 export { OverlayRenderer } from './vaadin-overlay-mixin.js';
@@ -61,7 +61,7 @@
 export type OverlayEventMap = HTMLElementEventMap & OverlayCustomEventMap;
 
 /**
- * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay
+ * `<vaadin24-overlay>` is a Web Component for creating overlays. The content of the overlay
  * can be populated imperatively by using `renderer` callback function.
  *
  * ### Rendering
@@ -72,7 +72,7 @@
  * content, users are able to check if there is already content in `root` for reusing it.
  *
  * ```html
- * <vaadin-overlay id="overlay"></vaadin-overlay>
+ * <vaadin24-overlay id="overlay"></vaadin24-overlay>
  * ```
  * ```js
  * const overlay = document.querySelector('#overlay');
@@ -135,7 +135,7 @@
 
 declare global {
   interface HTMLElementTagNameMap {
-    'vaadin-overlay': Overlay;
+    'vaadin24-overlay': Overlay;
   }
 }
 
