Index: test/styling.test.js
===================================================================
--- test/styling.test.js
+++ test/styling.test.js
@@ -1,9 +1,10 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 import { expect } from '@esm-bundle/chai';
 import { fixtureSync, oneEvent } from '@vaadin/testing-helpers';
 import '../vaadin-overlay.js';
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin';
-import { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin';
+import { css, registerStyles } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 
 registerStyles(
   'overlay-local-styles',
@@ -14,7 +15,7 @@
   `,
 );
 
-customElements.define(
+internalCustomElements.define(
   'overlay-local-styles',
   class extends ThemableMixin(PolymerElement) {
     static get is() {
@@ -37,13 +38,13 @@
           }
         </style>
 
-        <vaadin-overlay id="overlay" opened="{{opened}}">
+        <vaadin24-overlay id="overlay" opened="{{opened}}">
           <template>
             <div class="local-styles-content"></div>
             <div class="global-styles-content"></div>
             <div class="themed-styles-content"></div>
           </template>
-        </vaadin-overlay>
+        </vaadin24-overlay>
       `;
     }
 
@@ -124,12 +125,12 @@
   describe('global styles', () => {
     beforeEach(async () => {
       overlay = fixtureSync(`
-        <vaadin-overlay id="overlay">
+        <vaadin24-overlay id="overlay">
           <template>
             <div class="local-styles-content"></div>
             <div class="global-styles-content"></div>
           </template>
-        </vaadin-overlay>
+        </vaadin24-overlay>
       `);
       overlay.opened = true;
       await oneEvent(overlay, 'vaadin-overlay-open');
