Index: src/vaadin-select-overlay.js
===================================================================
--- src/vaadin-select-overlay.js
+++ src/vaadin-select-overlay.js
@@ -4,12 +4,12 @@
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { defineCustomElement } from '@vaadin/component-base/src/define.js';
-import { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';
-import { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';
-import { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';
-import { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';
-import { css, registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { defineCustomElement } from '@scoped-vaadin/component-base/src/define.js';
+import { DirMixin } from '@scoped-vaadin/component-base/src/dir-mixin.js';
+import { OverlayMixin } from '@scoped-vaadin/overlay/src/vaadin-overlay-mixin.js';
+import { PositionMixin } from '@scoped-vaadin/overlay/src/vaadin-overlay-position-mixin.js';
+import { overlayStyles } from '@scoped-vaadin/overlay/src/vaadin-overlay-styles.js';
+import { css, registerStyles, ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 
 const selectOverlayStyles = css`
   :host {
@@ -24,12 +24,12 @@
   }
 `;
 
-registerStyles('vaadin-select-overlay', [overlayStyles, selectOverlayStyles], {
+registerStyles('vaadin24-select-overlay', [overlayStyles, selectOverlayStyles], {
   moduleId: 'vaadin-select-overlay-styles',
 });
 
 /**
- * An element used internally by `<vaadin-select>`. Not intended to be used separately.
+ * An element used internally by `<vaadin24-select>`. Not intended to be used separately.
  *
  * @customElement
  * @extends HTMLElement
@@ -41,7 +41,7 @@
  */
 export class SelectOverlay extends PositionMixin(OverlayMixin(DirMixin(ThemableMixin(PolymerElement)))) {
   static get is() {
-    return 'vaadin-select-overlay';
+    return 'vaadin24-select-overlay';
   }
 
   static get template() {
@@ -60,7 +60,7 @@
     super.ready();
 
     // When setting `opened` as an attribute, the overlay is already teleported to body
-    // by the time when `ready()` callback of the `vaadin-select` is executed by Polymer,
+    // by the time when `ready()` callback of the `vaadin24-select` is executed by Polymer,
     // so querySelector() would return null. So we use this workaround to set properties.
     this.owner = this.__dataHost;
     this.owner._overlayElement = this;
