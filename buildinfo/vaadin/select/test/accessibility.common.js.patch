Index: test/accessibility.common.js
===================================================================
--- test/accessibility.common.js
+++ test/accessibility.common.js
@@ -1,21 +1,21 @@
 import { expect } from '@vaadin/chai-plugins';
 import { fixtureSync, nextRender, nextUpdate } from '@vaadin/testing-helpers';
 import { sendKeys } from '@web/test-runner-commands';
-import '@vaadin/item/vaadin-item.js';
-import '@vaadin/list-box/vaadin-list-box.js';
+import '@scoped-vaadin/item/vaadin-item.js';
+import '@scoped-vaadin/list-box/vaadin-list-box.js';
 
 describe('accessibility', () => {
   let select, valueButton;
 
   beforeEach(async () => {
-    select = fixtureSync(`<vaadin-select label="Label"></vaadin-select>`);
+    select = fixtureSync(`<vaadin24-select label="Label"></vaadin24-select>`);
     await nextRender();
     select.items = [
       { label: 'Option 1', value: 'Option 1' },
       { label: 'Option 2', value: 'Option 2' },
     ];
     await nextUpdate(select);
-    valueButton = select.querySelector('vaadin-select-value-button');
+    valueButton = select.querySelector('vaadin24-select-value-button');
   });
 
   it('should toggle aria-expanded attribute on the value button on open', async () => {
@@ -59,14 +59,14 @@
 
   describe('accessible-name', () => {
     beforeEach(async () => {
-      select = fixtureSync('<vaadin-select label="label"></vaadin-select>');
+      select = fixtureSync('<vaadin24-select label="label"></vaadin24-select>');
       await nextRender();
       select.items = [
         { label: 'Option 1', value: 'Option 1' },
         { label: 'Option 2', value: 'Option 2' },
       ];
       await nextUpdate(select);
-      valueButton = select.querySelector('vaadin-select-value-button');
+      valueButton = select.querySelector('vaadin24-select-value-button');
     });
 
     it('should be null by default', () => {
@@ -149,14 +149,14 @@
 
     describe('accessible-name is set initially', () => {
       beforeEach(async () => {
-        select = fixtureSync('<vaadin-select label="label" accessible-name="accessible name"></vaadin-select>');
+        select = fixtureSync('<vaadin24-select label="label" accessible-name="accessible name"></vaadin24-select>');
         await nextRender();
         select.items = [
           { label: 'Option 1', value: 'Option 1' },
           { label: 'Option 2', value: 'Option 2' },
         ];
         await nextUpdate(select);
-        valueButton = select.querySelector('vaadin-select-value-button');
+        valueButton = select.querySelector('vaadin24-select-value-button');
       });
 
       it('should have accessible-name value as slotted element text content', () => {
@@ -178,9 +178,9 @@
 
       describe('no items added initially', () => {
         beforeEach(async () => {
-          select = fixtureSync('<vaadin-select label="label" accessible-name="accessible name"></vaadin-select>');
+          select = fixtureSync('<vaadin24-select label="label" accessible-name="accessible name"></vaadin24-select>');
           await nextRender();
-          valueButton = select.querySelector('vaadin-select-value-button');
+          valueButton = select.querySelector('vaadin24-select-value-button');
         });
 
         it('should have slotted element id value in aria-labelledby', () => {
@@ -193,14 +193,14 @@
 
   describe('accessible-name-ref', () => {
     beforeEach(async () => {
-      select = fixtureSync('<vaadin-select label="label"></vaadin-select>');
+      select = fixtureSync('<vaadin24-select label="label"></vaadin24-select>');
       await nextRender();
       select.items = [
         { label: 'Option 1', value: 'Option 1' },
         { label: 'Option 2', value: 'Option 2' },
       ];
       await nextUpdate(select);
-      valueButton = select.querySelector('vaadin-select-value-button');
+      valueButton = select.querySelector('vaadin24-select-value-button');
     });
 
     it('should be null by default', () => {
@@ -269,14 +269,14 @@
 
     describe('accessible-name-ref is set initially', () => {
       beforeEach(async () => {
-        select = fixtureSync('<vaadin-select label="label" accessible-name-ref="accessible-name-ref"></vaadin-select>');
+        select = fixtureSync('<vaadin24-select label="label" accessible-name-ref="accessible-name-ref"></vaadin24-select>');
         await nextRender();
         select.items = [
           { label: 'Option 1', value: 'Option 1' },
           { label: 'Option 2', value: 'Option 2' },
         ];
         await nextUpdate(select);
-        valueButton = select.querySelector('vaadin-select-value-button');
+        valueButton = select.querySelector('vaadin24-select-value-button');
       });
 
       it('should have property value in aria-labelledby', () => {
@@ -293,10 +293,10 @@
       describe('no items added initially', () => {
         beforeEach(async () => {
           select = fixtureSync(
-            '<vaadin-select label="label" accessible-name-ref="accessible-name-ref"></vaadin-select>',
+            '<vaadin24-select label="label" accessible-name-ref="accessible-name-ref"></vaadin24-select>',
           );
           await nextRender();
-          valueButton = select.querySelector('vaadin-select-value-button');
+          valueButton = select.querySelector('vaadin24-select-value-button');
         });
 
         it('should have property value in aria-labelledby', () => {
