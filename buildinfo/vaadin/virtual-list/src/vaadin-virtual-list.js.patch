Index: src/vaadin-virtual-list.js
===================================================================
--- src/vaadin-virtual-list.js
+++ src/vaadin-virtual-list.js
@@ -1,25 +1,26 @@
+import { internalCustomElements } from '@scoped-vaadin/internal-custom-elements-registry';
 /**
  * @license
  * Copyright (c) 2021 - 2022 Vaadin Ltd.
  * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
 import { html, PolymerElement } from '@polymer/polymer/polymer-element.js';
-import { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';
-import { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';
-import { OverflowController } from '@vaadin/component-base/src/overflow-controller.js';
-import { processTemplates } from '@vaadin/component-base/src/templates.js';
-import { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';
-import { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
+import { ControllerMixin } from '@scoped-vaadin/component-base/src/controller-mixin.js';
+import { ElementMixin } from '@scoped-vaadin/component-base/src/element-mixin.js';
+import { OverflowController } from '@scoped-vaadin/component-base/src/overflow-controller.js';
+import { processTemplates } from '@scoped-vaadin/component-base/src/templates.js';
+import { Virtualizer } from '@scoped-vaadin/component-base/src/virtualizer.js';
+import { ThemableMixin } from '@scoped-vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';
 
 /**
- * `<vaadin-virtual-list>` is a Web Component for displaying a virtual/infinite list of items.
+ * `<vaadin23-virtual-list>` is a Web Component for displaying a virtual/infinite list of items.
  *
  * ```html
- * <vaadin-virtual-list></vaadin-virtual-list>
+ * <vaadin23-virtual-list></vaadin23-virtual-list>
  * ```
  *
  * ```js
- * const list = document.querySelector('vaadin-virtual-list');
+ * const list = document.querySelector('vaadin23-virtual-list');
  * list.items = items; // An array of data items
  * list.renderer = (root, list, {item, index}) => {
  *   root.textContent = `#${index}: ${item.name}`
@@ -67,7 +68,7 @@
   }
 
   static get is() {
-    return 'vaadin-virtual-list';
+    return 'vaadin23-virtual-list';
   }
 
   static get properties() {
@@ -83,7 +84,7 @@
        * Receives three arguments:
        *
        * - `root` The render target element representing one item at a time.
-       * - `virtualList` The reference to the `<vaadin-virtual-list>` element.
+       * - `virtualList` The reference to the `<vaadin23-virtual-list>` element.
        * - `model` The object with the properties related with the rendered
        *   item, contains:
        *   - `model.index` The index of the rendered item.
@@ -201,6 +202,6 @@
   }
 }
 
-customElements.define(VirtualList.is, VirtualList);
+internalCustomElements.define(VirtualList.is, VirtualList);
 
 export { VirtualList };
